{"version":3,"sources":["serviceWorker.js","QRDialog.js","surveyModel.js","Questions.js","App.js","localstore/index.js","module/providers.js","module/errors.js","module/actions.js","module/sequences.js","module/index.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","connect","props","react_default","a","createElement","Dialog_default","fullScreen","open","AppBar_default","Toolbar_default","IconButton_default","color","onClick","onClose","aria-label","Close_default","Typography_default","variant","lib_default","style","width","onScan","data","onData","surveyModel","model","Survey","metaData","addProperty","name","Questions","_this","this","_this$props","get","palette","theme","themeColors","ThemeColors","primary","main","dark","text","secondary","divider","background","paper","default","light","applyTheme","questions","_templateObject","pageNum","_templateObject2","undefined","currentPageNo","reaction","_templateObject3","_ref","_templateObject4","_ref2","updatePages","setData","survey","setPages","pages","visiblePages","map","page","hasErrors","title","_this2","_this$props2","Object","objectWithoutProperties","survey_react","assign","onCurrentPageChanged","_templateObject5","setPage","onPageVisibleChanged","bind","onPageAdded","onValueChanged","_ref3","value","setTimeout","completedHtml","ReactDOMServer","renderToString","onAfterRenderQuestion","_ref4","question","htmlElement","cerebralbutton","seq","sequences","_templateObject6","ReactDOM","render","Button_default","Component","_templateObject7","init","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","withTheme","params","queryString","parse","search","createMuiTheme","type","gold","addEventListener","e","preventDefault","install","prompt","App","classes","styles","Fragment","CssBaseline_default","className","position","appBar","menuButton","showNavigation","Menu_default","disabled","some","submit","Send_default","grow","data-theme","SwipeableDrawer_default","navigationOpen","onOpen","hideNavigation","List_default","ListItem_default","key","button","selected","setSurveyPage","ListItemIcon_default","Warning_default","Done_default","ListItemText_default","src_QRDialog","droneQRScannerActive","hideDroneQRScanner","sensorQRScannerActive","hideSensorQRScanner","Paper_default","square","src_Questions","isSinglePage","singlePage","onComplete","submitResults","bottomBar","MobileStepper_default","steps","length","activeStep","mobileStepper","nextButton","goNextPage","NavigateNext_default","backButton","goPreviousPage","NavigateBefore_default","App_templateObject","App_templateObject2","App_templateObject3","App_templateObject4","App_templateObject5","App_templateObject6","App_templateObject7","App_templateObject8","App_templateObject9","App_templateObject10","App_templateObject11","App_templateObject12","showDroneQRScanner","_templateObject13","showSensorQRScanner","_templateObject14","_templateObject15","_templateObject16","_templateObject17","login","_templateObject18","logout","_templateObject19","google","_templateObject20","createSheet","_templateObject21","_templateObject22","withStyles","root","flexGrow","top","bottom","marginLeft","marginRight","client","gapi","GetLocationError","_CerebralError","message","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","inherits","CerebralError","GAPIError","_CerebralError2","err","result","geolocation","getCurrentLoc","_getCurrentLoc","asyncToGenerator","regenerator_default","mark","_callee","msg","wrap","_context","prev","next","Promise","resolve","reject","getCurrentPosition","pos","coords","abrupt","sent","t0","t1","code","stop","apply","arguments","setAnswer","setValue","num","nextPage","previousPage","prevPage","completeLastPage","gapiClient","_init","_callee2","_context2","googleapi","tap","load","callback","onerror","timeout","ontimeout","discoveryDocs","auth","auth2","getAuthInstance","listener","signedIn","context","isSignedIn","listen","_x","_get","_callee3","_context3","_ref5","grants","scope","reduce","b","concat","currentUser","grant","googleappdata","getData","_getData","_callee4","_ref6","drive","_ref7","_context4","files","list","spaces","q","fields","appProperties","initData","_initData","_callee5","_ref8","_ref8$body","body","_ref9","_ref10","_context5","create","resource","mimeType","parents","_x2","googlesheets","_createSheet","_callee6","_ref11","sheets","_ref12","_context6","spreadsheets","getSheet","_getSheet","_callee7","id","_ref13","_ref14","sheet","_context7","values","spreadsheetId","range","XLSX","utils","aoa_to_sheet","sheet_to_json","_x3","writeSheet","_writeSheet","_callee8","_ref15","_ref16","_context8","json_to_sheet","header","update","valueInputOption","includeValuesInResponse","majorDimension","_x4","_x5","addRow","_addRow","_callee9","cols","row","_ref17","_context9","append","insertDataOption","_x6","_x7","_x8","answer","module_actions_createSheet","results","serialized","keys","forEach","JSON","stringify","deserialized","startsWith","substring","resultsId","path","found","notfound","paths","set","sequences_templateObject","sequences_templateObject2","sequences_templateObject3","sequences_templateObject4","_initGapi","sequences_templateObject5","sequences_templateObject6","sequences_templateObject7","sequences_templateObject8","sequences_templateObject9","sequences_templateObject10","sequences_templateObject11","setSurveyData","sequences_templateObject12","sequences_templateObject13","actions","sequences_templateObject14","sequences_templateObject15","sequences_templateObject16","sequences_templateObject17","completeSurvey","done","setCurrentLocation","currentLoc","latitude","longitude","sequences_templateObject18","sequences_templateObject19","locations","sequences_templateObject20","sequences_templateObject21","sequences_templateObject22","loadappdata","_x9","_loadAppData","_templateObject23","_templateObject24","_templateObject25","_createAppData","_templateObject26","_templateObject27","_templateObject28","_templateObject29","_loadPastResults","_deserializeResults","_templateObject30","_templateObject31","_templateObject32","_templateObject33","_templateObject34","when","_templateObject35","true","false","push","_templateObject36","_templateObject37","_templateObject38","_templateObject39","_serializeResults","_templateObject40","_templateObject41","_uploadResults","store","providers","localstore","ls","val","clear","initialized","persistState","localstore_templateObject","success","localstore_templateObject2","merge","localstore_templateObject3","localstore_templateObject4","localstore_templateObject5","localstore_templateObject6","localstore_templateObject7","reactions","defineProperty","Reaction","localstore_templateObject8","localstore_templateObject9","obj","src_module","surveyData","pastData","showNavigationButtons","goNextPageAutomatic","clearInvisibleValues","checkErrorsMode","elements","choices","defaultValue","inputType","DateTime","local","toFormat","panelCount","minPanelCount","panelAddText","panelRemoveText","templateTitle","templateElements","isRequired","visibleIf","placeHolder","description","validators","regex","allowMultiple","hasOther","hideIfChoicesEmpty","make","i","enableIf","valueName","requiredIf","html","Error","modules","app","devtools","_cerebral_react","src_App_0","document","getElementById","URL","process","href","origin","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.85b45ce9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {connect} from '@cerebral/react';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport QrReader from 'react-qr-reader';\r\n\r\nfunction QRDialog(props) {\r\n    return (\r\n        <Dialog\r\n            fullScreen\r\n            open={props.open}\r\n        >\r\n          <AppBar>\r\n            <Toolbar>\r\n              <IconButton color='inherit' onClick={props.onClose} aria-label='Close'>\r\n                <CloseIcon />\r\n              </IconButton>\r\n              <Typography variant='h6' color='inherit'>\r\n                Scan QR code\r\n              </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n            <QrReader\r\n                style={{width: '100%'}}\r\n                onScan={data => {\r\n                    if (!data) {\r\n                        return;\r\n                    }\r\n\r\n\t\t\t\t\tprops.onData(data);\r\n                    props.onClose();\r\n                }}\r\n            />\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default connect({\r\n}, QRDialog);\r\n","// TODO: This is probably the wrong way to do stuff, but I don't know cerebral\r\n// Want a singleton of survey model\r\nexport default {\r\n    model: null\r\n};\r\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactDOMServer from 'react-dom/server';\n\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport Button from '@material-ui/core/Button';\nimport {withTheme} from '@material-ui/core/styles';\n\nimport * as Survey from 'survey-react';\nimport 'survey-react/survey.css';\n\nimport surveyModel from './surveyModel';\n\nSurvey.JsonObject.metaData.addProperty('question', {\n    name: 'cerebralbutton',\n});\n\nclass Questions extends Component {\n    componentWillMount() {\n        const {get, theme} = this.props;\n\n        // Apply MUI theme to survey\n        const {palette} = theme;\n        let themeColors = Survey.StylesManager.ThemeColors['default'];\n        themeColors[\"$main-color\"] = palette.primary.main;\n        themeColors[\"$main-hover-color\"] = palette.primary.dark;\n        themeColors[\"$text-color\"] = palette.text.primary;\n        themeColors[\"$header-color\"] = palette.secondary.main;\n        themeColors[\"$border-color\"] = palette.divider;\n        themeColors[\"$header-background-color\"] = palette.secondary.main;\n        themeColors[\"$body-background-color\"] = palette.background.paper;\n        themeColors[\"$body-container-background-color\"] = palette.background.paper;\n        themeColors[\"$inputs-background-color\"] = palette.background.default;\n        themeColors[\"$error-color\"] = palette.error.main;\n        themeColors[\"$error-background-color\"] = palette.error.light;\n        Survey.StylesManager.applyTheme('default');\n\n        this.model = new Survey.Model(this.props.questions);\n        surveyModel.model = this.model;\n\n        // TODO: I'm sure this is isn't right with cerebral..\n        let data = get(state`surveyData`);\n        if (data) {\n            this.model.data = data;\n        }\n        let pageNum = get(state`pageNum`);\n        if (pageNum !== undefined) {\n            this.model.currentPageNo = pageNum;\n        }\n\n        this.props.reaction('changePage',\n            {\n                pageNum: state`pageNum`,\n            },\n            ({pageNum}) => this.model.currentPageNo = pageNum\n        );\n        this.props.reaction('changeData',\n            {\n                data: state`surveyData`,\n            },\n            ({data}) => this.model.data = data\n        );\n\n        this.updatePages(this.model);\n        this.props.setData({data: this.model.data});\n    }\n\n    updatePages(survey) {\n        this.props.setPages({\n            pages: survey.visiblePages.map((page) => ({\n                error: page.hasErrors(false, false),\n                name: page.name,\n                title: page.title,\n            }))\n        });\n    }\n\n    render() {\n        let {get, ...props} = this.props;\n        return (\n            <Survey.Survey\n                {...props}\n                model={this.model}\n                onCurrentPageChanged={(survey) => {\n                    if (get(state`pageNum`) !== survey.currentPageNo) {\n                        props.setPage({pageNum: survey.currentPageNo});\n                    }\n                }}\n                onPageVisibleChanged={this.updatePages.bind(this)}\n                onPageAdded={this.updatePages.bind(this)}\n                onValueChanged={(survey, {name, value}) => {\n                    props.setData({data: survey.data});\n                    // No idea why, but cerebral freaks out if I call this\n                    // without the setTimeout...\n                    setTimeout(() => this.updatePages(survey));\n                }}\n                completedHtml={\n                    ReactDOMServer.renderToString(props.completedHtml)\n                }\n                onAfterRenderQuestion={\n                    (survey, {question, htmlElement}) => {\n                        if (!question.cerebralbutton) {\n                            return;\n                        }\n\n                        let seq = get(sequences`${question.cerebralbutton}`);\n                        ReactDOM.render(\n                            <Button onClick={() => seq()}>\n                                {question.title}\n                            </Button>\n                        , htmlElement);\n                    }\n                }\n            />\n        );\n    }\n}\n\nexport default connect(\n    {\n        questions: state`questions`,\n        init: sequences`initSurvey`,\n        data: state`surveyData`,\n        setData: sequences`setSurveyData`,\n        setPage: sequences`setSurveyPage`,\n        setPages: sequences`setPages`,\n    },\n    withTheme()(Questions)\n);\n","import React, {Component} from 'react';\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport {withStyles} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport SendIcon from '@material-ui/icons/Send';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Drawer from '@material-ui/core/SwipeableDrawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport queryString from 'query-string';\n\nimport './App.css';\nimport QRDialog from './QRDialog';\nimport Questions from './Questions';\n\nimport {createMuiTheme, MuiThemeProvider} from '@material-ui/core/styles';\nimport gold from '@material-ui/core/colors/amber';\n\n// Parse query string\nconst params = queryString.parse(window.location.search);\n\n// All the following keys are optional.\n// We try our best to provide a great default value.\nconst theme = createMuiTheme({\n    palette: {\n        type: params.theme || 'dark',\n        primary: gold,\n    },\n});\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n    },\n    appBar: {\n        top: 0,\n        bottom: 'auto',\n    },\n    bottomBar: {\n        bottom: 0,\n        top: 'auto',\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n};\n\nwindow.addEventListener('beforeinstallprompt', (e) => {\n    // Prevent Chrome 67 and earlier from automatically showing the prompt\n    e.preventDefault();\n    // Stash the event so it can be triggered later.\n    //deferredPrompt = e;\n    if (params.install) {\n        prompt(e); // TODO: Don't show prompt immediately?\n    }\n});\n\nclass App extends Component {\n\n    componentWillMount() {\n        this.props.init();\n    }\n\n    render() {\n        let props = this.props;\n        const {classes} = props;\n        return (\n            <MuiThemeProvider theme={theme}>\n            <React.Fragment>\n            <CssBaseline />\n            <div className='App'>\n                <AppBar position='fixed' className={classes.appBar}>\n                    <Toolbar>\n                        <IconButton\n                            className={classes.menuButton}\n                            color='inherit'\n                            onClick={() => props.showNavigation()}\n                            aria-label='Menu'>\n                            <MenuIcon\n                            />\n                        </IconButton>\n                        <Button\n                            color='inherit'\n                            disabled={props.pages.some(page => page.error)}\n                            onClick={() => props.submit()}>\n                            Submit\n                            <SendIcon />\n                        </Button>\n                        <div className={classes.grow} />\n                        <div className=\"g-signin2\" data-theme='dark' />\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    open={props.navigationOpen}\n                    onOpen={()=>props.showNavigation()}\n                    onClose={()=>props.hideNavigation()}\n                >\n                    <List>\n                        {props.pages.map(({name, title, error}, pageNum) => (\n                            <ListItem\n                                key={name}\n                                button\n                                selected={pageNum === props.pageNum}\n                                className={error ? 'page-err' : 'page-complete'}\n                                onClick={()=>props.setSurveyPage({pageNum})}>\n                                <ListItemIcon>\n                                    {error ? <WarningIcon /> : <DoneIcon />}\n                                </ListItemIcon>\n                                <ListItemText primary={title} />\n                            </ListItem>\n                        ))}\n                    </List>\n                </Drawer>\n                <QRDialog\n                    open={props.droneQRScannerActive}\n                    onClose={props.hideDroneQRScanner}\n                />\n                <QRDialog\n                    open={props.sensorQRScannerActive}\n                    onClose={props.hideSensorQRScanner}\n                />\n                <Paper square>\n                    <Questions\n                        isSinglePage={params.singlePage !== undefined}\n                        completedHtml={\n                            (<div> woo done!</div>)\n                        }\n                        onComplete={({data}) => props.submitResults()}\n                    />\n                </Paper>\n                <AppBar position='fixed' className={classes.bottomBar}>\n                    <MobileStepper\n                        steps={props.pages.length}\n                        position='static'\n                        activeStep={props.pageNum}\n                        className={classes.mobileStepper}\n                        nextButton={\n                            <Button\n                                color='primary'\n                                disabled={props.pageNum === props.pages.length - 1}\n                                onClick={() => props.goNextPage()}>\n                                Next\n                                <NavigateNextIcon />\n                            </Button>\n                        }\n                        backButton={\n                            <Button\n                                color='primary'\n                                disabled={props.pageNum === 0}\n                                onClick={() => props.goPreviousPage()}>\n                                <NavigateBeforeIcon />\n                                Previous\n                            </Button>\n                        }\n                    />\n                </AppBar>\n            </div>\n            </React.Fragment>\n            </MuiThemeProvider>\n        );\n    }\n}\n\nexport default connect({\n    navigationOpen: state`navigationOpen`,\n    showNavigation: sequences`showNavigation`,\n    hideNavigation: sequences`hideNavigation`,\n    setSurveyPage: sequences`setSurveyPage`,\n    pages: state`pages`,\n    pageNum: state`pageNum`,\n    goNextPage: sequences`goNextPage`,\n    goPreviousPage: sequences`goPreviousPage`,\n    submit: sequences`completeSurvey`,\n    questions: state`questions`,\n    droneQRScannerActive: state`droneQRScannerActive`,\n    sensorQRScannerActive: state`sensorQRScannerActive`,\n    showDroneQRScanner: sequences`showDroneQRScanner`,\n    showSensorQRScanner: sequences`showSensorQRScanner`,\n    hideDroneQRScanner: sequences`hideDroneQRScanner`,\n    hideSensorQRScanner: sequences`hideSensorQRScanner`,\n    init: sequences`init`,\n    login: sequences`login`,\n    logout: sequences`logout`,\n    google: state`google`,\n    createSheet: sequences`createSheet`,\n    submitResults: sequences`submitResults`,\n}, withStyles(styles)(App));\n","import {Reaction} from 'cerebral';\r\nimport {state, props, sequences} from 'cerebral/tags'\r\nimport {set, merge, when} from 'cerebral/factories';\r\n\r\nimport ls from 'local-storage';\r\n\r\nexport default (paths) => ({\r\n    providers: {\r\n        localstore: {\r\n            get(key) {\r\n                return ls.get(key);\r\n            },\r\n\r\n            set(key, val) {\r\n                return ls.set(key, val);\r\n            },\r\n\r\n            clear() {\r\n                return ls.clear();\r\n            },\r\n        },\r\n    },\r\n\r\n    state:{\r\n        initialized: false,\r\n    },\r\n\r\n    sequences: {\r\n        persistState: [\r\n            when(state`store.initialized`), // Wait for init?\r\n            {\r\n                true: ({localstore, props}) => {\r\n                    let {key, val} = props;\r\n                    return {success: localstore.set(key, val)};\r\n                },\r\n                false: [],\r\n            },\r\n        ],\r\n        init: [\r\n            // Load each path from store and set it in state\r\n            paths.map(path => [\r\n                ({localstore}) => ({val: localstore.get(path)}),\r\n                when(props`val`, val => val && typeof val === 'object'),\r\n                {\r\n                    true: [merge(state`${path}`, props`val`)],\r\n                    false: [set(state`${path}`, props`val`)],\r\n                }\r\n            ]),\r\n            set(state`store.initialized`, true),\r\n        ],\r\n    },\r\n\r\n    // Generate a reaction for each path in the store\r\n    reactions: paths.map(path => ({[path] : Reaction(\r\n        {\r\n            val: state`${path}`,\r\n        },\r\n        ({val, get}) => get(sequences`store.persistState`)({key: path, val})\r\n    )})).reduce((obj, reaction) => Object.assign(obj, reaction), {}),\r\n});\r\n","import Promise from 'bluebird';\r\n//import {state} from 'cerebral';\r\nimport googleapi from 'google-client-api';\r\nimport XLSX from 'xlsx';\r\n\r\nimport {GetLocationError, GAPIError} from './errors';\r\nimport model from '../surveyModel';\r\n\r\nexport const geolocation = {\r\n    async getCurrentLoc() {\r\n        try {\r\n            return await new Promise((resolve, reject) =>\r\n                    navigator.geolocation.getCurrentPosition(resolve, reject))\r\n                .then(pos => pos.coords);\r\n        } catch (err) {\r\n            let msg;\r\n\r\n            switch (err.code) {\r\n                case 1: // PERMISSION_DENIED\r\n                    msg = 'Permission denied';\r\n                    break;\r\n                case 2: // POSITION_UNAVAILABLE\r\n                    msg = 'Position unavailable';\r\n                    break;\r\n                case 3: // TIMEOUT\r\n                    msg = 'Timeout obtaining position';\r\n                    break;\r\n                default:\r\n                    msg = 'Unknown error';\r\n            }\r\n\r\n            throw new GetLocationError(msg);\r\n        }\r\n    }\r\n};\r\n\r\nexport const survey = {\r\n    setAnswer(name, value) {\r\n        model.model.setValue(name, value);\r\n    },\r\n\r\n    setPage(num) {\r\n        model.model.currentPageNo = num;\r\n    },\r\n\r\n    nextPage() {\r\n        return model.model.nextPage();\r\n    },\r\n\r\n    previousPage() {\r\n        return model.model.prevPage();\r\n    },\r\n\r\n    setData(data) {\r\n        model.model.data = data;\r\n    },\r\n\r\n    submit() {\r\n        return model.model.completeLastPage();\r\n    },\r\n};\r\n\r\nlet client;\r\nlet gapi;\r\nexport const gapiClient = {\r\n    // Do one-time gapi setup not effected by login/logout\r\n    async init({login, logout}) {\r\n        gapi = Promise.resolve(googleapi())\r\n            // Load client library\r\n            .tap(({load}) => new Promise((resolve, reject) => load('client', {\r\n                callback: resolve,\r\n                onerror: reject,\r\n                timeout: 10000,\r\n                ontimeout: reject,\r\n            })))\r\n            // Initialize client (load sheets and drive APIs)\r\n            .tap(({client}) => client.init({\r\n                discoveryDocs: [\r\n                    'https://www.googleapis.com/discovery/v1/apis/drive/v3/rest',\r\n                    'https://sheets.googleapis.com/$discovery/rest?version=v4'\r\n                ],\r\n            }))\r\n            // Listen for login/logout\r\n            .tap(({auth2}) => {\r\n                let auth = auth2.getAuthInstance();\r\n                let listener = signedIn => {\r\n                    if (!signedIn) {\r\n                        client = undefined;\r\n                        logout && this.context.get(logout)();\r\n                    } else {\r\n                        login && this.context.get(login)();\r\n                    }\r\n                };\r\n\r\n                auth.isSignedIn.listen(listener);\r\n                listener(auth.isSignedIn.get());\r\n            });\r\n        await gapi;\r\n    },\r\n\r\n    async get() {\r\n        if (client) {\r\n            return client;\r\n        }\r\n\r\n        client = await gapi\r\n            // Request needed scopes from user\r\n            .tap(({auth2}) => {\r\n                const grants = {\r\n                    scope: [\r\n                        'https://www.googleapis.com/auth/drive.file',\r\n                        'https://www.googleapis.com/auth/drive.appdata',\r\n                    ].reduce((a, b) => `${a} ${b}`),\r\n                };\r\n                let auth = auth2.getAuthInstance();\r\n\r\n                return auth.currentUser.get().grant(grants);\r\n            })\r\n            .get('client');\r\n\r\n        return client;\r\n    }\r\n}\r\nexport const googleappdata = {\r\n    async getData() {\r\n        let {drive} = await this.context.gapiClient.get();\r\n\r\n        let result;\r\n        try {\r\n            ({result} = await drive.files.list({\r\n                spaces: 'appDataFolder',\r\n                q: \"name='config.json'\",\r\n                fields: 'files(id, appProperties)',\r\n            }));\r\n        } catch (err) {\r\n            throw new GAPIError(err);\r\n        }\r\n\r\n        return result.files[0].appProperties;\r\n    },\r\n\r\n    async initData({body = {}}) {\r\n        let {drive} = await this.context.gapiClient.get();\r\n\r\n        try {\r\n            let {result} = await drive.files.create({\r\n                resource: {\r\n                    name: 'config.json',\r\n                    mimeType: 'application/json',\r\n                    parents: ['appDataFolder'],\r\n                    appProperties: body,\r\n                },\r\n            });\r\n            return result;\r\n        } catch (err) {\r\n            throw new GAPIError(err);\r\n        }\r\n    },\r\n}\r\nexport const googlesheets = {\r\n    async createSheet() {\r\n        let {sheets} = await this.context.gapiClient.get();\r\n\r\n        try {\r\n            let {result} = await sheets.spreadsheets.create({}, {});\r\n            return result;\r\n        } catch (err) {\r\n            throw new GAPIError(err);\r\n        }\r\n    },\r\n\r\n    async getSheet(id) {\r\n        let {sheets} = await this.context.gapiClient.get();\r\n\r\n        let result;\r\n        try {\r\n            ({result} = await sheets.spreadsheets.values.get({\r\n                spreadsheetId: id,\r\n                range: ['Sheet1'],\r\n            }));\r\n        } catch (err) {\r\n            throw new GAPIError(err);\r\n        }\r\n\r\n        if (!result.values) {\r\n            return [];\r\n        }\r\n\r\n        let sheet = XLSX.utils.aoa_to_sheet(result.values);\r\n        return XLSX.utils.sheet_to_json(sheet);\r\n    },\r\n\r\n    async writeSheet(id, data) {\r\n        let {sheets} = await this.context.gapiClient.get();\r\n\r\n        // Format data with spreadsheet lib\r\n        let sheet = XLSX.utils.json_to_sheet(data);\r\n        let values = XLSX.utils.sheet_to_json(sheet, {header: 1});\r\n\r\n        try {\r\n            let {result} = await sheets.spreadsheets.values.update({\r\n                spreadsheetId: id,\r\n                range: sheet['!ref'],\r\n                valueInputOption: 'USER_ENTERED', // 'RAW'\r\n                includeValuesInResponse: false,\r\n            }, {\r\n                majorDimension: 'ROWS',\r\n                values,\r\n            });\r\n            return result;\r\n        } catch (err) {\r\n            throw new GAPIError(err);\r\n        }\r\n    },\r\n\r\n    async addRow(id, cols, row) {\r\n        let {sheets} = await this.context.gapiClient.get();\r\n\r\n        return sheets.spreadsheets.values.append({\r\n            spreadsheetId: id,\r\n            valueInputOption: 'USER_ENTERED', // 'RAW'\r\n            insertDataOption: 'INSERT_ROWS', // 'OVERWRITE'\r\n            includeValuesInResponse: false,\r\n        }, {\r\n            majorDimension: 'ROWS',\r\n            values: [row],\r\n        });\r\n    },\r\n};\r\n","import {CerebralError} from 'cerebral';\r\n\r\nexport class GetLocationError extends CerebralError {\r\n    constructor(message) {\r\n        super(message);\r\n        this.name = 'GetLocationError';\r\n    }\r\n}\r\n\r\nexport class GAPIError extends CerebralError {\r\n    constructor(err) {\r\n        // gapi doesn't always throw the same sorts of things..\r\n        let error = err;\r\n        if (err.result && error.result.error) {\r\n            error = err.result.error;\r\n        }\r\n\r\n        super(error.message);\r\n        this.name = 'GAPIError';\r\n        this.result = error;\r\n    }\r\n}\r\n","//import {state} from 'cerebral';\r\n\r\nexport function getCurrentLocation({geolocation}) {\r\n    return geolocation.getCurrentLoc()\r\n        .then(({latitude, longitude}) => ({currentLoc: {latitude, longitude}}));\r\n}\r\n\r\nexport function setAnswer({survey, props}) {\r\n    return survey.setAnswer(props.question, props.answer);\r\n}\r\nexport function setSurveyPage({survey, props}) {\r\n    return survey.setPage(props.pageNum);\r\n}\r\nexport function setSurveyData({survey, props}) {\r\n    return survey.setData(props.data);\r\n}\r\nexport function nextPage({survey}) {\r\n    return {error: survey.nextPage()};\r\n}\r\nexport function previousPage({survey}) {\r\n    return {error: survey.previousPage()};\r\n}\r\nexport function completeSurvey({survey, props}) {\r\n    return {done: survey.submit()};\r\n}\r\n\r\nexport async function initGapi({gapiClient, props}) {\r\n\treturn gapiClient.init(props);\r\n}\r\nexport async function createSheet({googlesheets}) {\r\n\tlet sheet = await googlesheets.createSheet();\r\n\treturn {sheet};\r\n}\r\nexport async function initSheet({googlesheets, props}) {\r\n\tlet {result} = await googlesheets.createSheet();\r\n\tawait googlesheets.addRow(result.spreadsheetId, props.headerRow);\r\n}\r\nexport async function serializeResults({props}) {\r\n\tlet {results} = props;\r\n\r\n\t// TODO: Better way to handle arrays and such in a spreadsheet?\r\n\tlet serialized = results.map(result => {\r\n\t\tlet serialized = {};\r\n\t\tObject.keys(result).forEach(key => {\r\n\t\t\tif (result[key] && typeof result[key] === 'object') {\r\n\t\t\t\tserialized['$$' + key] = JSON.stringify(result[key]);\r\n\t\t\t} else {\r\n\t\t\t\tserialized[key] = result[key];\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn serialized;\r\n\t});\r\n\r\n\treturn {results: serialized};\r\n}\r\nexport async function deserializeResults({props}) {\r\n\tlet {results} = props;\r\n\r\n\tlet deserialized = results.map(result => {\r\n\t\tlet deserialized = {};\r\n\t\tObject.keys(result).forEach(key => {\r\n\t\t\tif (key.startsWith('$$')) {\r\n\t\t\t\tdeserialized[key.substring(2)] = JSON.parse(result[key]);\r\n\t\t\t} else {\r\n\t\t\t\tdeserialized[key] = result[key];\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn deserialized;\r\n\t});\r\n\r\n\treturn {results: deserialized};\r\n}\r\nexport async function loadPastResults({googlesheets, props}) {\r\n\tlet {resultsId} = props;\r\n\r\n\tlet results = (await googlesheets.getSheet(resultsId)) || [];\r\n\r\n\treturn {results};\r\n}\r\nexport async function uploadResults({googlesheets, props}) {\r\n\tlet {results, resultsId} = props;\r\n\r\n\treturn googlesheets.writeSheet(resultsId, results);\r\n}\r\n\r\nexport async function createAppData({googleappdata, props}) {\r\n    let result = await googleappdata.initData(props);\r\n\r\n    return {result};\r\n}\r\nexport async function loadAppData({googleappdata, path}) {\r\n    let data = await googleappdata.getData();\r\n\r\n    if (data) {\r\n        return path.found({body: data});\r\n    } else {\r\n        return path.notfound();\r\n    }\r\n}\r\n","import {set, push, when} from 'cerebral/factories';\r\nimport {state, sequences, props} from 'cerebral/tags';\r\nimport * as actions from './actions';\r\nimport {sequence, parallel} from 'cerebral';\r\n\r\nexport const init = [\r\n    set(props`login`, sequences`login`),\r\n    set(props`logout`, sequences`logout`),\r\n    actions.initGapi,\r\n    ({get}) => get(sequences`store.init`)(),\r\n];\r\n\r\nexport const showDroneQRScanner = [set(state`droneQRScannerActive`, true)];\r\nexport const hideDroneQRScanner = [set(state`droneQRScannerActive`, false)];\r\nexport const showSensorQRScanner = [set(state`sensorQRScannerActive`, true)];\r\nexport const hideSensorQRScanner = [set(state`sensorQRScannerActive`, false)];\r\nexport const showNavigation = [set(state`navigationOpen`, true)];\r\nexport const hideNavigation = [set(state`navigationOpen`, false)];\r\n\r\nexport const setSurveyData = [set(state`surveyData`, props`data`)];\r\nexport const setAnswer = [actions.setAnswer];\r\nexport const setSurveyPage = [\r\n    set(state`pageNum`, props`pageNum`),\r\n];\r\nexport const setPages = [set(state`pages`, props`pages`)];\r\nexport const goNextPage = [\r\n    actions.nextPage,\r\n    /*\r\n    set(props`pageNum`, state`pageNum`, num => num + 1),\r\n    set(state`pageNum`, props`pageNum`),\r\n    */\r\n];\r\nexport const goPreviousPage = [\r\n    actions.previousPage,\r\n    /*\r\n    set(props`pageNum`, state`pageNum`, num => num - 1),\r\n    set(state`pageNum`, props`pageNum`),\r\n    */\r\n];\r\nexport const completeSurvey = [actions.completeSurvey];\r\nexport const setCurrentLocation = [\r\n    actions.getCurrentLocation,\r\n    set(props`locations`, state`surveyData.locations`),\r\n    // Using the push factory seems to break things...\r\n    ({props}) => ({locations: props.locations.concat(props.currentLoc)}),\r\n\tset(props`question`, 'locations'),\r\n\tset(props`answer`, props`locations`),\r\n    actions.setAnswer,\r\n];\r\n\r\nexport const loadappdata = [\r\n    actions.loadAppData,\r\n    {\r\n        found: [],\r\n        notfound: [\r\n            actions.createSheet,\r\n            set(props`body`, {}),\r\n            set(props`body.resultsId`, props`sheet.spreadsheetId`),\r\n            actions.createAppData,\r\n        ],\r\n    },\r\n    set(state`resultsId`, props`body.resultsId`),\r\n];\r\n\r\n// Run _after_ login\r\nexport const login = [\r\n    loadappdata,\r\n    set(props`resultsId`, state`resultsId`),\r\n    actions.loadPastResults,\r\n    actions.deserializeResults,\r\n    set(state`pastData`, props`results`),\r\n    set(state`loggedin`, true),\r\n];\r\n// Runs _after_ logout\r\nexport const logout = [\r\n    set(state`loggedin`, false),\r\n    set(state`pastData`, []),\r\n];\r\n\r\nexport const createSheet = [actions.createSheet];\r\nexport const submitResults = [\r\n    when(state`loggedin`),\r\n    {\r\n        true: [],\r\n        false: login,\r\n    },\r\n    push(state`pastData`, state`surveyData`),\r\n    set(props`results`, state`pastData`),\r\n    actions.serializeResults,\r\n    set(props`resultsId`, state`resultsId`),\r\n    actions.uploadResults,\r\n];\r\n","//import { set } from 'cerebral/operators';\r\n//import { state } from 'cerebral/tags';\r\n\r\nimport {DateTime} from 'luxon';\r\nimport * as Survey from 'survey-react';\r\n\r\nimport localstore from '../localstore';\r\n\r\nimport * as providers from './providers';\r\nimport * as sequences from './sequences';\r\n\r\n// TODO: Get these from sheets\r\nconst sensors = [\r\n    {\r\n        make: 'Sony',\r\n        model: 'A6000',\r\n        type: 'RGB',\r\n    },\r\n    {\r\n        make: 'Parrot',\r\n        model: 'Sequoia',\r\n        type: 'Multispectral',\r\n    },\r\n];\r\nconst drones = [\r\n    {\r\n        make: 'Test',\r\n        model: 'testtest',\r\n        type: 'Fixed wing',\r\n    },\r\n];\r\n\r\nconst store = localstore(['pageNum', 'surveyData']);\r\n\r\nexport default {\r\n    sequences,\r\n    state: {\r\n        resultsId: null,\r\n        navigationOpen: true,\r\n        droneQRScannerActive: false,\r\n        sensorQRScannerActive: false,\r\n        surveyData: null,\r\n        pastData: [],\r\n        pages: [],\r\n        pageNum: 0,\r\n        questions: {\r\n            showNavigationButtons: false,\r\n            goNextPageAutomatic: true,\r\n            clearInvisibleValues: 'onHidden',\r\n            checkErrorsMode: 'onValueChanged',\r\n            pages: [\r\n                {\r\n                    name: 'general',\r\n                    title: 'General',\r\n                    elements: [\r\n                        {\r\n                            name: 'purpose',\r\n                            title: 'Purpose',\r\n                            type: 'dropdown',\r\n                            choices: [\r\n                                'UAV',\r\n                                'Planting',\r\n                                'Spraying',\r\n                                'Tilling',\r\n                                'Harvest'\r\n                            ],\r\n                            defaultValue: 'UAV' // TODO: remove default later\r\n                        },\r\n                        {\r\n                            name: 'datetime',\r\n                            title: 'Date/Time of data',\r\n                            type: 'text',\r\n                            inputType: 'datetime-local',\r\n                            defaultValue: DateTime.local()\r\n                                .toFormat(\"yyyy-MM-dd'T'HH:mm:ss\"),\r\n                        },\r\n                        {\r\n                            type: 'panel',\r\n                            elements: [\r\n                                {\r\n                                    // TODO: Support selecting region on a map\r\n                                    name: 'locations',\r\n                                    title: 'Collection locations',\r\n                                    type: 'paneldynamic',\r\n                                    panelCount: 1,\r\n                                    minPanelCount: 1,\r\n                                    panelAddText: 'Add Location',\r\n                                    panelRemoveText: 'Remove Location',\r\n                                    templateTitle: 'Location #{panelIndex}',\r\n                                    templateElements: [\r\n                                        {\r\n                                            name: 'latitude',\r\n                                            title: 'Latitude',\r\n                                            type: 'text',\r\n                                            isRequired: true,\r\n                                        },\r\n                                        {\r\n                                            name: 'longitude',\r\n                                            title: 'Longitude',\r\n                                            type: 'text',\r\n                                            isRequired: true,\r\n                                        },\r\n                                    ],\r\n                                },\r\n                                {\r\n                                    name: 'location-button',\r\n                                    title: 'Add current location',\r\n                                    type: 'html',\r\n                                    cerebralbutton: 'setCurrentLocation',\r\n                                },\r\n                            ],\r\n                        },\r\n                        {\r\n                            name: 'notes',\r\n                            title: 'Notes or comments',\r\n                            type: 'comment'\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    name: 'place',\r\n                    title: 'Place',\r\n                    visibleIf: '{purpose} == \"UAV\"',\r\n                    elements: [\r\n                        {\r\n                            name: 'client',\r\n                            title: 'Grower (or Client)',\r\n                            type: 'text',\r\n                            placeHolder: 'Farmer Frank',\r\n                        },\r\n                        {\r\n                            name: 'operation',\r\n                            title: 'Farm (or Operation)',\r\n                            type: 'text',\r\n                            placeHolder: 'Frank Farms',\r\n                        },\r\n                        {\r\n                            name: 'site',\r\n                            title: 'Field (or Site)',\r\n                            type: 'text',\r\n                            placeHolder: 'East Field',\r\n                        },\r\n                        {\r\n                            name: 'crop',\r\n                            title: 'Crop',\r\n                            type: 'text',\r\n                            placeHolder: 'corn',\r\n                        },\r\n                        {\r\n                            name:'prev-crop',\r\n                            title: 'Previous Crop',\r\n                            type: 'text',\r\n                            placeHolder: 'beans',\r\n                        },\r\n                        {\r\n                            name: 'weather',\r\n                            title: 'Weather',\r\n                            type: 'panel',\r\n                            elements: [\r\n                                {\r\n                                    name: 'weather-button',\r\n                                    title: 'Get Current Weather',\r\n                                    type: 'html',\r\n                                    // TODO: Implement functionality for button\r\n                                    cerebralbutton: 'setCurrentWeather',\r\n                                },\r\n                                {\r\n                                    name: 'temperature',\r\n                                    title: 'Temperature',\r\n                                    type: 'text',\r\n                                    //inputType: 'number',\r\n                                    placeHolder: '60 F'\r\n                                },\r\n                                {\r\n                                    name: 'windspeed',\r\n                                    title: 'Wind Speed',\r\n                                    type: 'text',\r\n                                    //inputType: 'number',\r\n                                    placeHolder: '10 mph',\r\n                                },\r\n                                {\r\n                                    name: 'winddirection',\r\n                                    title: 'Wind Direction',\r\n                                    type: 'text',\r\n                                    //inputType: 'number',\r\n                                    placeHolder: '35 deg',\r\n                                },\r\n                            ],\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    name: 'uav-operator',\r\n                    title: 'UAV Operator',\r\n                    visibleIf: '{purpose} == \"UAV\"',\r\n                    elements: [\r\n                        {\r\n                            name: 'remote-pics',\r\n                            title: 'Remote Pilot in Command (PIC)',\r\n                            description: 'remote PIC - A person who holds a remote pilot certificate with an sUAS rating and has the final authority and responsibility for the operation and safety of an sUAS operation conducted under part 107.',\r\n                            type: 'paneldynamic',\r\n                            panelCount: 1,\r\n                            minPanelCount: 1,\r\n                            panelAddText: 'Add Remote PIC',\r\n                            panelRemoveText: 'Remove Remote PIC',\r\n                            templateTitle: 'Remote PIC #{panelIndex}',\r\n                            templateElements: [\r\n                                {\r\n                                    name: 'remote-pic-name',\r\n                                    title: 'Name',\r\n                                    type: 'text',\r\n                                    isRequired: true,\r\n                                    placeHolder: 'Rusty Shackleford'\r\n                                },\r\n                                {\r\n                                    name: 'remote-pic-certificate',\r\n                                    title: 'Certificate Number or equivalent',\r\n                                    type: 'text',\r\n                                    isRequired: true,\r\n                                    placeHolder: '1234567',\r\n                                    validators: [\r\n                                        {\r\n                                            type: 'regex',\r\n                                            regex: /^[0-9]{7}$/,\r\n                                            text: 'Invalid license number'\r\n                                        }\r\n                                    ]\r\n                                },\r\n\r\n                            ],\r\n                        },\r\n                        {\r\n                            name: 'observer',\r\n                            title: 'Visual Observer (VO)',\r\n                            description: 'VO - A person acting as a flightcrew member who assists the small UA remote PIC and the person manipulating the controls to see and avoid other air traffic or objects aloft or on the ground.',\r\n                            type: 'paneldynamic',\r\n                            panelCount: 0,\r\n                            panelAddText: 'Add VO',\r\n                            panelRemoveText: 'Remove VO',\r\n                            templateTitle: 'VO #{panelIndex}',\r\n                            templateElements: [\r\n                                {\r\n                                    name: 'observer-name',\r\n                                    title: 'Name',\r\n                                    type: 'text',\r\n                                    isRequired: true,\r\n                                    placeHolder: 'John Doe'\r\n                                },\r\n                            ],\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    name: 'uav-drone',\r\n                    title: 'Drone Info',\r\n                    visibleIf: '{purpose} == \"UAV\"',\r\n                    elements: [\r\n                        {\r\n                            // TODO: make required for submission only\r\n                            name: 'drone-screenshots',\r\n                            title: 'DroneDeploy Screenshots',\r\n                            type: 'panel',\r\n                            elements: [\r\n                                {\r\n                                    name: 'drone-flight-planning',\r\n                                    title: 'Screenshot of Flight Planning',\r\n                                    type: 'file',\r\n                                    allowMultiple: false,\r\n                                },\r\n                                {\r\n                                    name: 'drone-advanced-flight-planning',\r\n                                    title: 'Screenshot of Advanced Flight Planning',\r\n                                    type: 'file',\r\n                                    allowMultiple: false,\r\n                                },\r\n                            ],\r\n                        },\r\n                        {\r\n                            name: 'drone-qr',\r\n                            title: 'Scan drone QR code',\r\n                            type: 'html',\r\n                            cerebralbutton: 'showDroneQRScanner',\r\n                        },\r\n                        {\r\n                            name: 'uav-drone-type',\r\n                            title: 'Type',\r\n                            type: 'dropdown',\r\n                            isRequired: true,\r\n                            defaultValue: 'Fixed wing',\r\n                            hasOther: true,\r\n                            choices: [\r\n                                'Fixed wing',\r\n                                'Multi-rotor',\r\n                                'Helicopter',\r\n                            ],\r\n                        },\r\n                        {\r\n                            name: 'uav-drone',\r\n                            title: 'Drone',\r\n                            type: 'dropdown',\r\n                            hideIfChoicesEmpty: true,\r\n                            choices: drones.map((e, i) => ({\r\n                                text: e.make + ' ' + e.model,\r\n                                value: e.make + ' ' + e.model,\r\n                                //value: i,\r\n                                visibleIf: `{uav-drone-type} == \"${e.type}\"`,\r\n                            })),\r\n                        },\r\n                        {\r\n                            name: 'uav-drone-make',\r\n                            title: 'Make',\r\n                            type: 'text',\r\n                            enableIf: '{uav-drone} empty'\r\n                        },\r\n                        {\r\n                            name: 'uav-drone-model',\r\n                            title: 'Model',\r\n                            type: 'text',\r\n                            enableIf: '{uav-drone} empty'\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    name: 'uav-sensors',\r\n                    title: 'Sensors',\r\n                    visibleIf: '{purpose} == \"UAV\"',\r\n                    elements: [\r\n                        {\r\n                            name: 'sensor-qr',\r\n                            type: 'html',\r\n                            cerebralbutton: 'showSensorQRScanner',\r\n                        },\r\n                        {\r\n                            name: 'sensors',\r\n                            title: 'Sensors',\r\n                            type: 'paneldynamic',\r\n                            panelCount: 0,\r\n                            panelAddText: 'Add Sensor',\r\n                            panelRemoveText: 'Remove Sensor',\r\n                            templateTitle: 'Sensor #{panelIndex}',\r\n                            templateElements: [\r\n                                {\r\n                                    name: 'uav-sensor-type',\r\n                                    valueName: 'type',\r\n                                    title: 'Type',\r\n                                    type: 'dropdown',\r\n                                    isRequired: true,\r\n                                    hasOther: true,\r\n                                    choices: [\r\n                                        'RGB',\r\n                                        'Multispectral',\r\n                                        'Hyperspectral',\r\n                                        'LiDAR',\r\n                                        'Thermal',\r\n                                    ],\r\n                                },\r\n                                {\r\n                                    name: 'uav-sensor',\r\n                                    valueName: 'sensor',\r\n                                    title: 'Sensor',\r\n                                    type: 'dropdown',\r\n                                    hideIfChoicesEmpty: true,\r\n                                    choices: sensors.map((e, i) => ({\r\n                                        text: e.make + ' ' + e.model,\r\n                                        value: e.make + ' ' + e.model,\r\n                                        //value: i,\r\n                                        visibleIf: `{panel.type} == \"${e.type}\"`,\r\n                                    })),\r\n                                },\r\n                                {\r\n                                    name: 'uav-sensor-make',\r\n                                    valueName: 'sensor.make',\r\n                                    title: 'Make',\r\n                                    type: 'text',\r\n                                    enableIf: '{panel.sensor} empty'\r\n                                },\r\n                                {\r\n                                    name: 'uav-sensor-model',\r\n                                    valueName: 'model',\r\n                                    title: 'Model',\r\n                                    type: 'text',\r\n                                    enableIf: '{panel.sensor} empty'\r\n                                },\r\n                            ],\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    name: 'b4ufly',\r\n                    title: 'B4UFLY Status',\r\n                    visibleIf: '{purpose} == \"UAV\"',\r\n                    elements: [\r\n                        {\r\n                            name: 'b4ufly-status',\r\n                            title: 'Status',\r\n                            type: 'dropdown',\r\n                            isRequired: true,\r\n                            choices: [\r\n                                'proceed with caution',\r\n                                'flying in controlled airspace (class B/C/D/E)',\r\n                                'other',\r\n                            ],\r\n                        },\r\n                        {\r\n                            name: 'b4ufly-extra',\r\n                            title: '',\r\n                            type: 'panel',\r\n                            visibleIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\" or {b4ufly-status} == \"other\"',\r\n                            elements: [\r\n                                {\r\n                                    name: 'b4ufly-airport-operator',\r\n                                    title: 'Airport Operator Contact',\r\n                                    type: 'text',\r\n                                    requiredIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\r\n                                },\r\n                                {\r\n                                    name: 'b4ufly-control-tower',\r\n                                    title: 'Control Tower Contact',\r\n                                    type: 'text',\r\n                                    requiredIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\r\n                                },\r\n                                {\r\n                                    name: 'b4ufly-prior-authorization',\r\n                                    title: 'Prior Authorization',\r\n                                    type: 'text',\r\n                                    requiredIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\r\n                                },\r\n                            ],\r\n                        },\r\n                        {\r\n                            // TODO: What the heck even is this?\r\n                            name: 'b4ufly-options',\r\n                            title: 'Options',\r\n                            type: 'checkbox',\r\n                            isRequired: true,\r\n                            choices: [\r\n                                'checked NOTAMS',\r\n                                'checked flight restrictions',\r\n                                'checked local restrictions',\r\n                                'checked upcoming restrictions',\r\n                                'checked national parks',\r\n                            ],\r\n                        },\r\n                        {\r\n                            name: 'b4ufly-certificate',\r\n                            title: 'COW or COA #',\r\n                            type: 'text',\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    name: 'planting',\r\n                    visibleIf: '!({purpose} == \"UAV\")',\r\n                    elements: [\r\n                        {\r\n                            name: 'nyi',\r\n                            type: 'html',\r\n                            html: 'Not yet implemented'\r\n                        }\r\n                    ]\r\n                },\r\n            ]\r\n        },\r\n    },\r\n    catch: [\r\n        [Error, ({error}) => console.error(error)],\r\n    ],\r\n    providers,\r\n    modules: {\r\n        store,\r\n        //storage,\r\n    },\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport App from 'cerebral';\r\nimport { Container } from '@cerebral/react';\r\nimport Devtools from 'cerebral/devtools';\r\n\r\nimport AppComponent from './App';\r\nimport main from './module';\r\n\r\nconst app = App(main, {\r\n    devtools: process.env.NODE_ENV === 'production' ?\r\n        null : Devtools({host: 'localhost:8000', reconnect: true})\r\n});\r\n\r\nReactDOM.render(\r\n    <Container app={app}>\r\n\t\t<AppComponent />\r\n\t</Container>,\r\ndocument.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nif (process.env.NODE_ENV === 'production') {\r\n\tserviceWorker.register();\r\n} else {\r\n\tserviceWorker.unregister();\r\n}\r\n"],"sourceRoot":""}