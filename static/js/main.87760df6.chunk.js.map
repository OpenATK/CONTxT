{"version":3,"sources":["serviceWorker.js","QRDialog.js","surveyModel.js","Questions.js","PagesDrawer.js","ConfirmSubmitDialog.js","DebugButton.js","App.js","main/modules/localstore/index.js","main/providers.js","main/errors.js","main/actions.js","main/sequences.js","main/index.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","connect","props","react_default","a","createElement","Dialog","fullScreen","open","AppBar","Toolbar","IconButton","color","onClick","onClose","aria-label","Close_default","Typography","variant","react_qr_reader_lib_default","style","width","onScan","data","onData","surveyModel","model","Survey","metaData","addProperty","name","default","Questions","_this","this","_this$props","get","palette","theme","themeColors","ThemeColors","primary","main","dark","text","secondary","divider","background","paper","light","applyTheme","questions","_templateObject","pageNum","_templateObject2","undefined","currentPageNo","reaction","_templateObject3","_ref","_templateObject4","_ref2","updatePages","setData","survey","setPages","pages","visiblePages","map","page","hasErrors","title","_this2","_this$props2","Object","objectWithoutProperties","survey_react","assign","onCurrentPageChanged","_templateObject5","setPage","onPageVisibleChanged","bind","onPageAdded","onValueChanged","_ref3","value","setTimeout","completedHtml","ReactDOMServer","renderToString","onAfterRenderQuestion","_ref5","asyncToGenerator","regenerator_default","mark","_callee","_ref4","question","htmlElement","autofill","seq","wrap","_context","prev","next","sent","cerebralbutton","abrupt","sequences","_templateObject6","ReactDOM","render","Button","stop","_x","_x2","apply","arguments","Component","_templateObject7","init","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","withTheme","navigationOpen","PagesDrawer_templateObject","showNavigation","PagesDrawer_templateObject2","hideNavigation","PagesDrawer_templateObject3","setSurveyPage","PagesDrawer_templateObject4","PagesDrawer_templateObject5","PagesDrawer_templateObject6","_props$classes","classes","contents","align","className","grow","noWrap","Divider","List","ListItem","key","button","selected","ListItemIcon","Warning_default","Done_default","ListItemText","secondaryTypographyProps","drawer","Hidden","permScreens","implementation","SwipeableDrawer","onOpen","drawerPaper","tempScreens","Drawer","ConfirmSubmitDialog_templateObject","resultsUrl","ConfirmSubmitDialog_templateObject2","confirm","ConfirmSubmitDialog_templateObject3","handleClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","Link","href","DialogActions","autoFocus","DebugButton_templateObject","setState","DebugButton_templateObject2","submitResults","DebugButton_templateObject3","disconnect","DebugButton_templateObject4","aria-owns","aria-haspopup","process","Menu_Menu","MenuItem","params","queryString","parse","search","createMuiTheme","typography","useNextVariants","type","gold","addEventListener","e","preventDefault","install","prompt","App","lib_default","MuiThemeProvider","Fragment","CssBaseline","root","src_PagesDrawer","smUp","xsDown","position","appBar","debug","src_DebugButton","menuButton","Menu_default","disabled","submitting","some","submit","Send_default","data-theme","src_QRDialog","droneQRScannerActive","hideDroneQRScanner","sensorQRScannerActive","hideSensorQRScanner","src_ConfirmSubmitDialog","content","toolbar","src_Questions","isSinglePage","singlePage","Box","p","CircularProgress","size","onComplete","bottomBar","MobileStepper","steps","length","activeStep","mobileStepper","nextButton","goNextPage","NavigateNext_default","backButton","goPreviousPage","NavigateBefore_default","App_templateObject","App_templateObject2","App_templateObject3","App_templateObject4","App_templateObject5","App_templateObject6","App_templateObject7","App_templateObject8","App_templateObject9","App_templateObject10","App_templateObject11","App_templateObject12","showDroneQRScanner","App_templateObject13","showSensorQRScanner","_templateObject14","_templateObject15","_templateObject16","_templateObject17","login","_templateObject18","logout","_templateObject19","google","_templateObject20","createSheet","_templateObject21","_templateObject22","_templateObject23","withStyles","display","alignItems","justifyContent","textAlign","flexGrow","alignSelf","maxWidth","defineProperty","top","bottom","marginLeft","breakpoints","up","concat","mixins","marginRight","flexShrink","gapi","GetLocationError","_CerebralError","message","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","inherits","CerebralError","GAPIError","_CerebralError2","err","result","SerializeError","_CerebralError3","r","c","_this3","DeserializeError","_CerebralError4","_this4","geolocation","getCurrentLoc","_getCurrentLoc","msg","Promise","resolve","reject","getCurrentPosition","pos","coords","t0","t1","code","errors","setAnswer","setValue","num","nextPage","previousPage","prevPage","completeLastPage","gapiClient","_init","_callee2","_context2","googleapi","tap","load","callback","onerror","timeout","ontimeout","client","discoveryDocs","auth","auth2","getAuthInstance","listener","signedIn","user","currentUser","getBasicProfile","context","getName","isSignedIn","listen","_get","_callee3","scope","_context3","hasGrantedScopes","grant","_disconnect","_callee4","_context4","appdataScope","join","googleappdata","getData","_getData","_callee5","_ref6","drive","_ref7","_context5","files","list","spaces","q","fields","appProperties","initData","_initData","_callee6","_ref8","_ref8$body","body","_ref9","_ref10","_context6","create","resource","mimeType","parents","_x3","sheetsScope","googlesheets","_createSheet","_callee7","_ref11","sheets","_ref12","_context7","spreadsheets","getSheet","_getSheet","_callee8","_ref13","_ref14","sheet","_context8","values","spreadsheetId","range","XLSX","utils","aoa_to_sheet","sheet_to_json","_x4","writeSheet","_writeSheet","_callee9","sheetsURL","_ref15","_ref16","row","_context9","json_to_sheet","header","update","valueInputOption","includeValuesInResponse","majorDimension","objectSpread","_x5","_x6","addRow","_addRow","_callee10","cols","_ref17","_context10","append","insertDataOption","_x7","_x8","_x9","serialize","i","serialized","keys","forEach","JSON","stringify","deserialize","deserialized","startsWith","kkey","substring","answer","main_actions_createSheet","results","resultsId","_ref18","path","found","notfound","paths","set","sequences_templateObject","sequences_templateObject2","sequences_templateObject3","sequences_templateObject4","_initGapi","sequences_templateObject5","sequences_templateObject6","sequences_templateObject7","sequences_templateObject8","sequences_templateObject9","sequences_templateObject10","sequences_templateObject11","setSurveyData","sequences_templateObject12","sequences_templateObject13","actions","sequences_templateObject14","sequences_templateObject15","sequences_templateObject16","sequences_templateObject17","completeSurvey","done","setCurrentLocation","currentLoc","latitude","longitude","sequences_templateObject18","sequences_templateObject19","locations","sequences_templateObject20","sequences_templateObject21","sequences_templateObject22","loadappdata","_x10","_loadAppData","sequences_templateObject23","_templateObject24","_templateObject25","_createAppData","_templateObject26","_templateObject27","_templateObject28","_templateObject29","_loadPastResults","_deserializeResults","_templateObject30","_templateObject31","_templateObject32","_templateObject33","_templateObject34","_templateObject35","disconnectGoogle","_disconnectGapi","_templateObject36","when","_templateObject37","true","false","push","_templateObject38","_templateObject39","_templateObject40","_templateObject41","_serializeResults","_templateObject42","_templateObject43","_uploadResults","_templateObject44","_templateObject45","_templateObject46","confirmSubmit","_templateObject47","_templateObject48","reload","setDebugMenuOpen","_templateObject49","_templateObject50","equals","_templateObject51","person","_templateObject52","_templateObject53","otherwise","store","providers","localstore","ls","val","clear","initialized","persistState","moduleState","localstore_templateObject","success","parallel","localstore_templateObject2","localstore_templateObject3","merge","localstore_templateObject4","localstore_templateObject5","localstore_templateObject6","localstore_templateObject7","localstore_templateObject8","reactions","Reaction","localstore_templateObject9","modulePath","localstore_templateObject10","sequence","reduce","obj","loggedin","confirmSubmitOpen","surveyData","pastData","showNavigationButtons","goNextPageAutomatic","clearInvisibleValues","checkErrorsMode","elements","choices","defaultValue","inputType","DateTime","local","toFormat","panelCount","minPanelCount","panelAddText","panelRemoveText","templateTitle","templateElements","isRequired","visibleIf","placeHolder","description","validators","regex","allowMultiple","hasOther","hideIfChoicesEmpty","make","enableIf","valueName","requiredIf","html","Error","modules","app","devtools","throwToConsole","noRethrow","on","getSequence","_cerebral_react","src_App_0","document","getElementById","URL","origin","fetch","response","contentType","headers","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.87760df6.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport {connect} from '@cerebral/react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport QrReader from 'react-qr-reader';\n\nfunction QRDialog(props) {\n    return (\n        <Dialog\n            fullScreen\n            open={props.open}\n        >\n          <AppBar>\n            <Toolbar>\n              <IconButton color='inherit' onClick={props.onClose} aria-label='Close'>\n                <CloseIcon />\n              </IconButton>\n              <Typography variant='h6' color='inherit'>\n                Scan QR code\n              </Typography>\n            </Toolbar>\n          </AppBar>\n            <QrReader\n                style={{width: '100%'}}\n                onScan={data => {\n                    if (!data) {\n                        return;\n                    }\n\n\t\t\t\t\tprops.onData(data);\n                    props.onClose();\n                }}\n            />\n        </Dialog>\n    );\n}\n\nexport default connect({\n}, QRDialog);\n","// TODO: This is probably the wrong way to do stuff, but I don't know cerebral\n// Want a singleton of survey model\nexport default {\n    model: null\n};\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactDOMServer from 'react-dom/server';\n\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport Button from '@material-ui/core/Button';\nimport {withTheme} from '@material-ui/core/styles';\n\nimport * as Survey from 'survey-react';\nimport 'survey-react/survey.css';\n\nimport surveyModel from './surveyModel';\n\nSurvey.JsonObject.metaData.addProperty('question', {\n    name: 'cerebralbutton',\n});\n\nSurvey.JsonObject.metaData.addProperty('question', {\n    name: 'autofill',\n    default: false,\n});\n\nclass Questions extends Component {\n    componentWillMount() {\n        const {get, theme} = this.props;\n\n        // Apply MUI theme to survey\n        const {palette} = theme;\n        let themeColors = Survey.StylesManager.ThemeColors['default'];\n        themeColors['$main-color'] = palette.primary.main;\n        themeColors['$main-hover-color'] = palette.primary.dark;\n        themeColors['$text-color'] = palette.text.primary;\n        themeColors['$header-color'] = palette.secondary.main;\n        themeColors['$border-color'] = palette.divider;\n        themeColors['$header-background-color'] = palette.secondary.main;\n        themeColors['$body-background-color'] = palette.background.paper;\n        themeColors['$body-container-background-color'] = palette.background.paper;\n        themeColors['$inputs-background-color'] = palette.background.default;\n        themeColors['$error-color'] = palette.error.main;\n        themeColors['$error-background-color'] = palette.error.light;\n        Survey.StylesManager.applyTheme('default');\n\n        this.model = new Survey.Model(this.props.questions);\n        surveyModel.model = this.model;\n\n        // TODO: I'm sure this is isn't right with cerebral..\n        let data = get(state`surveyData`);\n        if (data) {\n            this.model.data = data;\n        }\n        let pageNum = get(state`pageNum`);\n        if (pageNum !== undefined) {\n            this.model.currentPageNo = pageNum;\n        }\n\n        this.props.reaction('changePage',\n            {\n                pageNum: state`pageNum`,\n            },\n            ({pageNum}) => this.model.currentPageNo = pageNum\n        );\n        this.props.reaction('changeData',\n            {\n                data: state`surveyData`,\n            },\n            ({data}) => this.model.data = data\n        );\n\n        this.updatePages(this.model);\n        this.props.setData({data: this.model.data});\n    }\n\n    updatePages(survey) {\n        this.props.setPages({\n            pages: survey.visiblePages.map((page) => ({\n                error: page.hasErrors(false, false),\n                name: page.name,\n                title: page.title,\n            }))\n        });\n    }\n\n    render() {\n        let {get, ...props} = this.props;\n        return (\n            <Survey.Survey\n                {...props}\n                model={this.model}\n                onCurrentPageChanged={(survey) => {\n                    if (get(state`pageNum`) !== survey.currentPageNo) {\n                        props.setPage({pageNum: survey.currentPageNo});\n                    }\n                }}\n                onPageVisibleChanged={this.updatePages.bind(this)}\n                onPageAdded={this.updatePages.bind(this)}\n                onValueChanged={(survey, {name, value}) => {\n                    props.setData({data: survey.data});\n                    // No idea why, but cerebral freaks out if I call this\n                    // without the setTimeout...\n                    setTimeout(() => this.updatePages(survey));\n                }}\n                completedHtml={\n                    ReactDOMServer.renderToString(props.completedHtml)\n                }\n                onAfterRenderQuestion={\n                    async (survey, {question, htmlElement}) => {\n                        let {autofill} = question;\n                        // Try to autofill if unanswered\n                        if (question.value === undefined && autofill) {\n                            if (typeof autofill === 'function') {\n                                question.value = await autofill(question);\n                            } else {\n                                props.autofill({\n                                    // TODO: How to handle dynamic questions?\n                                    question: question.name,\n                                    autofill,\n                                });\n                            }\n                        }\n                        if (!question.cerebralbutton) {\n                            return;\n                        }\n\n                        let seq = get(sequences`${question.cerebralbutton}`);\n                        ReactDOM.render(\n                            <Button onClick={() => seq()}>\n                                {question.title}\n                            </Button>\n                        , htmlElement);\n                    }\n                }\n            />\n        );\n    }\n}\n\nexport default connect(\n    {\n        questions: state`questions`,\n        init: sequences`initSurvey`,\n        data: state`surveyData`,\n        setData: sequences`setSurveyData`,\n        setPage: sequences`setSurveyPage`,\n        setPages: sequences`setPages`,\n        autofill: sequences`autofill`,\n    },\n    withTheme(Questions)\n);\n","import React from 'react';\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport WarningIcon from '@material-ui/icons/Warning';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Drawer from '@material-ui/core/Drawer';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nfunction PagesDrawer(props) {\n    const {classes={}} = props;\n\n    const contents = (\n        <div>\n            <Toolbar>\n                <Typography\n                    variant='h6'\n                    color='primary'\n                    align='center'\n                    className={classes.grow}\n                    noWrap\n                >\n                    Pages\n                </Typography>\n            </Toolbar>\n            <Divider />\n            <List>\n                {props.pages.map(({name, title, error}, pageNum) => (\n                    <ListItem\n                        key={name}\n                        button\n                        selected={pageNum === props.pageNum}\n                        className={error ? 'page-err' : 'page-complete'}\n                        onClick={()=>props.setSurveyPage({pageNum})}>\n                        <ListItemIcon>\n                            {error ? <WarningIcon color='error'/> : <DoneIcon />}\n                        </ListItemIcon>\n                        <ListItemText\n                            primary={title}\n                            secondary={error ? 'Incomplete' : 'Complete'}\n                            secondaryTypographyProps={{\n                                color: error ? 'error' : 'textSecondary',\n                            }}\n                        />\n                    </ListItem>\n                ))}\n            </List>\n        </div>\n    );\n\n    return (\n        <nav className={classes.drawer}>\n            <Hidden {...props.permScreens} implementation='js'>\n                <SwipeableDrawer\n                    open={props.navigationOpen}\n                    onOpen={()=>props.showNavigation()}\n                    onClose={()=>props.hideNavigation()}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    {contents}\n                </SwipeableDrawer>\n            </Hidden>\n            <Hidden {...props.tempScreens} implementation='js'>\n                <Drawer\n                    variant='permanent'\n                    open\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    {contents}\n                </Drawer>\n            </Hidden>\n        </nav>\n    );\n}\n\nexport default connect({\n    navigationOpen: state`navigationOpen`,\n    showNavigation: sequences`showNavigation`,\n    hideNavigation: sequences`hideNavigation`,\n    setSurveyPage: sequences`setSurveyPage`,\n    pages: state`pages`,\n    pageNum: state`pageNum`,\n}, PagesDrawer);\n","import React from 'react';\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Link from '@material-ui/core/Link';\n\nfunction ConfirmSubmitDialog(props) {\n    const handleClose = props.confirm;\n    return (\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            aria-labelledby='alert-dialog-title'\n            aria-describedby='alert-dialog-description'\n        >\n            <DialogTitle id='alert-dialog-title'>\n                Successfully submitted metadata\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText id='alert-dialog-description'>\n                    {'Your metadata have been uploaded '}\n                    <Link href={props.resultsUrl}>\n                        here.\n                    </Link>\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color='primary' autoFocus>\n                    OK\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default connect({\n    open: state`confirmSubmitOpen`,\n    resultsUrl: state`resultsUrl`,\n    confirm: sequences`confirmSubmit`,\n}, ConfirmSubmitDialog);\n","import React from 'react';\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nfunction DebugButton(props) {\n    let button = (\n        <Button\n            aria-owns='debug-menu'\n            aria-haspopup='true'\n            onClick={() => props.setState({open: true})}\n            color='inherit'\n        >\n            {process.env.REACT_APP_GIT}\n        </Button>\n    );\n    return (\n        <div>\n            {button}\n            <Menu\n                id='debug-menu'\n                //anchorEl={button}\n                open={props.open || false}\n                onClose={() => props.setState({open: false})}\n            >\n                <MenuItem onClick={() => props.submitResults()}>\n                    Force Submit\n                </MenuItem>\n                <MenuItem onClick={() => props.disconnect()}>\n                    Disconnect Google\n                </MenuItem>\n            </Menu>\n        </div>\n    );\n}\n\nexport default connect({\n    open: state`debugMenuOpen`,\n    setState: sequences`setDebugMenuOpen`,\n    submitResults: sequences`submitResults`,\n    disconnect: sequences`disconnectGoogle`,\n}, DebugButton);\n","import React, {Component} from 'react';\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport {withStyles} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport SendIcon from '@material-ui/icons/Send';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {createMuiTheme, MuiThemeProvider} from '@material-ui/core/styles';\nimport gold from '@material-ui/core/colors/amber';\n\n// Has to be last mui import\nimport {unstable_Box as Box} from '@material-ui/core/Box';\n\nimport HttpsRedirect from 'react-https-redirect';\nimport queryString from 'query-string';\n\nimport './App.css';\nimport QRDialog from './QRDialog';\nimport Questions from './Questions';\nimport PagesDrawer from './PagesDrawer';\nimport ConfirmSubmitDialog from './ConfirmSubmitDialog';\nimport DebugButton from './DebugButton';\n\n// Parse query string\nconst params = queryString.parse(window.location.search);\n\n// All the following keys are optional.\n// We try our best to provide a great default value.\nconst theme = createMuiTheme({\n    typography: {\n        useNextVariants: true,\n    },\n    palette: {\n        type: params.theme || 'dark',\n        primary: gold,\n    },\n});\n\nconst drawerWidth = 240;\nconst styles = (theme) => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    content: {\n        textAlign: 'center',\n        flexGrow: 1,\n        alignSelf: 'center',\n        maxWidth: 800,\n    },\n    appBar: {\n        top: 0,\n        bottom: 'auto',\n        marginLeft: drawerWidth,\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n        },\n    },\n    toolbar: theme.mixins.toolbar,\n    bottomBar: {\n        bottom: 0,\n        top: 'auto',\n        marginLeft: drawerWidth,\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n        },\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n        [theme.breakpoints.up('sm')]: {\n          display: 'none',\n        },\n    },\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n});\n\nwindow.addEventListener('beforeinstallprompt', (e) => {\n    // Prevent Chrome 67 and earlier from automatically showing the prompt\n    e.preventDefault();\n    // Stash the event so it can be triggered later.\n    //deferredPrompt = e;\n    if (params.install !== undefined) {\n        e.prompt(); // TODO: Don't show prompt immediately?\n    }\n});\n\nclass App extends Component {\n    componentWillMount() {\n        this.props.init();\n    }\n\n    render() {\n        let {props} = this;\n        const {classes} = props;\n\n        return (\n            <HttpsRedirect>\n            <MuiThemeProvider theme={theme}>\n            <React.Fragment>\n            <CssBaseline />\n            <div className={classes.root}>\n                <PagesDrawer\n                    classes={classes}\n                    // Screens sizes to show permanent drawer\n                    permScreens={{smUp: true}}\n                    // Screens sizes to show temporary drawer\n                    tempScreens={{xsDown: true}}\n                />\n                <AppBar position='fixed' className={classes.appBar}>\n                    <Toolbar>\n                        {params.debug !== undefined &&\n                            // Super secret debug button\n                            <DebugButton />\n                        }\n                        <IconButton\n                            className={classes.menuButton}\n                            color='inherit'\n                            onClick={() => props.showNavigation()}\n                            aria-label='Pages'>\n                            <MenuIcon\n                            />\n                        </IconButton>\n                        <Button\n                            color='inherit'\n                            disabled={\n                                props.submitting ||\n                                    props.pages.some(page => page.error)\n                            }\n                            onClick={() => props.submit()}>\n                            Submit\n                            <SendIcon />\n                        </Button>\n                        <div className={classes.grow} />\n                        <div className='g-signin2' data-theme='dark' />\n                    </Toolbar>\n                </AppBar>\n                <QRDialog\n                    open={props.droneQRScannerActive}\n                    onClose={props.hideDroneQRScanner}\n                />\n                <QRDialog\n                    open={props.sensorQRScannerActive}\n                    onClose={props.hideSensorQRScanner}\n                />\n                <ConfirmSubmitDialog />\n                <main className={classes.content}>\n                    <div className={classes.toolbar} />\n                    <Questions\n                        isSinglePage={params.singlePage !== undefined}\n                        completedHtml={(\n                            <div>\n                                <Typography color='inherit' >\n                                    Submitting Metadata\n                                </Typography>\n                                <Box p={4} >\n                                    <CircularProgress size={100} />\n                                </Box>\n                            </div>\n                        )}\n                        onComplete={({data}) => props.submitResults()}\n                    />\n                    <div className={classes.toolbar} />\n                </main>\n                <AppBar position='fixed' className={classes.bottomBar}>\n                    <MobileStepper\n                        steps={props.pages.length}\n                        position='static'\n                        activeStep={props.pageNum}\n                        className={classes.mobileStepper}\n                        nextButton={\n                            <Button\n                                color='primary'\n                                disabled={props.pageNum === props.pages.length - 1}\n                                onClick={() => props.goNextPage()}>\n                                Next\n                                <NavigateNextIcon />\n                            </Button>\n                        }\n                        backButton={\n                            <Button\n                                color='primary'\n                                disabled={props.pageNum === 0}\n                                onClick={() => props.goPreviousPage()}>\n                                <NavigateBeforeIcon />\n                                Previous\n                            </Button>\n                        }\n                    />\n                </AppBar>\n            </div>\n            </React.Fragment>\n            </MuiThemeProvider>\n            </HttpsRedirect>\n        );\n    }\n}\n\nexport default connect({\n    navigationOpen: state`navigationOpen`,\n    showNavigation: sequences`showNavigation`,\n    hideNavigation: sequences`hideNavigation`,\n    setSurveyPage: sequences`setSurveyPage`,\n    pages: state`pages`,\n    pageNum: state`pageNum`,\n    goNextPage: sequences`goNextPage`,\n    goPreviousPage: sequences`goPreviousPage`,\n    submit: sequences`completeSurvey`,\n    questions: state`questions`,\n    droneQRScannerActive: state`droneQRScannerActive`,\n    sensorQRScannerActive: state`sensorQRScannerActive`,\n    showDroneQRScanner: sequences`showDroneQRScanner`,\n    showSensorQRScanner: sequences`showSensorQRScanner`,\n    hideDroneQRScanner: sequences`hideDroneQRScanner`,\n    hideSensorQRScanner: sequences`hideSensorQRScanner`,\n    init: sequences`init`,\n    login: sequences`login`,\n    logout: sequences`logout`,\n    google: state`google`,\n    createSheet: sequences`createSheet`,\n    submitResults: sequences`submitResults`,\n    submitting: state`submitting`,\n}, withStyles(styles)(App));\n","import {Reaction} from 'cerebral';\nimport {state, moduleState, props, sequences} from 'cerebral/tags'\nimport {set, merge, when, parallel} from 'cerebral/factories';\n\nimport ls from 'local-storage';\n\nexport default (paths) => ({\n    providers: {\n        localstore: {\n            get(key) {\n                return ls.get(key);\n            },\n\n            set(key, val) {\n                return ls.set(key, val);\n            },\n\n            clear() {\n                return ls.clear();\n            },\n        },\n    },\n\n    state: {\n        initialized: false,\n    },\n\n    sequences: {\n        persistState: [\n            when(moduleState`initialized`), // Wait for init?\n            {\n                true: ({localstore, props}) => {\n                    let {key, val} = props;\n                    return {success: localstore.set(key, val)};\n                },\n                false: [],\n            },\n        ],\n        clear: [\n            parallel('clear paths', paths.map(path => [\n                ({localstore}) => ({val: localstore.clear(path)}),\n            ])),\n        ],\n        init: [\n            // Load each path from store and set it in state\n            parallel('get paths', paths.map(path => [\n                ({localstore}) => ({val: localstore.get(path)}),\n                when(props`val`, val => val === null),\n                {\n                    true: [], // Ignore null/unset keys\n                    false: [\n                        when(props`val`, val => typeof val === 'object'),\n                        {\n                            true: [merge(state`${path}`, props`val`)],\n                            false: [set(state`${path}`, props`val`)],\n                        }\n                    ],\n                }\n            ])),\n            set(moduleState`initialized`, true),\n        ],\n    },\n\n    // Generate a reaction for each path in the store\n    reactions: paths.map(path => {\n        let reaction = Reaction(\n            {\n                val: state`${path}`,\n            },\n            // TODO: Why didn't using moduleSequences work??\n            //({val, get}) => get(moduleSequences`persistState`)({key: path, val})\n            ({val, get}) => {\n                const name = reaction.modulePath.join('.');\n                const sequence = get(sequences`${name}.persistState`);\n                return sequence({key: path, val});\n            }\n        );\n        return {[path]: reaction};\n    }).reduce((obj, reaction) => Object.assign(obj, reaction), {}),\n});\n","import Promise from 'bluebird';\n//import {state} from 'cerebral';\nimport googleapi from 'google-client-api';\nimport XLSX from 'xlsx';\n\nimport * as errors from './errors';\nimport model from '../surveyModel';\n\nexport const geolocation = {\n    async getCurrentLoc() {\n        try {\n            return await new Promise((resolve, reject) =>\n                    navigator.geolocation.getCurrentPosition(resolve, reject))\n                .then(pos => pos.coords);\n        } catch (err) {\n            let msg;\n\n            switch (err.code) {\n                case 1: // PERMISSION_DENIED\n                    msg = 'Permission denied';\n                    break;\n                case 2: // POSITION_UNAVAILABLE\n                    msg = 'Position unavailable';\n                    break;\n                case 3: // TIMEOUT\n                    msg = 'Timeout obtaining position';\n                    break;\n                default:\n                    msg = 'Unknown error';\n            }\n\n            throw new errors.GetLocationError(msg);\n        }\n    }\n};\n\nexport const survey = {\n    setAnswer(name, value) {\n        model.model.setValue(name, value);\n    },\n\n    setPage(num) {\n        model.model.currentPageNo = num;\n    },\n\n    nextPage() {\n        return model.model.nextPage();\n    },\n\n    previousPage() {\n        return model.model.prevPage();\n    },\n\n    setData(data) {\n        model.model.data = data;\n    },\n\n    submit() {\n        return model.model.completeLastPage();\n    },\n};\n\nlet gapi;\nexport const gapiClient = {\n    // Do one-time gapi setup not effected by login/logout\n    async init({login, logout}) {\n        gapi = Promise.resolve(googleapi())\n            // Load client library\n            .tap(({load}) => new Promise((resolve, reject) => load('client', {\n                callback: resolve,\n                onerror: reject,\n                timeout: 10000,\n                ontimeout: reject,\n            })))\n            // Initialize client (load sheets and drive APIs)\n            .tap(({client}) => client.init({\n                discoveryDocs: [\n                    'https://www.googleapis.com/discovery/v1/apis/drive/v3/rest',\n                    'https://sheets.googleapis.com/$discovery/rest?version=v4'\n                ],\n            }))\n            // Listen for login/logout\n            .tap(({auth2}) => {\n                let auth = auth2.getAuthInstance();\n                let listener = signedIn => {\n                    if (!signedIn) {\n                        logout && this.context.get(logout)();\n                    } else {\n                        let user = auth.currentUser.get().getBasicProfile();\n                        login && this.context.get(login)({\n                            name: user.getName(),\n                        });\n                    }\n                };\n\n                auth.isSignedIn.listen(listener);\n                listener(auth.isSignedIn.get());\n            });\n        await gapi;\n    },\n\n    async get(scope) {\n        return gapi\n            .tap(({auth2}) => {\n                let user = auth2.getAuthInstance().currentUser.get();\n\n                // Request needed scopes from user\n                if (!user.hasGrantedScopes(scope)) {\n                   return user.grant({scope});\n                }\n            })\n            .get('client');\n    },\n\n    async disconnect() {\n        (await gapi).auth2.getAuthInstance().currentUser.get().disconnect();\n    },\n}\nconst appdataScope = [\n    'https://www.googleapis.com/auth/drive.appdata',\n    //'https://www.googleapis.com/auth/drive.file',\n].join(' ');\nexport const googleappdata = {\n    async getData() {\n        let {drive} = await this.context.gapiClient.get(appdataScope);\n\n        let result;\n        try {\n            ({result} = await drive.files.list({\n                spaces: 'appDataFolder',\n                q: \"name='config.json'\",\n                fields: 'files(id, appProperties)',\n            }));\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n\n        return result.files[0] && result.files[0].appProperties;\n    },\n\n    async initData({body = {}}) {\n        let {drive} = await this.context.gapiClient.get(appdataScope);\n\n        try {\n            let {result} = await drive.files.create({\n                resource: {\n                    name: 'config.json',\n                    mimeType: 'application/json',\n                    parents: ['appDataFolder'],\n                    appProperties: body,\n                },\n            });\n            return result;\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n    },\n}\nconst sheetsScope = 'https://www.googleapis.com/auth/drive.file';\nexport const googlesheets = {\n    async createSheet() {\n        let {sheets} = await this.context.gapiClient.get(sheetsScope);\n\n        try {\n            let {result} = await sheets.spreadsheets.create({}, {});\n            return result;\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n    },\n\n    async getSheet(id) {\n        let {sheets} = await this.context.gapiClient.get(sheetsScope);\n\n        let result;\n        try {\n            ({result} = await sheets.spreadsheets.values.get({\n                spreadsheetId: id,\n                range: ['Sheet1'],\n            }));\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n\n        if (!result.values) {\n            return [];\n        }\n\n        let sheet = XLSX.utils.aoa_to_sheet(result.values);\n        return XLSX.utils.sheet_to_json(sheet);\n    },\n\n    async writeSheet(id, data) {\n        const sheetsURL = 'https://docs.google.com/spreadsheets';\n        let {sheets} = await this.context.gapiClient.get(sheetsScope);\n\n        // Format data with spreadsheet lib\n        let sheet = XLSX.utils.json_to_sheet(data);\n        let values = XLSX.utils.sheet_to_json(sheet, {header: 1});\n\n        try {\n            let {result} = await sheets.spreadsheets.values.update({\n                spreadsheetId: id,\n                range: sheet['!ref'],\n                valueInputOption: 'USER_ENTERED', // 'RAW'\n                includeValuesInResponse: false,\n            }, {\n                majorDimension: 'ROWS',\n                values,\n            });\n            let row = data.length + 1;\n            return {\n                ...result,\n                // TODO: How to better handle URL from ID etc.?\n                resultsUrl: `${sheetsURL}/d/${id}#gid=0&range=${row}:${row}`\n            };\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n    },\n\n    async addRow(id, cols, row) {\n        let {sheets} = await this.context.gapiClient.get(sheetsScope);\n\n        return sheets.spreadsheets.values.append({\n            spreadsheetId: id,\n            valueInputOption: 'USER_ENTERED', // 'RAW'\n            insertDataOption: 'INSERT_ROWS', // 'OVERWRITE'\n            includeValuesInResponse: false,\n        }, {\n            majorDimension: 'ROWS',\n            values: [row],\n        });\n    },\n};\n\n// TODO: Better way to handle arrays and such in a spreadsheet?\nexport const serialize = {\n    serialize(data) {\n        return data.map((result, i) => {\n            let serialized = {};\n            Object.keys(result).forEach(key => {\n                try {\n                    if (typeof result[key] === 'object') {\n                        if (result[key]) {\n                            let kkey = '$$' + key;\n                            serialized[kkey] = JSON.stringify(result[key]);\n                        }\n                    } else {\n                        serialized[key] = result[key];\n                    }\n                } catch (err) {\n                    throw new errors.SerializeError(i, key, err);\n                }\n            });\n            return serialized;\n        });\n    },\n\n    deserialize(data) {\n        return data.map((result, i) => {\n            let deserialized = {};\n            Object.keys(result).forEach(key => {\n                try {\n                    if (key.startsWith('$$')) {\n                        if (result[key]) {\n                            let kkey = key.substring(2);\n                            deserialized[kkey] = JSON.parse(result[key]);\n                        }\n                    } else {\n                        deserialized[key] = result[key];\n                    }\n                } catch (err) {\n                    // +2 is for header row and 1 vs 0 indexing\n                    throw new errors.DeserializeError(i + 2, key, err);\n                }\n            });\n            return deserialized;\n        });\n    },\n};\n","import {CerebralError} from 'cerebral';\n\nexport class GetLocationError extends CerebralError {\n    constructor(message) {\n        super(message);\n        this.name = 'GetLocationError';\n    }\n}\n\nexport class GAPIError extends CerebralError {\n    constructor(err) {\n        // gapi doesn't always throw the same sorts of things..\n        let error = err;\n        if (err.result && error.result.error) {\n            error = err.result.error;\n        }\n\n        super(error.message);\n        this.name = 'GAPIError';\n        this.result = error;\n    }\n}\n\nexport class SerializeError extends CerebralError {\n    constructor(r, c, err) {\n        super(`Error serializing column \"${c}\" of row ${r}: ${err.message}`);\n        this.name = 'DeserializeError';\n        this.err = err;\n    }\n}\n\nexport class DeserializeError extends CerebralError {\n    constructor(r, c, err) {\n        super(`Error deserializing column \"${c}\" of row ${r}: ${err.message}`);\n        this.name = 'DeserializeError';\n        this.err = err;\n    }\n}\n","//import {state} from 'cerebral';\n\nexport function getCurrentLocation({geolocation}) {\n    return geolocation.getCurrentLoc()\n        .then(({latitude, longitude}) => ({currentLoc: {latitude, longitude}}));\n}\n\nexport function setAnswer({survey, props}) {\n    return survey.setAnswer(props.question, props.answer);\n}\nexport function setSurveyPage({survey, props}) {\n    return survey.setPage(props.pageNum);\n}\nexport function setSurveyData({survey, props}) {\n    return survey.setData(props.data);\n}\nexport function nextPage({survey}) {\n    return {error: survey.nextPage()};\n}\nexport function previousPage({survey}) {\n    return {error: survey.previousPage()};\n}\nexport function completeSurvey({survey, props}) {\n    return {done: survey.submit()};\n}\n\nexport async function initGapi({gapiClient, props}) {\n    return gapiClient.init(props);\n}\nexport async function disconnectGapi({gapiClient}) {\n    return gapiClient.disconnect();\n}\nexport async function createSheet({googlesheets}) {\n    let sheet = await googlesheets.createSheet();\n    return {sheet};\n}\nexport async function initSheet({googlesheets, props}) {\n    let {result} = await googlesheets.createSheet();\n    await googlesheets.addRow(result.spreadsheetId, props.headerRow);\n}\nexport async function serializeResults({serialize, props}) {\n    let {results} = props;\n\n    return {results: serialize.serialize(results)};\n}\nexport async function deserializeResults({serialize, props}) {\n    let {results} = props;\n\n    return {results: serialize.deserialize(results)};\n}\nexport async function loadPastResults({googlesheets, props}) {\n    let {resultsId} = props;\n\n    let results = (await googlesheets.getSheet(resultsId)) || [];\n\n    return {results};\n}\nexport async function uploadResults({googlesheets, props}) {\n    let {results, resultsId} = props;\n\n    return googlesheets.writeSheet(resultsId, results);\n}\n\nexport async function createAppData({googleappdata, props}) {\n    let result = await googleappdata.initData(props);\n\n    return {result};\n}\nexport async function loadAppData({googleappdata, path}) {\n    let data = await googleappdata.getData();\n\n    if (data) {\n        return path.found({body: data});\n    } else {\n        return path.notfound();\n    }\n}\n","import {set, push, when, equals} from 'cerebral/factories';\nimport {state, sequences, props} from 'cerebral/tags';\nimport * as actions from './actions';\n\nexport const init = [\n    set(props`login`, sequences`login`),\n    set(props`logout`, sequences`logout`),\n    actions.initGapi,\n    ({get}) => get(sequences`store.init`)(),\n];\n\nexport const showDroneQRScanner = [set(state`droneQRScannerActive`, true)];\nexport const hideDroneQRScanner = [set(state`droneQRScannerActive`, false)];\nexport const showSensorQRScanner = [set(state`sensorQRScannerActive`, true)];\nexport const hideSensorQRScanner = [set(state`sensorQRScannerActive`, false)];\nexport const showNavigation = [set(state`navigationOpen`, true)];\nexport const hideNavigation = [set(state`navigationOpen`, false)];\n\nexport const setSurveyData = [set(state`surveyData`, props`data`)];\nexport const setAnswer = [actions.setAnswer];\nexport const setSurveyPage = [\n    set(state`pageNum`, props`pageNum`),\n];\nexport const setPages = [set(state`pages`, props`pages`)];\nexport const goNextPage = [\n    actions.nextPage,\n    /*\n    set(props`pageNum`, state`pageNum`, num => num + 1),\n    set(state`pageNum`, props`pageNum`),\n    */\n];\nexport const goPreviousPage = [\n    actions.previousPage,\n    /*\n    set(props`pageNum`, state`pageNum`, num => num - 1),\n    set(state`pageNum`, props`pageNum`),\n    */\n];\nexport const completeSurvey = [actions.completeSurvey];\nexport const setCurrentLocation = [\n    actions.getCurrentLocation,\n    set(props`locations`, state`surveyData.locations`),\n    // Using the push factory seems to break things...\n    ({props}) => ({locations: props.locations.concat(props.currentLoc)}),\n    set(props`question`, 'locations'),\n    set(props`answer`, props`locations`),\n    actions.setAnswer,\n];\n\nexport const loadappdata = [\n    actions.loadAppData,\n    {\n        found: [],\n        notfound: [\n            actions.createSheet,\n            set(props`body`, {}),\n            set(props`body.resultsId`, props`sheet.spreadsheetId`),\n            actions.createAppData,\n        ],\n    },\n    set(state`resultsId`, props`body.resultsId`),\n];\n\n// Run _after_ login\nexport const login = [\n    loadappdata,\n    set(props`resultsId`, state`resultsId`),\n    actions.loadPastResults,\n    actions.deserializeResults,\n    set(state`pastData`, props`results`),\n    set(state`loggedin`, props`name`, name => ({name})),\n];\n// Runs _after_ logout\nexport const logout = [\n    set(state`loggedin`, false),\n    set(state`pastData`, []),\n];\n\nexport const disconnectGoogle = [actions.disconnectGapi];\n\nexport const createSheet = [actions.createSheet];\nexport const submitResults = [\n    set(state`submitting`, true),\n    when(state`loggedin`),\n    {\n        true: [],\n        false: login,\n    },\n    push(state`pastData`, state`surveyData`),\n    set(props`results`, state`pastData`),\n    actions.serializeResults,\n    set(props`resultsId`, state`resultsId`),\n    actions.uploadResults,\n    set(state`resultsUrl`, props`resultsUrl`),\n    set(state`confirmSubmitOpen`, true),\n];\n\nexport const confirmSubmit = [\n    set(state`confirmSubmitOpen`, false),\n    ({get}) => get(sequences`store.clear`)(),\n    () => window.location.reload(),\n];\n\nexport const setDebugMenuOpen = [set(state`debugMenuOpen`, props`open`)];\n\nexport const autofill = [\n    equals(props`autofill`),\n    {\n        person: [set(props`answer`, state`loggedin.name`)],\n        otherwise: [],\n    },\n    actions.setAnswer,\n];\n","//import { set } from 'cerebral/operators';\n//import { state } from 'cerebral/tags';\n\nimport {DateTime} from 'luxon';\n\nimport localstore from './modules/localstore';\n\nimport * as providers from './providers';\nimport * as sequences from './sequences';\n\n// TODO: Get these from sheets\nconst sensors = [\n    {\n        make: 'Sony',\n        model: 'A6000',\n        type: 'RGB',\n    },\n    {\n        make: 'Parrot',\n        model: 'Sequoia',\n        type: 'Multispectral',\n    },\n];\nconst drones = [\n    {\n        make: 'Test',\n        model: 'testtest',\n        type: 'Fixed wing',\n    },\n];\n\n// Parts of state to keep in localstorage\nconst store = localstore(['pageNum', 'surveyData']);\n\nexport default {\n    sequences,\n    state: {\n        loggedin: null,\n        resultsId: null,\n        submitting: false,\n        navigationOpen: true,\n        confirmSubmitOpen: false,\n        droneQRScannerActive: false,\n        sensorQRScannerActive: false,\n        surveyData: null,\n        pastData: [],\n        pages: [],\n        pageNum: 0,\n        questions: {\n            showNavigationButtons: false,\n            goNextPageAutomatic: true,\n            clearInvisibleValues: 'onHidden',\n            checkErrorsMode: 'onValueChanged',\n            pages: [\n                {\n                    name: 'general',\n                    title: 'General',\n                    elements: [\n                        {\n                            name: 'purpose',\n                            title: 'Purpose',\n                            type: 'dropdown',\n                            choices: [\n                                'UAV',\n                                'Planting',\n                                'Spraying',\n                                'Tilling',\n                                'Harvest'\n                            ],\n                            defaultValue: 'UAV' // TODO: remove default later\n                        },\n                        {\n                            name: 'datetime',\n                            title: 'Date/Time of data',\n                            type: 'text',\n                            inputType: 'datetime-local',\n                            defaultValue: DateTime.local()\n                                .toFormat(\"yyyy-MM-dd'T'HH:mm:ss\"),\n                        },\n                        {\n                            type: 'panel',\n                            elements: [\n                                {\n                                    // TODO: Support selecting region on a map\n                                    name: 'locations',\n                                    title: 'Collection locations',\n                                    type: 'paneldynamic',\n                                    panelCount: 1,\n                                    minPanelCount: 1,\n                                    panelAddText: 'Add Location',\n                                    panelRemoveText: 'Remove Location',\n                                    templateTitle: 'Location #{panelIndex}',\n                                    templateElements: [\n                                        {\n                                            name: 'latitude',\n                                            title: 'Latitude',\n                                            type: 'text',\n                                            isRequired: true,\n                                        },\n                                        {\n                                            name: 'longitude',\n                                            title: 'Longitude',\n                                            type: 'text',\n                                            isRequired: true,\n                                        },\n                                    ],\n                                },\n                                {\n                                    name: 'location-button',\n                                    title: 'Add current location',\n                                    type: 'html',\n                                    cerebralbutton: 'setCurrentLocation',\n                                },\n                            ],\n                        },\n                        {\n                            name: 'notes',\n                            title: 'Notes or comments',\n                            type: 'comment',\n                        },\n                    ]\n                },\n                {\n                    name: 'place',\n                    title: 'Place',\n                    visibleIf: '{purpose} == \"UAV\"',\n                    elements: [\n                        {\n                            name: 'client',\n                            title: 'Grower (or Client)',\n                            type: 'text',\n                            autofill: 'person',\n                            placeHolder: 'Farmer Frank',\n                        },\n                        {\n                            name: 'operation',\n                            title: 'Farm (or Operation)',\n                            type: 'text',\n                            placeHolder: 'Frank Farms',\n                        },\n                        {\n                            name: 'site',\n                            title: 'Field (or Site)',\n                            type: 'text',\n                            placeHolder: 'East Field',\n                        },\n                        {\n                            name: 'crop',\n                            title: 'Crop',\n                            type: 'text',\n                            placeHolder: 'corn',\n                        },\n                        {\n                            name:'prev-crop',\n                            title: 'Previous Crop',\n                            type: 'text',\n                            placeHolder: 'beans',\n                        },\n                        {\n                            name: 'weather',\n                            title: 'Weather',\n                            type: 'panel',\n                            elements: [\n                                {\n                                    name: 'weather-button',\n                                    title: 'Get Current Weather',\n                                    type: 'html',\n                                    // TODO: Implement functionality for button\n                                    cerebralbutton: 'setCurrentWeather',\n                                },\n                                {\n                                    name: 'temperature',\n                                    title: 'Temperature',\n                                    type: 'text',\n                                    //inputType: 'number',\n                                    placeHolder: '60 F'\n                                },\n                                {\n                                    name: 'windspeed',\n                                    title: 'Wind Speed',\n                                    type: 'text',\n                                    //inputType: 'number',\n                                    placeHolder: '10 mph',\n                                },\n                                {\n                                    name: 'winddirection',\n                                    title: 'Wind Direction',\n                                    type: 'text',\n                                    //inputType: 'number',\n                                    placeHolder: '35 deg',\n                                },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    name: 'uav-operator',\n                    title: 'UAV Operator',\n                    visibleIf: '{purpose} == \"UAV\"',\n                    elements: [\n                        {\n                            name: 'remote-pics',\n                            title: 'Remote Pilot in Command (PIC)',\n                            description: 'remote PIC - A person who holds a remote pilot certificate with an sUAS rating and has the final authority and responsibility for the operation and safety of an sUAS operation conducted under part 107.',\n                            type: 'paneldynamic',\n                            panelCount: 1,\n                            minPanelCount: 1,\n                            panelAddText: 'Add Remote PIC',\n                            panelRemoveText: 'Remove Remote PIC',\n                            templateTitle: 'Remote PIC #{panelIndex}',\n                            templateElements: [\n                                {\n                                    name: 'remote-pic-name',\n                                    title: 'Name',\n                                    type: 'text',\n                                    isRequired: true,\n                                    placeHolder: 'Rusty Shackleford'\n                                },\n                                {\n                                    name: 'remote-pic-certificate',\n                                    title: 'Certificate Number or equivalent',\n                                    type: 'text',\n                                    isRequired: true,\n                                    placeHolder: '1234567',\n                                    validators: [\n                                        {\n                                            type: 'regex',\n                                            regex: /^[0-9]{7}$/,\n                                            text: 'Invalid license number'\n                                        }\n                                    ]\n                                },\n\n                            ],\n                        },\n                        {\n                            name: 'observer',\n                            title: 'Visual Observer (VO)',\n                            description: 'VO - A person acting as a flightcrew member who assists the small UA remote PIC and the person manipulating the controls to see and avoid other air traffic or objects aloft or on the ground.',\n                            type: 'paneldynamic',\n                            panelCount: 0,\n                            panelAddText: 'Add VO',\n                            panelRemoveText: 'Remove VO',\n                            templateTitle: 'VO #{panelIndex}',\n                            templateElements: [\n                                {\n                                    name: 'observer-name',\n                                    title: 'Name',\n                                    type: 'text',\n                                    isRequired: true,\n                                    placeHolder: 'John Doe'\n                                },\n                            ],\n                        },\n                    ]\n                },\n                {\n                    name: 'uav-drone',\n                    title: 'Drone Info',\n                    visibleIf: '{purpose} == \"UAV\"',\n                    elements: [\n                        {\n                            // TODO: make required for submission only\n                            name: 'drone-screenshots',\n                            title: 'DroneDeploy Screenshots',\n                            type: 'panel',\n                            elements: [\n                                {\n                                    name: 'drone-flight-planning',\n                                    title: 'Screenshot of Flight Planning',\n                                    type: 'file',\n                                    allowMultiple: false,\n                                },\n                                {\n                                    name: 'drone-advanced-flight-planning',\n                                    title: 'Screenshot of Advanced Flight Planning',\n                                    type: 'file',\n                                    allowMultiple: false,\n                                },\n                            ],\n                        },\n                        {\n                            name: 'drone-qr',\n                            title: 'Scan drone QR code',\n                            type: 'html',\n                            cerebralbutton: 'showDroneQRScanner',\n                        },\n                        {\n                            name: 'uav-drone-type',\n                            title: 'Type',\n                            type: 'dropdown',\n                            isRequired: true,\n                            defaultValue: 'Fixed wing',\n                            hasOther: true,\n                            choices: [\n                                'Fixed wing',\n                                'Multi-rotor',\n                                'Helicopter',\n                            ],\n                        },\n                        {\n                            name: 'uav-drone',\n                            title: 'Drone',\n                            type: 'dropdown',\n                            hideIfChoicesEmpty: true,\n                            choices: drones.map((e, i) => ({\n                                text: e.make + ' ' + e.model,\n                                value: e.make + ' ' + e.model,\n                                //value: i,\n                                visibleIf: `{uav-drone-type} == \"${e.type}\"`,\n                            })),\n                        },\n                        {\n                            name: 'uav-drone-make',\n                            title: 'Make',\n                            type: 'text',\n                            enableIf: '{uav-drone} empty'\n                        },\n                        {\n                            name: 'uav-drone-model',\n                            title: 'Model',\n                            type: 'text',\n                            enableIf: '{uav-drone} empty'\n                        },\n                    ]\n                },\n                {\n                    name: 'uav-sensors',\n                    title: 'Sensors',\n                    visibleIf: '{purpose} == \"UAV\"',\n                    elements: [\n                        {\n                            name: 'sensor-qr',\n                            type: 'html',\n                            cerebralbutton: 'showSensorQRScanner',\n                        },\n                        {\n                            name: 'sensors',\n                            title: 'Sensors',\n                            type: 'paneldynamic',\n                            panelCount: 0,\n                            panelAddText: 'Add Sensor',\n                            panelRemoveText: 'Remove Sensor',\n                            templateTitle: 'Sensor #{panelIndex}',\n                            templateElements: [\n                                {\n                                    name: 'uav-sensor-type',\n                                    valueName: 'type',\n                                    title: 'Type',\n                                    type: 'dropdown',\n                                    isRequired: true,\n                                    hasOther: true,\n                                    choices: [\n                                        'RGB',\n                                        'Multispectral',\n                                        'Hyperspectral',\n                                        'LiDAR',\n                                        'Thermal',\n                                    ],\n                                },\n                                {\n                                    name: 'uav-sensor',\n                                    valueName: 'sensor',\n                                    title: 'Sensor',\n                                    type: 'dropdown',\n                                    hideIfChoicesEmpty: true,\n                                    choices: sensors.map((e, i) => ({\n                                        text: e.make + ' ' + e.model,\n                                        value: e.make + ' ' + e.model,\n                                        //value: i,\n                                        visibleIf: `{panel.type} == \"${e.type}\"`,\n                                    })),\n                                },\n                                {\n                                    name: 'uav-sensor-make',\n                                    valueName: 'sensor.make',\n                                    title: 'Make',\n                                    type: 'text',\n                                    enableIf: '{panel.sensor} empty'\n                                },\n                                {\n                                    name: 'uav-sensor-model',\n                                    valueName: 'model',\n                                    title: 'Model',\n                                    type: 'text',\n                                    enableIf: '{panel.sensor} empty'\n                                },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    name: 'b4ufly',\n                    title: 'B4UFLY Status',\n                    visibleIf: '{purpose} == \"UAV\"',\n                    elements: [\n                        {\n                            name: 'b4ufly-status',\n                            title: 'Status',\n                            type: 'dropdown',\n                            isRequired: true,\n                            choices: [\n                                'proceed with caution',\n                                'flying in controlled airspace (class B/C/D/E)',\n                                'other',\n                            ],\n                        },\n                        {\n                            name: 'b4ufly-extra',\n                            title: '',\n                            type: 'panel',\n                            visibleIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\" or {b4ufly-status} == \"other\"',\n                            elements: [\n                                {\n                                    name: 'b4ufly-airport-operator',\n                                    title: 'Airport Operator Contact',\n                                    type: 'text',\n                                    requiredIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\n                                },\n                                {\n                                    name: 'b4ufly-control-tower',\n                                    title: 'Control Tower Contact',\n                                    type: 'text',\n                                    requiredIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\n                                },\n                                {\n                                    name: 'b4ufly-prior-authorization',\n                                    title: 'Prior Authorization',\n                                    type: 'text',\n                                    requiredIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\n                                },\n                            ],\n                        },\n                        {\n                            // TODO: What the heck even is this?\n                            name: 'b4ufly-options',\n                            title: 'Options',\n                            type: 'checkbox',\n                            isRequired: true,\n                            choices: [\n                                'checked NOTAMS',\n                                'checked flight restrictions',\n                                'checked local restrictions',\n                                'checked upcoming restrictions',\n                                'checked national parks',\n                            ],\n                        },\n                        {\n                            name: 'b4ufly-certificate',\n                            title: 'COW or COA #',\n                            type: 'text',\n                        },\n                    ],\n                },\n                {\n                    name: 'planting',\n                    visibleIf: '!({purpose} == \"UAV\")',\n                    elements: [\n                        {\n                            name: 'nyi',\n                            type: 'html',\n                            html: 'Not yet implemented'\n                        }\n                    ]\n                },\n            ]\n        },\n    },\n    catch: [\n        [Error, ({error}) => console.error(error)],\n    ],\n    providers,\n    modules: {\n        store,\n        //storage,\n    },\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from 'cerebral';\nimport {Container} from '@cerebral/react';\nimport Devtools from 'cerebral/devtools';\n\nimport AppComponent from './App';\nimport main from './main';\n\nconst app = App(main, {\n    devtools: process.env.NODE_ENV === 'production' ?\n        null : Devtools({host: 'localhost:8000', reconnect: true}),\n    throwToConsole: true,\n    noRethrow: false,\n});\n\n// Run init sequence\napp.on('initialized:model', () => console.log('sadsad') && app.getSequence('init')());\n\nReactDOM.render(\n    <Container app={app}>\n        <AppComponent />\n    </Container>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nif (process.env.NODE_ENV === 'production') {\n    serviceWorker.register();\n} else {\n    serviceWorker.unregister();\n}\n"],"sourceRoot":""}