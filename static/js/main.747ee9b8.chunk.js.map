{"version":3,"sources":["serviceWorker.js","QRDialog.js","surveyModel.js","autocompleteWidget.js","tagboxWidget.js","unanswered.js","Questions.js","PagesDrawer.js","ConfirmSubmitDialog.js","DebugButton.js","ErrorDisplay.js","styles.js","googleScopes.js","describe.js","describe-loader.js","App.js","main/modules/localstore/index.js","main/providers.js","main/errors.js","main/actions.js","main/sequences.js","main/computeds.js","pages/0-general.js","pages/1-place.js","pages/anomalies.js","pages/harvest/conditions.js","pages/harvest/transport.js","pages/machinery.js","pages/planting/chemicals.js","pages/planting/seed.js","pages/spraying/chemicals.js","pages/tillage/conditions.js","pages/uav/b4ufly.js","pages/uav/drone.js","pages/uav/operator.js","pages/uav/sensors.js","pages-loader.js","pages.js","main/index.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","connect","props","react_default","a","createElement","Dialog","fullScreen","open","AppBar","Toolbar","IconButton","color","onClick","onClose","aria-label","Close_default","Typography","variant","react_qr_reader_lib_default","style","width","onScan","data","onData","surveyModel","model","require","$","autocompleteWidget","name","widgetIsLoaded","ui","autocomplete","render","question","isDefaultRender","isFit","activatedByChanged","activatedBy","Survey","metaData","findProperty","addProperty","default","className","onGetValue","obj","choicesByUrl","getData","onSetValue","value","setData","afterRender","el","is","find","appendTo","classes","ui-autocomplete","source","choices","map","it","text","willUnMount","info","debug","tagboxWidget","title","iconName","fn","select2","defaultJSON","htmlTemplate","getType","addClass","visible","tagbox","properties","fixStyles","e","parentElement","querySelector","border","self","this","settings","Object","objectSpread","tags","disabled","isReadOnly","placeholder","placeHolder","theme","tokenSeparators","select2Config","$el","updateValueHandler","forEach","concat","length","option","Option","append","trigger","val","updateChoices","empty","ajax","visibleChoices","choice","id","readOnlyChangedCallback","prop","registerFunctionOnPropertyValueChanged","valueChangedCallback","setValue","some","params","push","on","willUnmount","off","unanswered","isEmpty","every","undefined","Instance","addCustomWidget","acwidget","tbwidget","Pica","bind","loggers","logCB","_arguments","Array","prototype","slice","call","arguments","rest","logger","extend","apply","toConsumableArray","Questions","_this","_this$props","get","palette","themeColors","ThemeColors","primary","main","dark","secondary","divider","background","paper","light","applyTheme","questions","_templateObject","pageNum","_templateObject2","currentPageNo","reaction","_templateObject3","_ref","_templateObject4","_ref2","_templateObject5","_ref3","updatePages","survey","setPages","pages","visiblePages","page","hasErrors","_this2","_this$props2","_this$props2$classes","objectWithoutProperties","survey_react","assign","onCurrentPageChanged","_templateObject6","setPage","onUpdateQuestionCssClasses","_ref4","cssClasses","preview","classNames","ssPreview","onPageVisibleChanged","onPageAdded","onUploadFiles","_ref6","asyncToGenerator","regenerator_default","mark","_callee","_ref5","files","callback","file","res","wrap","_context","prev","next","upload","sent","content","url","stop","_x","_x2","onValueChanging","_ref7","oldValue","onValueChanged","_ref8","setTimeout","onMatrixRowAdded","_ref9","rowIndex","onMatrixRowRemoved","_ref10","onDynamicPanelItemValueChanged","_ref11","itemIndex","itemValue","onMatrixCellValueChanged","_ref12","columnName","row","onValidateQuestion","_ref13","completedHtml","ReactDOMServer","renderToString","onQuestionAdded","options","onAfterRenderQuestion","_ref15","_callee2","_ref14","htmlElement","autofill","seq","_seq","_context2","answer","cerebralbutton","sequences","_templateObject7","ReactDOM","Button","_x3","_x4","Component","_templateObject8","init","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","withTheme","navigationOpen","PagesDrawer_templateObject","showNavigation","PagesDrawer_templateObject2","hideNavigation","PagesDrawer_templateObject3","setSurveyPage","PagesDrawer_templateObject4","PagesDrawer_templateObject5","PagesDrawer_templateObject6","_props$classes","contents","align","grow","noWrap","Divider","List","ListItem","key","button","selected","ListItemIcon","Warning_default","Done_default","ListItemText","secondaryTypographyProps","readme","Fragment","component","Link","target","href","drawer","Hidden","permScreens","implementation","SwipeableDrawer","onOpen","drawerPaper","tempScreens","Drawer","ConfirmSubmitDialog_templateObject","resultsUrl","ConfirmSubmitDialog_templateObject2","confirm","ConfirmSubmitDialog_templateObject3","handleClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","DebugButton_templateObject","setState","DebugButton_templateObject2","submitResults","DebugButton_templateObject3","disconnect","DebugButton_templateObject4","aria-owns","aria-haspopup","process","REACT_APP_GIT","Menu_Menu","MenuItem","ErrorDisplay_templateObject","close","ErrorDisplay_templateObject2","_ref$classes","Snackbar","anchorOrigin","vertical","horizontal","SnackbarContent","message","root","Error_default","iconVariant","icon","action","styles","display","alignItems","justifyContent","textAlign","flexGrow","alignSelf","maxWidth","appBar","defineProperty","top","bottom","marginLeft","breakpoints","up","toolbar","mixins","bottomBar","menuButton","marginRight","flexShrink","fontSize","opacity","spacing","backgroundColor","googleScopes","join","describe","dirty","raw","hash","distance","tag","semver","loose","includePrerelease","major","minor","patch","prerelease","build","version","suffix","semverString","meta","ui-version","queryString","parse","search","createMuiTheme","typography","useNextVariants","type","gold","addEventListener","preventDefault","install","prompt","App","lib_default","MuiThemeProvider","dist_default","CssBaseline","src_PagesDrawer","smUp","xsDown","position","src_DebugButton","Menu_default","canSubmit","submit","Send_default","data-theme","data-scope","scope","src_QRDialog","droneQRScannerActive","hideDroneQRScanner","sensorQRScannerActive","hideSensorQRScanner","src_ConfirmSubmitDialog","initialized","loggedin","src_Questions","isSinglePage","singlePage","Box","p","CircularProgress","size","onComplete","src_ErrorDisplay","MobileStepper","steps","activeStep","mobileStepper","nextButton","canNext","goNextPage","NavigateNext_default","backButton","canPrev","goPreviousPage","NavigateBefore_default","App_templateObject","App_templateObject2","App_templateObject3","App_templateObject4","App_templateObject5","App_templateObject6","App_templateObject7","App_templateObject8","App_templateObject9","App_templateObject10","App_templateObject11","App_templateObject12","App_templateObject13","showDroneQRScanner","App_templateObject14","showSensorQRScanner","App_templateObject15","App_templateObject16","_templateObject17","_templateObject18","_templateObject19","login","_templateObject20","logout","_templateObject21","google","_templateObject22","createSheet","_templateObject23","_templateObject24","_templateObject25","_templateObject26","_templateObject27","withStyles","gapi","GetLocationError","_CerebralError","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","CerebralError","GAPIError","_CerebralError2","err","result","SerializeError","_CerebralError3","r","c","_this3","DeserializeError","_CerebralError4","_this4","geolocation","getCurrentLoc","_getCurrentLoc","msg","Promise","resolve","reject","getCurrentPosition","pos","coords","abrupt","t0","t1","code","errors","setAnswer","num","nextPage","previousPage","prevPage","completeLastPage","gapiClient","_init","googleapi","tap","load","onerror","timeout","ontimeout","client","discoveryDocs","auth","auth2","getAuthInstance","listener","signedIn","user","currentUser","getBasicProfile","context","getName","isSignedIn","listen","_get","_callee3","_context3","hasGrantedScopes","grant","_disconnect","_callee4","_context4","appdataScope","googleappdata","_getData","_callee5","drive","_context5","list","spaces","q","fields","appProperties","initData","_initData","_callee6","_ref8$body","body","_context6","create","resource","mimeType","parents","updateData","_updateData","_callee7","_ref11$body","_context7","update","fileId","sheetsScope","sheetVer","googlesheets","_createSheet","_callee8","sheets","ver","_context8","getVersion","spreadsheets","getSheet","_getSheet","_callee9","_ref16","_ref17","sheet","_context9","values","spreadsheetId","range","XLSX","utils","aoa_to_sheet","sheet_to_json","writeSheet","_writeSheet","_callee10","sheetsURL","_ref18","_ref19","_context10","json_to_sheet","header","valueInputOption","includeValuesInResponse","majorDimension","_x5","_x6","addRow","_addRow","_callee11","cols","_ref20","_context11","insertDataOption","_x7","_x8","_x9","googledrive","_upload","_callee12","_ref21","_ref22","token","_context12","getToken","fetch","method","headers","Headers","Authorization","Content-Type","_x10","fileResult","ducky","validate","compile","serialize","i","serialized","keys","execute","JSON","stringify","deserialize","deserialized","startsWith","kkey","substring","apixu","Apixu","apikey","weather","current","_current","_callee13","query","_context13","_x11","getCurrentLocation","currentLoc","latitude","longitude","main_actions_createSheet","results","path","resultsId","found","notfound","_ref26","set","sequences_templateObject","sequences_templateObject2","sequences_templateObject3","sequences_templateObject4","_initGapi","sequences_templateObject5","sequences_templateObject6","sequences_templateObject7","sequences_templateObject8","sequences_templateObject9","sequences_templateObject10","sequences_templateObject11","sequences_templateObject12","setSurveyData","sequences_templateObject13","sequences_templateObject14","actions","sequences_templateObject15","sequences_templateObject16","sequences_templateObject17","sequences_templateObject18","completeSurvey","done","setCurrentLocation","sequences_templateObject19","sequences_templateObject20","locations","sequences_templateObject21","sequences_templateObject22","sequences_templateObject23","createSheetWithAppData","sequences_templateObject24","sequences_templateObject25","sequences_templateObject26","loadappdata","_loadAppData","_createAppData","sequences_templateObject27","_templateObject28","_templateObject29","_templateObject30","uploadScreenshot","_x12","_uploadScreenshot","when","_templateObject31","true","false","_templateObject32","_templateObject33","_templateObject34","_loadPastResults","_deserializeResults","_templateObject35","_templateObject36","_templateObject37","_templateObject38","_updateAppData","_ref24","store","actions_templateObject2","forIn","findKeys","actions_templateObject3","_obj$choices","actions_templateObject4","ans","includes","merge","actions_templateObject5","_templateObject39","_templateObject40","_templateObject41","_templateObject42","disconnectGoogle","_disconnectGapi","_templateObject43","_templateObject44","_templateObject45","_templateObject46","_templateObject47","_templateObject48","_serializeResults","_templateObject49","_templateObject50","_uploadResults","_templateObject51","_templateObject52","_templateObject53","_templateObject54","confirmSubmit","_templateObject55","reload","setDebugMenuOpen","_templateObject56","_templateObject57","getCurrentLocationWeather","_templateObject58","_templateObject59","_templateObject60","_templateObject61","_x13","_getCurrentWeather","_templateObject62","_templateObject63","d","equals","_templateObject64","person","_templateObject65","_templateObject66","_templateObject67","_templateObject68","_templateObject69","_templateObject70","_templateObject71","_templateObject72","temperature","_templateObject73","_templateObject74","windspeed","_templateObject75","_templateObject76","winddirection","_templateObject77","_templateObject78","lastused","_ref23","actions_templateObject","otherwise","displayError","_templateObject79","_templateObject80","clearError","unset","_templateObject81","computeds_templateObject","computeds_templateObject2","computeds_templateObject3","computeds_templateObject4","computeds_templateObject5","computeds_templateObject6","computeds_templateObject7","pastAnswers","computeds_templateObject8","forin","isArray","addAnswer","isequal","unshift","_0_general","elements","isRequired","inputType","defaultValue","DateTime","local","toFormat","panelCount","minPanelCount","panelAddText","panelRemoveText","templateTitle","templateElements","_1_place","pages_anomalies","visibleIf","rowCount","addRowText","removeRowText","columns","cellType","hasOther","conditions","previousAsChoices","transport","hideIfChoicesEmpty","storeOthersAsComment","otherText","otherErrorText","machinery","chemicals","seed","spraying_chemicals","chem","toLowerCase","valueName","tillage_conditions","b4ufly","requiredIf","drone","storeDataAsText","acceptedTypes","allowMultiple","make","operator","description","validators","regex","uav_sensors","pages_loader","_0_general_namespaceObject","_1_place_namespaceObject","anomalies_namespaceObject","conditions_namespaceObject","transport_namespaceObject","machinery_namespaceObject","chemicals_namespaceObject","seed_namespaceObject","spraying_chemicals_namespaceObject","tillage_conditions_namespaceObject","b4ufly_namespaceObject","drone_namespaceObject","operator_namespaceObject","sensors_namespaceObject","html","paths","providers","localstore","ls","clear","remove","persistState","moduleState","localstore_templateObject","success","parallel","localstore_templateObject2","localstore_templateObject3","localstore_templateObject4","localstore_templateObject5","localstore_templateObject6","localstore_templateObject7","localstore_templateObject8","reactions","Reaction","localstore_templateObject9","modulePath","localstore_templateObject10","sequence","reduce","computeds","appdataId","submitting","confirmSubmitOpen","surveyData","pastData","showNavigationButtons","goNextPageAutomatic","clearInvisibleValues","checkErrorsMode","Error","modules","app","devtools","throwToConsole","noRethrow","returnSequencePromise","getSequence","_cerebral_react","src_App_0","document","getElementById","URL","origin","response","contentType","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.747ee9b8.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport {connect} from '@cerebral/react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport QrReader from 'react-qr-reader';\n\nfunction QRDialog(props) {\n    return (\n        <Dialog\n            fullScreen\n            open={props.open}\n        >\n          <AppBar>\n            <Toolbar>\n              <IconButton color='inherit' onClick={props.onClose} aria-label='Close'>\n                <CloseIcon />\n              </IconButton>\n              <Typography variant='h6' color='inherit'>\n                Scan QR code\n              </Typography>\n            </Toolbar>\n          </AppBar>\n            <QrReader\n                style={{width: '100%'}}\n                onScan={data => {\n                    if (!data) {\n                        return;\n                    }\n\n\t\t\t\t\tprops.onData(data);\n                    props.onClose();\n                }}\n            />\n        </Dialog>\n    );\n}\n\nexport default connect({\n}, QRDialog);\n","// TODO: This is probably the wrong way to do stuff, but I don't know cerebral\n// Want a singleton of survey model\nexport default {\n    model: null\n};\n","import * as Survey from 'survey-react';\n\nrequire('jquery-ui/themes/base/core.css');\nrequire('jquery-ui/themes/base/menu.css');\nrequire('jquery-ui/themes/base/autocomplete.css');\nrequire('jquery-ui/themes/base/theme.css');\n\nlet $ = require('jquery');\nrequire('jquery-ui/ui/widgets/autocomplete');\n\nexport default {\n    name: 'autocomplete',\n\n    widgetIsLoaded() {\n        return !!$.ui.autocomplete;\n    },\n\n    // Doesn't let you type unles this is here...\n    render(question) {\n    },\n\n    isDefaultRender: true,\n\n    isFit(question) {\n        return !!question.autocomplete;\n    },\n\n    activatedByChanged(activatedBy) {\n        if (Survey.JsonObject.metaData.findProperty('text', 'autofill')) {\n            return;\n        }\n\n        Survey.JsonObject.metaData.addProperty('question', {\n            name: 'autocomplete',\n            default: false,\n        });\n        Survey.JsonObject.metaData.addProperty('text', 'choices:itemvalues');\n        Survey.JsonObject.metaData.addProperty('text', {\n            name: 'choicesByUrl:restfull',\n            className: 'ChoicesRestfull',\n            onGetValue(obj) {\n                return obj && obj.choicesByUrl && obj.choicesByUrl.getData();\n            },\n            onSetValue(obj, value) {\n                if (!obj.choicesByUrl) {\n                    obj.choicesByUrl = new Survey.ChoicesRestfull();\n                }\n                obj.choicesByUrl.setData(value);\n            }\n        });\n    },\n\n    afterRender(question, el) {\n        let $el = $(el).is('input') ? $(el) : $(el).find('input');\n\n        $el.autocomplete({\n            appendTo: $('.sv_main'),\n            classes: {\n                'ui-autocomplete': 'sv_q_text_root',\n            },\n            source: (question.choices || []).map(it => it.text),\n        });\n    },\n\n    willUnMount(question, el) {\n        let $el = $(el).is('input') ? $(el) : $(el).find('input');\n\n        $el.autocomplete('destroy');\n    },\n}\n","import debug from 'debug';\n\nimport * as Survey from 'survey-react';\n\nimport $ from 'jquery';\nimport 'select2';\nimport 'select2/dist/css/select2.min.css';\n\nimport './select2.scss';\n\nlet info = debug('contxt:tagbox');\n\nexport default {\n    name: 'tagbox',\n    title: 'Tag box',\n    iconName: 'icon-tagbox',\n    widgetIsLoaded: function() {\n        return typeof $ == 'function' && !!$.fn.select2;\n    },\n    defaultJSON: {\n        choices: ['Item 1', 'Item 2', 'Item 3']\n    },\n    htmlTemplate: '<select multiple=\"multiple\" style=\"width: 100%;\"></select>',\n    isFit: function(question) {\n        return question.getType() === 'tagbox';\n    },\n    activatedByChanged: function(activatedBy) {\n        Survey.JsonObject.metaData.addClass(\n            'tagbox',\n            [\n                {\n                    name: 'hasOther',\n                    visible: false\n                }\n            ],\n            null,\n            'checkbox'\n        );\n        Survey.JsonObject.metaData.addProperty('tagbox', {\n            name: 'select2Config',\n            default: null\n        });\n        Survey.JsonObject.metaData.addProperty('tagbox', {\n            name: 'placeHolder',\n            default: null\n        });\n        Survey.matrixDropdownColumnTypes.tagbox = {\n            properties: [\n                'choices',\n                'choicesOrder',\n                'choicesByUrl',\n                'optionsCaption',\n                'otherText',\n                'choicesVisibleIf'\n            ]\n        };\n    },\n    fixStyles: function(el) {\n        let e = el.parentElement.querySelector('.select2-search__field');\n        if (e) {\n            e.style.border = 'none';\n        }\n    },\n    afterRender: function(question, el) {\n        var self = this;\n        var settings = {\n            tags: true,\n            disabled: question.isReadOnly,\n            placeholder: question.placeHolder,\n            theme: 'material',\n            tokenSeparators: [','],\n            ...question.select2Config,\n        };\n        var $el = $(el).is('select') ? $(el) : $(el).find('select');\n        $el.select2(settings);\n\n        self.fixStyles(el);\n\n        var updateValueHandler = function() {\n            (question.value || []).forEach(it => {\n                if ($el.find(`option[value=\"${it}\"]`).length === 0) {\n                    let option = new Option(it, it, true, true);\n                    $el.append(option).trigger('change');\n                }\n            });\n            $el.val(question.value).trigger('change');\n            self.fixStyles(el);\n        };\n        var updateChoices = function() {\n            $el.select2().empty();\n\n            if (settings.ajax) {\n                $el.select2(settings);\n            } else {\n                settings.data = question.visibleChoices.map(function(choice) {\n                    return {\n                        id: choice.value,\n                        text: choice.text\n                    };\n                });\n                $el.select2(settings);\n            }\n\n            updateValueHandler();\n        };\n\n        question.readOnlyChangedCallback = function() {\n            $el.prop('disabled', question.isReadOnly);\n        };\n        question.registerFunctionOnPropertyValueChanged(\n            'visibleChoices',\n            function() {\n                updateChoices();\n            }\n        );\n        question.valueChangedCallback = updateValueHandler;\n        let setValue = function(e) {\n            info('setValue %o', e);\n\n            let val = $el.select2('data').map(it => it.id);\n            val.forEach(val => {\n                // Add choice if it does not exist\n                if (!question.choices.some(choice => choice.value === val)) {\n                    let choice = new Survey.ItemValue(e.params.data.id);\n                    question.choices.push(choice);\n                }\n            });\n\n            question.value = val;\n        };\n        $el.on('select2:select', setValue);\n        $el.on('select2:unselect', setValue);\n        updateChoices();\n    },\n    willUnmount: function(question, el) {\n        $(el)\n            .find('select')\n            .off('select2:select')\n            .select2('destroy');\n        question.readOnlyChangedCallback = null;\n    }\n};\n\n","import isEmpty from 'lodash.isempty';\n\n// Function to decide if value constitutes an answered question\nexport default function unanswered(value) {\n    if (typeof value === 'object') {\n        return isEmpty(value) || (value.every && value.every(isEmpty));\n    } else {\n        return value === undefined || value === '';\n    }\n}\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactDOMServer from 'react-dom/server';\n\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport Button from '@material-ui/core/Button';\nimport {withTheme} from '@material-ui/core/styles';\n\nimport debug from 'debug';\n\nimport * as Survey from 'survey-react';\nimport 'survey-react/survey.css';\n\nimport classNames from 'classnames';\nimport Pica from 'pica';\n\nimport surveyModel from './surveyModel';\n\nimport acwidget from './autocompleteWidget';\nimport tbwidget from './tagboxWidget';\n\nimport unanswered from './unanswered';\n\nSurvey.CustomWidgetCollection.Instance.addCustomWidget(acwidget, 'property');\nSurvey.CustomWidgetCollection.Instance.addCustomWidget(tbwidget, 'customtype');\n\nSurvey.JsonObject.metaData.addProperty('question', {\n    name: 'cerebralbutton',\n});\n\nSurvey.JsonObject.metaData.addProperty('question', {\n    name: 'autofill',\n    default: false,\n});\n\n// Override imageWidth for file questions\nSurvey.JsonObject.metaData.addProperty('file', {\n    name: 'imageWidth',\n    default: '100%',\n});\n\nlet pica = new Pica();\n\nconst info = debug('contxt:survey');\ninfo.log = console.info.bind(console);\n\nlet loggers = {};\nfunction logCB() {\n    let [name, ...rest] = arguments;\n\n    let logger = loggers[name] || info.extend(name);\n    loggers[name] = logger;\n\n    return logger(...rest);\n}\n\nclass Questions extends Component {\n    componentWillMount() {\n        const {get, theme} = this.props;\n\n        // Apply MUI theme to survey\n        const {palette} = theme;\n        let themeColors = Survey.StylesManager.ThemeColors['default'];\n        themeColors['$main-color'] = palette.primary.main;\n        themeColors['$main-hover-color'] = palette.primary.dark;\n        themeColors['$text-color'] = palette.text.primary;\n        themeColors['$header-color'] = palette.secondary.main;\n        themeColors['$border-color'] = palette.divider;\n        themeColors['$header-background-color'] = palette.secondary.main;\n        themeColors['$body-background-color'] = palette.background.paper;\n        themeColors['$body-container-background-color'] = palette.background.paper;\n        themeColors['$inputs-background-color'] = palette.background.default;\n        themeColors['$error-color'] = palette.error.main;\n        themeColors['$error-background-color'] = palette.error.light;\n        Survey.StylesManager.applyTheme('default');\n\n        this.model = new Survey.Model(this.props.questions);\n        surveyModel.model = this.model;\n\n        // TODO: I'm sure this is isn't right with cerebral..\n        let data = get(state`surveyData`);\n        if (data) {\n            this.model.data = data;\n        }\n        let pageNum = get(state`pageNum`);\n        if (pageNum !== undefined) {\n            this.model.currentPageNo = pageNum;\n        }\n\n        this.props.reaction('changePage',\n            {\n                pageNum: state`pageNum`,\n            },\n            ({pageNum}) => this.model.currentPageNo = pageNum\n        );\n        this.props.reaction('changeData',\n            {\n                data: state`surveyData`,\n            },\n            ({data}) => this.model.data = data\n        );\n        this.props.reaction('changeQuestions',\n            {\n                questions: state`questions`,\n            },\n            ({questions}) => {\n                this.model = new Survey.Model(questions);\n                surveyModel.model = this.model;\n            }\n        );\n\n        this.updatePages(this.model);\n        this.props.setData({data: this.model.data});\n    }\n\n    updatePages(survey) {\n        this.props.setPages({\n            pages: survey.visiblePages.map((page) => ({\n                error: page.hasErrors(false, false),\n                name: page.name,\n                title: page.title,\n            }))\n        });\n    }\n\n    render() {\n        const {get, classes={}, ...props} = this.props;\n        return (\n            <Survey.Survey\n                {...props}\n                model={this.model}\n                onCurrentPageChanged={(survey) => {\n                    logCB('onCurrentPageChanged', `${survey.currentPageNo}`);\n\n                    if (get(state`pageNum`) !== survey.currentPageNo) {\n                        props.setPage({pageNum: survey.currentPageNo});\n                    }\n                }}\n                onUpdateQuestionCssClasses={\n                    (survey, {question, cssClasses}) => {\n                        logCB('onUpdateQuestionCssClasses',\n                                `${question.name}=%o`, cssClasses);\n\n                        // TODO: Support more CSS stuff?\n                        cssClasses.preview =\n                            classNames(cssClasses.preview, classes.ssPreview);\n                    }\n                }\n                onPageVisibleChanged={this.updatePages.bind(this)}\n                onPageAdded={this.updatePages.bind(this)}\n                onUploadFiles={async (survey, {files, callback}) => {\n                    logCB('onUploadFiles', `%o`, files);\n\n                    // TODO: Support multiple files?\n                    let file = files[0];\n\n                    let res = await props.upload({file});\n\n                    callback('success', [{\n                        file,\n                        content: res.url,\n                    }]);\n                }}\n                onValueChanging={(survey, {question, name, oldValue, value}) => {\n                    logCB('onValueChanging', `%o ${name}=%o`, oldValue, value);\n\n                    return;\n                    if (question instanceof Survey.QuestionFileModel) {\n                        (value || []).forEach((file, i) => {\n                            if (!(file && file.content) || file.converted) {\n                                return;\n                            }\n\n                            let img = new Image();\n                            img.src = file.content;\n                            let canvas = document.createElement('canvas');\n                            // TODO: Too small, need to upload to photos etc...\n                            canvas.width = 150;\n                            // Maintain aspect ratio\n                            canvas.height =\n                                img.height * canvas.width / img.width;\n\n                            const options = {\n                                unsharpAmount: 80,\n                                unsharpRadius: 0.6,\n                                unsharpThreshold: 2,\n                            };\n                            pica.resize(img, canvas, options).then(() => {\n                                let resized = {\n                                    name: file.name,\n                                    content: canvas.toDataURL(),\n                                    type: 'image/png',\n                                    converted: true\n                                };\n\n                                // You have to reassign question.value\n                                // Stuff breaks if you assign question.value[i]\n                                let value = question.value;\n                                question.value = [];\n                                value[i] = resized;\n                                question.value = value;\n                            });\n                        });\n                    }\n                }}\n                onValueChanged={(survey, {name, value, question}) => {\n                    logCB('onValueChanged', `%o=%o`, question, value);\n\n                    props.setData({data: survey.data, name, value});\n                    // No idea why, but cerebral freaks out if I call this\n                    // without the setTimeout...\n                    setTimeout(() => this.updatePages(survey));\n                }}\n                onMatrixRowAdded={(survey, {question, rowIndex}) => {\n                    logCB('onMatrixRowAdded', '%d %o', rowIndex, question);\n                    setTimeout(() => this.updatePages(survey));\n                }}\n                onMatrixRowRemoved={(survey, {question, rowIndex}) => {\n                    logCB('onMatrixRowRemoved', '%d %o', rowIndex, question);\n                    setTimeout(() => this.updatePages(survey));\n                }}\n                onDynamicPanelItemValueChanged={\n                    (survey, {question, value, itemIndex, itemValue}) => {\n                        logCB('onDynamicPanelItemValueChanged', `%o=%o %o=%o`,\n                                question, value, itemIndex, itemValue);\n                    }\n                }\n                onMatrixCellValueChanged={\n                    (survey, {question, value, columnName, row}) => {\n                        logCB('onMatrixCellValueChanged', `%o=%o %s %s`,\n                                question, value, columnName, row);\n                    }\n                }\n                onValidateQuestion={\n                    (survey, {question, name, value, error}) => {\n                        logCB('onValidateQuestion', '%o %s %s %s',\n                                question, name, value, error);\n                    }\n                }\n                completedHtml={\n                    ReactDOMServer.renderToString(props.completedHtml)\n                }\n                onQuestionAdded={(survey, options) => {\n                    logCB('onQuestionAdded', '%o', options);\n                }}\n                onAfterRenderQuestion={\n                    async (survey, {question, htmlElement}) => {\n                        logCB('onAfterRenderQuestion', '%o', question);\n\n                        /*\n                        if (question.autocomplete) {\n                            question.choices = [\n                                new Survey.ItemValue('foo'),\n                                new Survey.ItemValue('bar'),\n                            ];\n                        }*/\n\n                        let {autofill} = question;\n                        // Try to autofill if unanswered\n                        if (unanswered(question.value) && autofill) {\n                            if (typeof autofill === 'function') {\n                                question.value = await autofill(question);\n                            } else {\n                                let seq = await props.autofill({\n                                    // TODO: How to handle dynamic questions?\n                                    question: question.name,\n                                    autofill,\n                                });\n                                question.value = seq && seq.answer;\n                            }\n                        }\n\n                        if (question.cerebralbutton) {\n                            let seq = get(sequences`${question.cerebralbutton}`);\n                            ReactDOM.render(\n                                <Button onClick={() => seq()}>\n                                    {question.title}\n                                </Button>\n                            , htmlElement);\n                        }\n                    }\n                }\n            />\n        );\n    }\n}\n\nexport default connect(\n    {\n        questions: state`questions`,\n        init: sequences`initSurvey`,\n        data: state`surveyData`,\n        setData: sequences`setSurveyData`,\n        setPage: sequences`setSurveyPage`,\n        currentPageNo: state`pageNum`,\n        setPages: sequences`setPages`,\n        autofill: sequences`autofill`,\n        upload: sequences`uploadScreenshot`,\n    },\n    withTheme(Questions)\n);\n\n","import React from 'react';\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport WarningIcon from '@material-ui/icons/Warning';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Drawer from '@material-ui/core/Drawer';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nfunction PagesDrawer(props) {\n    const {classes={}} = props;\n\n    const contents = (\n        <div>\n            <Toolbar>\n                <Typography\n                    variant='h6'\n                    color='primary'\n                    align='center'\n                    className={classes.grow}\n                    noWrap\n                >\n                    Pages\n                </Typography>\n            </Toolbar>\n            <Divider />\n            <List>\n                {props.pages.map(({name, title, error}, pageNum) => (\n                    <ListItem\n                        key={name}\n                        button\n                        selected={pageNum === props.pageNum}\n                        className={error ? 'page-err' : 'page-complete'}\n                        onClick={()=>props.setSurveyPage({pageNum})}>\n                        <ListItemIcon>\n                            {error ? <WarningIcon color='error'/> : <DoneIcon />}\n                        </ListItemIcon>\n                        <ListItemText\n                            primary={title}\n                            secondary={error ? 'Incomplete' : 'Complete'}\n                            secondaryTypographyProps={{\n                                color: error ? 'error' : 'textSecondary',\n                            }}\n                        />\n                    </ListItem>\n                ))}\n            {props.readme && <>\n                <Divider />\n                <ListItem\n                    component={Link}\n                    target='_blank'\n                    href={props.readme}\n                >\n                <ListItemText\n                    primary='Readme'\n                />\n                </ListItem>\n            </>}\n            </List>\n        </div>\n    );\n\n    return (\n        <nav className={classes.drawer}>\n            <Hidden {...props.permScreens} implementation='js'>\n                <SwipeableDrawer\n                    open={props.navigationOpen}\n                    onOpen={()=>props.showNavigation()}\n                    onClose={()=>props.hideNavigation()}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    {contents}\n                </SwipeableDrawer>\n            </Hidden>\n            <Hidden {...props.tempScreens} implementation='js'>\n                <Drawer\n                    variant='permanent'\n                    open\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    {contents}\n                </Drawer>\n            </Hidden>\n        </nav>\n    );\n}\n\nexport default connect({\n    navigationOpen: state`navigationOpen`,\n    showNavigation: sequences`showNavigation`,\n    hideNavigation: sequences`hideNavigation`,\n    setSurveyPage: sequences`setSurveyPage`,\n    pages: state`pages`,\n    pageNum: state`pageNum`,\n}, PagesDrawer);\n","import React from 'react';\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Link from '@material-ui/core/Link';\n\nfunction ConfirmSubmitDialog(props) {\n    const handleClose = props.confirm;\n    return (\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            aria-labelledby='alert-dialog-title'\n            aria-describedby='alert-dialog-description'\n        >\n            <DialogTitle id='alert-dialog-title'>\n                Successfully submitted metadata\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText id='alert-dialog-description'>\n                    {'Your metadata have been uploaded '}\n                    <Link target='_blank' href={props.resultsUrl}>\n                        here.\n                    </Link>\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color='primary' autoFocus>\n                    OK\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default connect({\n    open: state`confirmSubmitOpen`,\n    resultsUrl: state`resultsUrl`,\n    confirm: sequences`confirmSubmit`,\n}, ConfirmSubmitDialog);\n","import React from 'react';\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nfunction DebugButton(props) {\n    let button = (\n        <Button\n            aria-owns='debug-menu'\n            aria-haspopup='true'\n            onClick={() => props.setState({open: true})}\n            color='inherit'\n        >\n            {process.env.REACT_APP_GIT}\n        </Button>\n    );\n    return (\n        <div>\n            {button}\n            <Menu\n                id='debug-menu'\n                //anchorEl={button}\n                open={props.open || false}\n                onClose={() => props.setState({open: false})}\n            >\n                <MenuItem onClick={() => props.submitResults()}>\n                    Force Submit\n                </MenuItem>\n                <MenuItem onClick={() => props.disconnect()}>\n                    Disconnect Google\n                </MenuItem>\n            </Menu>\n        </div>\n    );\n}\n\nexport default connect({\n    open: state`debugMenuOpen`,\n    setState: sequences`setDebugMenuOpen`,\n    submitResults: sequences`submitResults`,\n    disconnect: sequences`disconnectGoogle`,\n}, DebugButton);\n","import React from 'react';\nimport classNames from 'classnames';\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport CloseIcon from '@material-ui/icons/Close';\n\nfunction ErrorDisplay({classes={}, error, close}) {\n    return (\n        <Snackbar\n            open={!!error}\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n            }}>\n            <SnackbarContent\n                className={classes.error}\n                aria-describedby='client-snackbar'\n                message={\n                    <span id='client-snackbar' className={classes.root}>\n                        <ErrorIcon\n                            className={\n                                classNames(classes.iconVariant, classes.icon)\n                            }\n                        />\n                        {error && (error.name + ': ' + error.message)}\n                    </span>\n                }\n                action={[\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        onClick={close}\n                                        >\n                        <CloseIcon className={classes.icon}/>\n                    </IconButton>,\n                ]}\n            />\n        </Snackbar>\n    );\n}\n\nexport default connect({\n    error: state`error`,\n    close: sequences`clearError`,\n}, ErrorDisplay);\n","// MUI styles for all the things\n// TODO: Is this a good way to do this stuff??\n\nconst drawerWidth = 240;\n\nconst styles = (theme) => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    content: {\n        textAlign: 'center',\n        flexGrow: 1,\n        alignSelf: 'center',\n        maxWidth: 800,\n    },\n    appBar: {\n        top: 0,\n        bottom: 'auto',\n        marginLeft: drawerWidth,\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n        },\n    },\n    toolbar: theme.mixins.toolbar,\n    bottomBar: {\n        bottom: 0,\n        top: 'auto',\n        marginLeft: drawerWidth,\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n        },\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n        [theme.breakpoints.up('sm')]: {\n          display: 'none',\n        },\n    },\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    icon: {\n        fontSize: 20,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    ssPreview: {\n        width: '95%',\n    },\n});\n\nexport default styles;\n","export default [\n    'https://www.googleapis.com/auth/drive.appdata',\n    'https://www.googleapis.com/auth/drive.file',\n].join(' ');\n","/* eslint import/no-webpack-loader-syntax: off */\nimport describe from 'aot-loader!./describe-loader';\n\nexport default describe;\n","export default {\"dirty\":false,\"raw\":\"v0.4.0-0-g9cc4700\",\"hash\":\"g9cc4700\",\"distance\":0,\"tag\":\"v0.4.0\",\"semver\":{\"options\":{\"loose\":false,\"includePrerelease\":false},\"loose\":false,\"raw\":\"v0.4.0\",\"major\":0,\"minor\":4,\"patch\":0,\"prerelease\":[],\"build\":[],\"version\":\"0.4.0\"},\"suffix\":\"0-g9cc4700\",\"semverString\":\"0.4.0\"}","import React, {Component} from 'react';\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport {withStyles} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport SendIcon from '@material-ui/icons/Send';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {createMuiTheme, MuiThemeProvider} from '@material-ui/core/styles';\nimport gold from '@material-ui/core/colors/amber';\n\n// Has to be last mui import\nimport Box from '@material-ui/core/Box';\n\nimport DocumentMeta from 'react-document-meta';\nimport HttpsRedirect from 'react-https-redirect';\nimport queryString from 'query-string';\n\nimport './App.css';\nimport QRDialog from './QRDialog';\nimport Questions from './Questions';\nimport PagesDrawer from './PagesDrawer';\nimport ConfirmSubmitDialog from './ConfirmSubmitDialog';\nimport DebugButton from './DebugButton';\nimport ErrorDisplay from './ErrorDisplay';\n\nimport styles from './styles';\nimport scope from './googleScopes';\nimport describe from './describe';\n\nconst version = describe.semverString;\nconst meta = {\n    title: `${process.env.REACT_APP_NAME} ${version}`,\n    meta: {\n        'ui-version': version,\n    },\n};\n\n// Parse query string\nconst params = queryString.parse(window.location.search);\n\n// All the following keys are optional.\n// We try our best to provide a great default value.\nconst theme = createMuiTheme({\n    typography: {\n        useNextVariants: true,\n    },\n    palette: {\n        type: params.theme || 'dark',\n        primary: gold,\n    },\n});\n\nconst README_URL = 'https://docs.google.com/document/d/' +\n        '1wkG-bEYFyqxV-SmYoQmgLTJ1m1pvPvXlnTTnjh60ZFY/edit?usp=sharing';\n\nwindow.addEventListener('beforeinstallprompt', (e) => {\n    // Prevent Chrome 67 and earlier from automatically showing the prompt\n    e.preventDefault();\n    // Stash the event so it can be triggered later.\n    //deferredPrompt = e;\n    if (params.install !== undefined) {\n        e.prompt(); // TODO: Don't show prompt immediately?\n    }\n});\n\nclass App extends Component {\n    componentWillMount() {\n        this.props.init();\n    }\n\n    render() {\n        let {props} = this;\n        const {classes} = props;\n\n        return (\n            <HttpsRedirect>\n            <MuiThemeProvider theme={theme}>\n            <DocumentMeta {...meta} />\n            <React.Fragment>\n            <CssBaseline />\n            <div className={classes.root}>\n                <PagesDrawer\n                    classes={classes}\n                    // Screens sizes to show permanent drawer\n                    permScreens={{smUp: true}}\n                    // Screens sizes to show temporary drawer\n                    tempScreens={{xsDown: true}}\n                    readme={README_URL}\n                />\n                <AppBar position='fixed' className={classes.appBar}>\n                    <Toolbar>\n                        {params.debug !== undefined &&\n                            // Super secret debug button\n                            <DebugButton />\n                        }\n                        <IconButton\n                            className={classes.menuButton}\n                            color='inherit'\n                            onClick={() => props.showNavigation()}\n                            aria-label='Pages'>\n                            <MenuIcon\n                            />\n                        </IconButton>\n                        <Button\n                            color='inherit'\n                            disabled={!props.canSubmit}\n                            onClick={() => props.submit()}>\n                            Submit\n                            <SendIcon />\n                        </Button>\n                        <div className={classes.grow} />\n                        <div className='g-signin2'\n                            data-theme='dark'\n                            data-scope={scope}\n                        />\n                    </Toolbar>\n                </AppBar>\n                <QRDialog\n                    open={props.droneQRScannerActive}\n                    onClose={props.hideDroneQRScanner}\n                />\n                <QRDialog\n                    open={props.sensorQRScannerActive}\n                    onClose={props.hideSensorQRScanner}\n                />\n                <ConfirmSubmitDialog classes={classes} />\n                <main className={classes.content}>\n                    <div className={classes.toolbar} />\n                    { props.initialized && (props.loggedin ?\n                        <Questions\n                            classes={classes}\n                            isSinglePage={params.singlePage !== undefined}\n                            completedHtml={(\n                                <div>\n                                    <Typography color='inherit' >\n                                        Submitting Metadata\n                                    </Typography>\n                                    <Box p={4} >\n                                        <CircularProgress size={100} />\n                                    </Box>\n                                </div>\n                            )}\n                            onComplete={({data}) => props.submitResults()}\n                        />\n                        :\n                        <Box p={4} >\n                            <Typography color='inherit' >\n                                Please sign in to continue.\n                            </Typography>\n                        </Box>\n                    )}\n                    <div className={classes.toolbar} />\n                </main>\n                <ErrorDisplay classes={classes} />\n                <AppBar position='fixed' className={classes.bottomBar}>\n                    <MobileStepper\n                        steps={props.pages.length}\n                        position='static'\n                        activeStep={props.pageNum}\n                        className={classes.mobileStepper}\n                        nextButton={\n                            props.pageNum === props.pages.length - 1 ?\n                                <Button\n                                    color='primary'\n                                    disabled={!props.canSubmit}\n                                    onClick={() => props.submit()}>\n                                    Sumbit\n                                    <SendIcon />\n                                </Button>\n                                :\n                                <Button\n                                    color='primary'\n                                    disabled={!props.canNext}\n                                    onClick={() => props.goNextPage()}>\n                                    Next\n                                    <NavigateNextIcon />\n                                </Button>\n                        }\n                        backButton={\n                            <Button\n                                color='primary'\n                                disabled={!props.canPrev}\n                                onClick={() => props.goPreviousPage()}>\n                                <NavigateBeforeIcon />\n                                Previous\n                            </Button>\n                        }\n                    />\n                </AppBar>\n            </div>\n            </React.Fragment>\n            </MuiThemeProvider>\n            </HttpsRedirect>\n        );\n    }\n}\n\nexport default connect({\n    initialized: state`initialized`,\n    navigationOpen: state`navigationOpen`,\n    showNavigation: sequences`showNavigation`,\n    hideNavigation: sequences`hideNavigation`,\n    setSurveyPage: sequences`setSurveyPage`,\n    pages: state`pages`,\n    pageNum: state`pageNum`,\n    goNextPage: sequences`goNextPage`,\n    goPreviousPage: sequences`goPreviousPage`,\n    submit: sequences`completeSurvey`,\n    questions: state`questions`,\n    droneQRScannerActive: state`droneQRScannerActive`,\n    sensorQRScannerActive: state`sensorQRScannerActive`,\n    showDroneQRScanner: sequences`showDroneQRScanner`,\n    showSensorQRScanner: sequences`showSensorQRScanner`,\n    hideDroneQRScanner: sequences`hideDroneQRScanner`,\n    hideSensorQRScanner: sequences`hideSensorQRScanner`,\n    init: sequences`init`,\n    loggedin: state`loggedin`,\n    login: sequences`login`,\n    logout: sequences`logout`,\n    google: state`google`,\n    createSheet: sequences`createSheet`,\n    submitResults: sequences`submitResults`,\n    canSubmit: state`canSubmit`,\n    canNext: state`canNext`,\n    canPrev: state`canPrev`,\n}, withStyles(styles)(App));\n","import {Reaction} from 'cerebral';\nimport {state, moduleState, props, sequences} from 'cerebral/tags'\nimport {set, merge, when, parallel} from 'cerebral/factories';\n\nimport ls from 'local-storage';\n\nexport default (paths) => ({\n    providers: {\n        localstore: {\n            get(key) {\n                return ls.get(key);\n            },\n\n            set(key, val) {\n                return ls.set(key, val);\n            },\n\n            clear(key) {\n                return ls.remove(key);\n            },\n        },\n    },\n\n    state: {\n        initialized: false,\n    },\n\n    sequences: {\n        persistState: [\n            when(moduleState`initialized`), // Wait for init?\n            {\n                true: ({localstore, props}) => {\n                    let {key, val} = props;\n                    return {success: localstore.set(key, val)};\n                },\n                false: [],\n            },\n        ],\n        clear: [\n            parallel('clear paths', paths.map(path => [\n                ({localstore}) => ({val: localstore.clear(path)}),\n            ])),\n        ],\n        init: [\n            // Load each path from store and set it in state\n            parallel('get paths', paths.map(path => [\n                ({localstore}) => ({val: localstore.get(path)}),\n                when(props`val`, val => val === null),\n                {\n                    true: [], // Ignore null/unset keys\n                    false: [\n                        when(props`val`, val => typeof val === 'object'),\n                        {\n                            true: [merge(state`${path}`, props`val`)],\n                            false: [set(state`${path}`, props`val`)],\n                        }\n                    ],\n                }\n            ])),\n            set(moduleState`initialized`, true),\n        ],\n    },\n\n    // Generate a reaction for each path in the store\n    reactions: paths.map(path => {\n        let reaction = Reaction(\n            {\n                val: state`${path}`,\n            },\n            // TODO: Why didn't using moduleSequences work??\n            //({val, get}) => get(moduleSequences`persistState`)({key: path, val})\n            ({val, get}) => {\n                const name = reaction.modulePath.join('.');\n                const sequence = get(sequences`${name}.persistState`);\n                return sequence({key: path, val});\n            }\n        );\n        return {[path]: reaction};\n    }).reduce((obj, reaction) => Object.assign(obj, reaction), {}),\n});\n","import Promise from 'bluebird';\n//import {state} from 'cerebral';\nimport googleapi from 'google-client-api';\nimport XLSX from 'xlsx';\nimport {Apixu} from 'apixu';\nimport ducky from 'ducky';\n\nimport * as errors from './errors';\nimport model from '../surveyModel';\nimport scope from '../googleScopes';\n\nimport describe from '../describe';\n\nexport const geolocation = {\n    async getCurrentLoc() {\n        try {\n            return await new Promise((resolve, reject) =>\n                    navigator.geolocation.getCurrentPosition(resolve, reject))\n                .then(pos => pos.coords);\n        } catch (err) {\n            let msg;\n\n            switch (err.code) {\n                case 1: // PERMISSION_DENIED\n                    msg = 'Permission denied';\n                    break;\n                case 2: // POSITION_UNAVAILABLE\n                    msg = 'Position unavailable';\n                    break;\n                case 3: // TIMEOUT\n                    msg = 'Timeout obtaining position';\n                    break;\n                default:\n                    msg = 'Unknown error';\n            }\n\n            throw new errors.GetLocationError(msg);\n        }\n    }\n};\n\nexport const survey = {\n    setAnswer(name, value) {\n        model.model.setValue(name, value);\n    },\n\n    setPage(num) {\n        model.model.currentPageNo = num;\n    },\n\n    nextPage() {\n        return model.model.nextPage();\n    },\n\n    previousPage() {\n        return model.model.prevPage();\n    },\n\n    setData(data) {\n        model.model.data = data;\n    },\n\n    submit() {\n        return model.model.completeLastPage();\n    },\n};\n\nlet gapi;\nexport const gapiClient = {\n    // Do one-time gapi setup not effected by login/logout\n    async init({login, logout}) {\n        gapi = Promise.resolve(googleapi())\n            // Load client library\n            .tap(({load}) => new Promise((resolve, reject) => load('client', {\n                callback: resolve,\n                onerror: reject,\n                timeout: 10000,\n                ontimeout: reject,\n            })))\n            // Initialize client (load sheets and drive APIs)\n            .tap(({client}) => client.init({\n                discoveryDocs: [\n                    'https://www.googleapis.com/discovery/v1/apis/drive/v3/rest',\n                    'https://sheets.googleapis.com/$discovery/rest?version=v4'\n                ],\n                scope,\n            }))\n            // Listen for login/logout\n            .tap(({auth2}) => {\n                let auth = auth2.getAuthInstance();\n                let listener = signedIn => {\n                    if (!signedIn) {\n                        logout && this.context.get(logout)();\n                    } else {\n                        let user = auth.currentUser.get().getBasicProfile();\n                        login && this.context.get(login)({\n                            name: user.getName(),\n                        });\n                    }\n                };\n\n                auth.isSignedIn.listen(listener);\n                listener(auth.isSignedIn.get());\n            });\n        await gapi;\n    },\n\n    async get(/*scope*/) { // TODO: Fix/remove code for incremental scopes?\n        return gapi\n            .tap(({auth2}) => {\n                let user = auth2.getAuthInstance().currentUser.get();\n\n                // Request needed scopes from user\n                if (!user.hasGrantedScopes(scope)) {\n                    return user.grant({scope});\n                }\n            })\n            .get('client');\n    },\n\n    async disconnect() {\n        (await gapi).auth2.getAuthInstance().currentUser.get().disconnect();\n    },\n};\nconst appdataScope = [\n    'https://www.googleapis.com/auth/drive.appdata',\n    //'https://www.googleapis.com/auth/drive.file',\n].join(' ');\nexport const googleappdata = {\n    async getData() {\n        let {drive} = await this.context.gapiClient.get(appdataScope);\n\n        let result;\n        try {\n            ({result} = await drive.files.list({\n                spaces: 'appDataFolder',\n                q: \"name='config.json'\",\n                fields: 'files(id, appProperties)',\n            }));\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n\n        let file = result.files[0] || {};\n        return {\n            data: file.appProperties,\n            id: file.id,\n        };\n    },\n\n    async initData({body = {}}) {\n        let {drive} = await this.context.gapiClient.get(appdataScope);\n\n        try {\n            let {result} = await drive.files.create({\n                resource: {\n                    name: 'config.json',\n                    mimeType: 'application/json',\n                    parents: ['appDataFolder'],\n                    appProperties: body,\n                fields: 'id',\n                },\n            });\n            return result.id;\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n    },\n\n    async updateData({body = {}, id}) {\n        let {drive} = await this.context.gapiClient.get(appdataScope);\n\n        try {\n            let {result} = await drive.files.update({\n                fileId: id,\n                resource: {\n                    name: 'config.json',\n                    mimeType: 'application/json',\n                    appProperties: body,\n                },\n            });\n            return result;\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n    },\n};\nconst sheetsScope = 'https://www.googleapis.com/auth/drive.file';\n// Decide sheet version based on semver\nconst {semver} = describe;\nconst sheetVer = semver.major || semver.minor / 10;\nexport const googlesheets = {\n    async createSheet() {\n        let {sheets} = await this.context.gapiClient.get(sheetsScope);\n\n        const ver = googlesheets.getVersion();\n        const properties = {\n            title: `${process.env.REACT_APP_NAME} metadata uploads v${ver}`,\n        };\n        try {\n            let {result} = await sheets.spreadsheets.create({properties});\n            return result;\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n    },\n\n    getVersion() {\n        return sheetVer;\n    },\n\n    async getSheet(id) {\n        let {sheets} = await this.context.gapiClient.get(sheetsScope);\n\n        let result;\n        try {\n            ({result} = await sheets.spreadsheets.values.get({\n                spreadsheetId: id,\n                range: ['Sheet1'],\n            }));\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n\n        if (!result.values) {\n            return [];\n        }\n\n        let sheet = XLSX.utils.aoa_to_sheet(result.values);\n        return XLSX.utils.sheet_to_json(sheet);\n    },\n\n    async writeSheet(id, data) {\n        const sheetsURL = 'https://docs.google.com/spreadsheets';\n        let {sheets} = await this.context.gapiClient.get(sheetsScope);\n\n        // Format data with spreadsheet lib\n        let sheet = XLSX.utils.json_to_sheet(data);\n        let values = XLSX.utils.sheet_to_json(sheet, {header: 1});\n\n        try {\n            let {result} = await sheets.spreadsheets.values.update({\n                spreadsheetId: id,\n                range: sheet['!ref'],\n                valueInputOption: 'USER_ENTERED', // 'RAW'\n                includeValuesInResponse: false,\n            }, {\n                majorDimension: 'ROWS',\n                values,\n            });\n            let row = data.length + 1;\n            return {\n                ...result,\n                // TODO: How to better handle URL from ID etc.?\n                resultsUrl: `${sheetsURL}/d/${id}#gid=0&range=${row}:${row}`\n            };\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n    },\n\n    async addRow(id, cols, row) {\n        let {sheets} = await this.context.gapiClient.get(sheetsScope);\n\n        return sheets.spreadsheets.values.append({\n            spreadsheetId: id,\n            valueInputOption: 'USER_ENTERED', // 'RAW'\n            insertDataOption: 'INSERT_ROWS', // 'OVERWRITE'\n            includeValuesInResponse: false,\n        }, {\n            majorDimension: 'ROWS',\n            values: [row],\n        });\n    },\n};\nconst driveFilesUrl = 'https://www.googleapis.com/upload/drive/v3/files/';\nexport const googledrive = {\n    async upload(file) {\n        let {drive} = await this.context.gapiClient.get();\n\n        try {\n            let {result} = await drive.files.create({\n                resource: {\n                    name: file.name,\n                    mimeType: file.type,\n                },\n                fields: 'id',\n            })\n\n            // TODO: You really can't sent the body with gapi??? wtf\n            let token = (await this.context.gapiClient.get()).getToken();\n            await fetch(driveFilesUrl + result.id, {\n                method: 'PATCH',\n                headers: new Headers({\n                    'Authorization': `Bearer ${token['access_token']}`,\n                    'Content-Type': file.type,\n                }),\n                body: file,\n            });\n\n            return `https://docs.google.com/uc?export=download&id=${result.id}`;\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n    },\n};\n\n// TODO: Better way to handle arrays and such in a spreadsheet?\nconst fileResult = ducky.validate\n        .compile('[ { content: string, name: string, type: string } ]');\nexport const serialize = {\n    serialize(data) {\n        return data.map((result, i) => {\n            let serialized = {};\n            Object.keys(result).forEach(key => {\n                try {\n                    if (typeof result[key] === 'object') {\n                        if (ducky.validate.execute(result[key], fileResult)) {\n                            /* TODO: Make IMAGE work in google sheets?\n                            serialized[key] =\n                                    `=IMAGE(\"${result[key][0].content}\",3)`;\n                            */\n                            serialized[key] = result[key][0].content;\n                        } else if (result[key]) {\n                            let kkey = '$$' + key;\n                            serialized[kkey] = JSON.stringify(result[key]);\n                        }\n                    } else {\n                        serialized[key] = result[key];\n                    }\n                } catch (err) {\n                    throw new errors.SerializeError(i, key, err);\n                }\n            });\n            return serialized;\n        });\n    },\n\n    deserialize(data) {\n        return data.map((result, i) => {\n            let deserialized = {};\n            Object.keys(result).forEach(key => {\n                try {\n                    if (key.startsWith('$$')) {\n                        if (result[key]) {\n                            let kkey = key.substring(2);\n                            deserialized[kkey] = JSON.parse(result[key]);\n                        }\n                    } else {\n                        deserialized[key] = result[key];\n                    }\n                } catch (err) {\n                    // +2 is for header row and 1 vs 0 indexing\n                    throw new errors.DeserializeError(i + 2, key, err);\n                }\n            });\n            return deserialized;\n        });\n    },\n};\n\nconst apixu = new Apixu({apikey: process.env.REACT_APP_APIXU_KEY});\nexport const weather = {\n    async current(query) {\n        return (await apixu.current(query)).current;\n    },\n};\n","import {CerebralError} from 'cerebral';\n\nexport class GetLocationError extends CerebralError {\n    constructor(message) {\n        super(message);\n        this.name = 'GetLocationError';\n    }\n}\n\nexport class GAPIError extends CerebralError {\n    constructor(err) {\n        // gapi doesn't always throw the same sorts of things..\n        let error = err;\n        if (err.result && error.result.error) {\n            error = err.result.error;\n        }\n\n        super(error.message);\n        this.name = 'GAPIError';\n        this.result = error;\n    }\n}\n\nexport class SerializeError extends CerebralError {\n    constructor(r, c, err) {\n        super(`Error serializing column \"${c}\" of row ${r}: ${err.message}`);\n        this.name = 'DeserializeError';\n        this.err = err;\n    }\n}\n\nexport class DeserializeError extends CerebralError {\n    constructor(r, c, err) {\n        super(`Error deserializing column \"${c}\" of row ${r}: ${err.message}`);\n        this.name = 'DeserializeError';\n        this.err = err;\n    }\n}\n","import forIn from 'lodash.forin';\n\nimport {state} from 'cerebral/tags';\n\nexport function getCurrentLocation({geolocation}) {\n    return geolocation.getCurrentLoc()\n        .then(({latitude, longitude}) => ({currentLoc: {latitude, longitude}}));\n}\n\nexport function setAnswer({survey, props}) {\n    return survey.setAnswer(props.question, props.answer);\n}\nexport function setSurveyPage({survey, props}) {\n    return survey.setPage(props.pageNum);\n}\nexport function setSurveyData({survey, props}) {\n    return survey.setData(props.data);\n}\nexport function nextPage({survey}) {\n    return {error: survey.nextPage()};\n}\nexport function previousPage({survey}) {\n    return {error: survey.previousPage()};\n}\nexport function completeSurvey({survey, props}) {\n    return {done: survey.submit()};\n}\n\nexport async function initGapi({gapiClient, props}) {\n    return gapiClient.init(props);\n}\nexport async function disconnectGapi({gapiClient}) {\n    return gapiClient.disconnect();\n}\nexport async function createSheet({googlesheets}) {\n    let sheet = await googlesheets.createSheet();\n    return {sheet};\n}\nexport function getSheetVersion({googlesheets}){\n    let version = googlesheets.getVersion();\n    return {version};\n}\nexport async function initSheet({googlesheets, props}) {\n    let {result} = await googlesheets.createSheet();\n    await googlesheets.addRow(result.spreadsheetId, props.headerRow);\n}\nexport async function serializeResults({serialize, props}) {\n    let {results} = props;\n\n    return {results: serialize.serialize(results)};\n}\nexport async function deserializeResults({serialize, props}) {\n    let {results} = props;\n\n    return {results: serialize.deserialize(results)};\n}\nexport async function loadPastResults({googlesheets, path, props}) {\n    let {resultsId} = props;\n\n    try {\n        let results = (await googlesheets.getSheet(resultsId)) || [];\n\n        return path.found({results});\n    } catch (err) {\n        return path.notfound();\n    }\n}\nexport async function uploadResults({googlesheets, props}) {\n    let {results, resultsId} = props;\n\n    return googlesheets.writeSheet(resultsId, results);\n}\n\nexport async function createAppData({googleappdata, props}) {\n    let id = await googleappdata.initData(props);\n\n    return {id};\n}\nexport async function updateAppData({googleappdata, props}) {\n    let result = await googleappdata.updateData(props);\n\n    return {result};\n}\nexport async function loadAppData({googleappdata, path}) {\n    let {data, id} = await googleappdata.getData();\n\n    if (data) {\n        return path.found({body: data, id});\n    } else {\n        return path.notfound();\n    }\n}\n\nexport async function uploadScreenshot({googledrive, props}) {\n    let url = await googledrive.upload(props.file);\n\n    return {url};\n}\n\nexport async function getCurrentWeather({weather, props}) {\n    let query = props.latitude + ',' + props.longitude;\n    return await weather.current(query);\n}\n\nexport function getLastAnswer({get, props}) {\n    let {question} = props;\n\n    try {\n        let data = get(state`pastData`);\n\n        return {answer: data[data.length - 1][question]};\n    } catch (err) {\n        return {};\n    }\n}\n\nexport function initPages({get, store}) {\n    let pages = get(state`questions.pages`);\n\n    pages.forEach(page => {\n        forIn(page, function findKeys(val, key, obj) {\n            switch (key) {\n                case 'autocomplete':\n                    switch (val) {\n                        case 'previous':\n                            let {name} = obj;\n                            obj.choices = get(state`pastAnswers.${name}`);\n                            break;\n                        default:\n                    }\n                    break;\n                case 'previousAsChoices':\n                    if (val) {\n                        let {name, choices=[]} = obj;\n                        let previous = get(state`pastAnswers.${name}`) || [];\n                        previous.forEach(ans => {\n                            if (!choices.includes(ans)) {\n                                choices.push(ans);\n                            }\n                        });\n                        obj.choices = choices;\n                    }\n                    break;\n                default:\n                    if (typeof val === 'object') {\n                        forIn(val, findKeys);\n                    }\n            }\n        });\n    });\n\n    store.merge(state`questions`, {pages});\n}\n","import {set, unset, push, concat, when, equals} from 'cerebral/factories';\nimport {state, sequences, props} from 'cerebral/tags';\nimport * as actions from './actions';\n\nexport const init = [\n    set(props`login`, sequences`login`),\n    set(props`logout`, sequences`logout`),\n    actions.initGapi,\n    ({get}) => get(sequences`store.init`)(),\n    set(state`initialized`, true),\n];\n\nexport const showDroneQRScanner = [set(state`droneQRScannerActive`, true)];\nexport const hideDroneQRScanner = [set(state`droneQRScannerActive`, false)];\nexport const showSensorQRScanner = [set(state`sensorQRScannerActive`, true)];\nexport const hideSensorQRScanner = [set(state`sensorQRScannerActive`, false)];\nexport const showNavigation = [set(state`navigationOpen`, true)];\nexport const hideNavigation = [set(state`navigationOpen`, false)];\n\nexport const setSurveyData = [set(state`surveyData`, props`data`)];\nexport const setAnswer = [actions.setAnswer];\nexport const setSurveyPage = [\n    set(state`pageNum`, props`pageNum`),\n];\nexport const setPages = [set(state`pages`, props`pages`)];\nexport const goNextPage = [\n    actions.nextPage,\n    /*\n    set(props`pageNum`, state`pageNum`, num => num + 1),\n    set(state`pageNum`, props`pageNum`),\n    */\n];\nexport const goPreviousPage = [\n    actions.previousPage,\n    /*\n    set(props`pageNum`, state`pageNum`, num => num - 1),\n    set(state`pageNum`, props`pageNum`),\n    */\n];\nexport const completeSurvey = [actions.completeSurvey];\nexport const setCurrentLocation = [\n    actions.getCurrentLocation,\n    set(props`locations`, state`surveyData.locations`),\n    // Using the push factory seems to break things...\n    ({props}) => ({locations: props.locations.concat(props.currentLoc)}),\n    set(props`question`, 'locations'),\n    set(props`answer`, props`locations`),\n    actions.setAnswer,\n];\n\n// Create a sheet and put corresponding appdata in props...\nconst createSheetWithAppData = [\n    actions.createSheet,\n    set(props`body`, {}),\n    set(props`body.resultsId`, props`sheet.spreadsheetId`),\n    // Only load results for the right version\n    // TODO: Support migrating sheets to higher versions?\n    ({props}) => ({\n        body: {[`resultsId-v${props.version}`]: props.body.resultsId}\n    }),\n];\n\nexport const loadappdata = [\n    actions.getSheetVersion,\n    actions.loadAppData,\n    {\n        found: [],\n        notfound: [\n            createSheetWithAppData,\n            actions.createAppData,\n        ],\n    },\n    ({props}) => ({\n        body: {resultsId: props.body[`resultsId-v${props.version}`]}\n    }),\n    set(state`resultsId`, props`body.resultsId`, id => id || ''),\n    set(state`appdataId`, props`id`),\n];\n\nexport const uploadScreenshot = [\n    actions.uploadScreenshot,\n];\n\n// Run _after_ login\nexport const login = [\n    when(state`loggedin`),\n    {\n        true: [], // Don't login multiple times?\n        false: [\n            set(state`loggedin`, true),\n            loadappdata,\n            set(props`resultsId`, state`resultsId`),\n            actions.loadPastResults,\n            {\n                found: [\n                    actions.deserializeResults,\n                    set(state`pastData`, props`results`),\n                ],\n                notfound: [\n                    createSheetWithAppData,\n                    set(state`resultsId`, props`sheet.spreadsheetId`),\n                    actions.updateAppData,\n                ],\n            },\n            actions.initPages,\n            set(state`loggedin`, props`name`, name => ({name})),\n        ],\n    },\n];\n// Runs _after_ logout\nexport const logout = [\n    set(state`loggedin`, false),\n    set(state`pastData`, []),\n];\n\nexport const disconnectGoogle = [actions.disconnectGapi];\n\nexport const createSheet = [actions.createSheet];\nexport const submitResults = [\n    set(state`submitting`, true),\n    when(state`loggedin`),\n    {\n        true: [],\n        false: login,\n    },\n    push(state`pastData`, state`surveyData`),\n    set(props`results`, state`pastData`),\n    actions.serializeResults,\n    set(props`resultsId`, state`resultsId`),\n    actions.uploadResults,\n    set(state`resultsUrl`, props`resultsUrl`),\n    set(state`confirmSubmitOpen`, true),\n    ({get}) => get(sequences`store.clear`)(),\n];\n\nexport const confirmSubmit = [\n    set(state`confirmSubmitOpen`, false),\n    () => window.location.reload(),\n];\n\nexport const setDebugMenuOpen = [set(state`debugMenuOpen`, props`open`)];\n\nexport const getCurrentLocationWeather = [\n    actions.getCurrentLocation,\n    set(props`latitude`, props`currentLoc.latitude`),\n    set(props`longitude`, props`currentLoc.longitude`),\n    actions.getCurrentWeather,\n];\n\nexport const autofill = [\n    when(\n        props`question`,\n        state`surveyData`,\n        (q, d) => d[q] !== null && d[q] !== undefined,\n    ),\n    {\n        true: [], // Don't autofill if already answered\n        false: [\n            equals(props`autofill`),\n            {\n                person: [set(props`answer`, state`loggedin.name`)],\n                // TODO: Combine lat/lon into one autofill?\n                latitude: [\n                    actions.getCurrentLocation,\n                    set(props`answer`, props`currentLoc.latitude`),\n                ],\n                longitude: [\n                    actions.getCurrentLocation,\n                    set(props`answer`, props`currentLoc.longitude`),\n                ],\n                location: [\n                    actions.getCurrentLocation,\n                    set(props`answer`, props`currentLoc`,\n                        ({latitude, longitude}) =>\n                            `${latitude},${longitude}`),\n                ],\n                // TODO: Combine weather autofills?\n                temperature: [\n                    getCurrentLocationWeather,\n                    set(props`answer`, props`temp_f`),\n                ],\n                windspeed: [\n                    getCurrentLocationWeather,\n                    set(props`answer`, props`wind_mph`),\n                ],\n                winddirection: [\n                    getCurrentLocationWeather,\n                    set(props`answer`, props`wind_dir`),\n                ],\n                lastused: [\n                    actions.getLastAnswer,\n                ],\n                otherwise: [],\n            },\n        ],\n    },\n];\n\nexport const displayError = [\n    ({error}) => console.error(error),\n    set(state`error`, props`error`),\n];\nexport const clearError =[unset(state`error`)];\n","import {state} from 'cerebral/tags';\n\nimport forin from 'lodash.forin';\nimport isequal from 'lodash.isequal';\n\nimport unanswered from '../unanswered';\n\nexport const canSubmit = get =>\n        get(state`initialized`) &&\n        get(state`loggedin`) &&\n        !get(state`submitting`) &&\n        !get(state`pages`).some(page => page.error);\n\nexport const canNext = get => {\n    let page = get(state`pageNum`);\n    let pages = get(state`pages`);\n\n    return page < (pages.length - 1) && !pages[page].error;\n};\n\nexport const canPrev = get => {\n    let page = get(state`pageNum`);\n\n    return page > 0;\n};\n\n// Compute previous answers\n// Sorted in reverse chronological order, unique answers only\nexport const pastAnswers = get => {\n    let data = get(state`pastData`);\n\n    let ans = {};\n    forin(data, row => forin(row, (val, key) => {\n        if (unanswered(val)) {\n            return;\n        }\n\n        if (Array.isArray(val)) {\n            return val.map(addAnswer);\n        } else {\n            return addAnswer(val);\n        }\n\n        function addAnswer(val) {\n            if (!ans[key]) {\n                ans[key] = [val];\n            } else if (!ans[key].some(ans => isequal(ans, val))) {\n                ans[key].unshift(val);\n            }\n        }\n    }));\n\n    return ans;\n};\n","import {DateTime} from 'luxon';\n\nexport default {\n    name: 'general',\n    title: 'General',\n    elements: [\n        {\n            name: 'jobname',\n            title: 'Job/Project name',\n            type: 'text',\n            autocomplete: 'previous',\n            choices: [\n                'Bob Ross',\n                'Rusty Shackleford',\n            ],\n        },\n        {\n            name: 'purpose',\n            title: 'Operation/Purpose',\n            type: 'dropdown',\n            choices: [\n                'UAV',\n                'Planting',\n                {\n                    value: 'Spraying',\n                    text: 'Spraying/Spreading',\n                },\n                'Tillage',\n                'Harvest',\n                {\n                    value: 'Anomalies',\n                    text: 'Anomaly Reporting',\n                },\n            ],\n            isRequired: true,\n            autofill: 'lastused',\n        },\n        {\n            name: 'datetime',\n            title: 'Date/Time of data',\n            type: 'text',\n            inputType: 'datetime-local',\n            defaultValue: DateTime.local().toFormat(\"yyyy-MM-dd'T'HH:mm:ss\"),\n        },\n        {\n            type: 'panel',\n            elements: [\n                {\n                    // TODO: Support selecting region on a map\n                    name: 'locations',\n                    title: 'Collection locations',\n                    type: 'paneldynamic',\n                    panelCount: 1,\n                    minPanelCount: 1,\n                    panelAddText: 'Add Location',\n                    panelRemoveText: 'Remove Location',\n                    templateTitle: 'Location #{panelIndex}',\n                    templateElements: [\n                        {\n                            name: 'location',\n                            title: 'Lat/Lon or Label',\n                            type: 'text',\n                            autofill: 'location',\n                            isRequired: true,\n                        },\n                    ],\n                },\n                /*\n                {\n                    name: 'location-button',\n                    title: 'Add current location',\n                    type: 'html',\n                    cerebralbutton: 'setCurrentLocation',\n                },\n                */\n            ],\n        },\n    ]\n};\n","export default {\n    name: 'place',\n    title: 'Place',\n    elements: [\n        {\n            name: 'client',\n            title: 'Grower (or Client)',\n            type: 'text',\n            placeHolder: 'Farmer Frank',\n            autofill: 'lastused',\n            autocomplete: 'previous',\n        },\n        {\n            name: 'operation',\n            title: 'Farm (or Operation)',\n            type: 'text',\n            placeHolder: 'Frank Farms',\n            autocomplete: 'previous',\n        },\n        {\n            name: 'site',\n            title: 'Field (or Site)',\n            type: 'text',\n            placeHolder: 'East Field',\n            autocomplete: 'previous',\n        },\n        {\n            name: 'crop',\n            title: 'Crop',\n            type: 'text',\n            placeHolder: 'corn',\n            autocomplete: 'previous',\n        },\n        {\n            name: 'prev-crop',\n            title: 'Previous Crop',\n            type: 'text',\n            placeHolder: 'beans',\n            autocomplete: 'previous',\n        },\n        {\n            name: 'weather',\n            title: 'Weather',\n            type: 'panel',\n            elements: [\n                {\n                    name: 'weather-button',\n                    title: 'Get Current Weather',\n                    type: 'html',\n                    visible: false,\n                    // TODO: Implement functionality for button\n                    cerebralbutton: 'setCurrentWeather',\n                },\n                {\n                    name: 'temperature',\n                    title: 'Temperature (℉)',\n                    type: 'text',\n                    autofill: 'temperature',\n                    //inputType: 'number',\n                    placeHolder: '60 F'\n                },\n                {\n                    name: 'windspeed',\n                    title: 'Wind Speed (mph)',\n                    type: 'text',\n                    autofill: 'windspeed',\n                    //inputType: 'number',\n                    placeHolder: '10 mph',\n                },\n                {\n                    name: 'winddirection',\n                    title: 'Wind Direction',\n                    type: 'text',\n                    autofill: 'winddirection',\n                    //inputType: 'number',\n                    placeHolder: 'ENE',\n                },\n            ],\n        },\n    ],\n};\n","const anomalies = [\n    'Weather Event',\n    'Weed',\n    'Insect',\n    'Disease',\n    'Vertebrate',\n    'Nutrient Deficiency',\n    'Drainage Installation or Repair',\n];\n\nexport default {\n    name: 'anomalies',\n    visibleIf: '{purpose} == \"Anomalies\"',\n    title: 'Anomalies and Disorders',\n    elements: [\n        {\n            name: 'anomalies',\n            title: 'Anomalies',\n            type: 'matrixdynamic',\n            rowCount: 0,\n            addRowText: 'Add Anomaly',\n            removeRowText: 'Remove Anomaly',\n            columns: [\n                {\n                    name: 'type',\n                    title: 'Type',\n                    cellType: 'dropdown',\n                    isRequired: true,\n                    hasOther: true,\n                    choices: anomalies,\n                },\n                {\n                    name: 'what',\n                    title: 'What',\n                    cellType: 'text',\n                    isRequired: true,\n                },\n                {\n                    name: 'when',\n                    title: 'When',\n                    cellType: 'text',\n                    inputType: 'datetime-local',\n                    isRequired: true,\n                },\n                {\n                    name: 'extent',\n                    title: 'Extent',\n                    cellType: 'text',\n                    isRequired: true,\n                },\n            ],\n        },\n    ],\n};\n","export default {\n    name: 'harvest-conditions',\n    title: 'Crop Conditions',\n    visibleIf: '{purpose} == \"Harvest\"',\n    elements: [\n        {\n            name: 'harvest-conditions-moisture',\n            title: 'Grain Average Moisture (%)',\n            type: 'text',\n            inputType: 'number',\n            isRequired: false,\n            placeHolder: '5 %',\n        },\n        {\n            name: 'harvest-conditions-anticipated-yield-avg',\n            title: 'Anticipated Yield Average (bu/ac)',\n            type: 'text',\n            inputType: 'number',\n            isRequired: false,\n            placeHolder: '250 bu/ac',\n        },\n        {\n            name: 'harvest-conditions-lodging',\n            title: 'Lodging',\n            type: 'dropdown',\n            isRequired: true,\n            choices: [\n                'None',\n                'Slight',\n                'Moderate',\n                'Severe',\n            ],\n        },\n        {\n            name: 'harvest-conditions-grain-quality',\n            title: 'Grain Quality',\n            type: 'tagbox',\n            placeHolder: 'Add conditions',\n            isRequired: false,\n            choices: [\n                'Moldy',\n                'Splits',\n                'Grain Damage',\n                'High Foreign Matter',\n                'Sprouting Seeds',\n            ],\n            previousAsChoices: true,\n        },\n    ],\n};\n","export default {\n    name: 'harvest-transport',\n    title: 'Transport',\n    visibleIf: '{purpose} == \"Harvest\"',\n    elements: [\n        {\n            name: 'harvest-transport-cart',\n            title: 'Grain Cart?',\n            type: 'boolean',\n            isRequired: true,\n        },\n        {\n            name: 'harvest-transport-cart-makemodel',\n            visibleIf: '{harvest-transport-cart} == true',\n            title: 'Grain Cart Make and Model',\n            type: 'dropdown',\n            hideIfChoicesEmpty: false,\n            isRequired: true,\n            hasOther: true,\n            storeOthersAsComment: false,\n            otherText: 'Add new make and model',\n            otherErrorText:\n                'Please enter the new make and model',\n            autocomplete: 'previous',\n            autofill: 'lastused',\n            choices: [\n                // TODO: Have default choices from a secondary sheet?\n            ],\n        },\n        {\n            name: 'harvest-transport-tractor-makemodel',\n            visibleIf: '{harvest-transport-cart} == true',\n            title: 'Tractor Make and Model',\n            type: 'dropdown',\n            hideIfChoicesEmpty: false,\n            isRequired: true,\n            hasOther: true,\n            storeOthersAsComment: false,\n            otherText: 'Add new make and model',\n            otherErrorText:\n                'Please enter the new make and model',\n            autocomplete: 'previous',\n            autofill: 'lastused',\n            choices: [\n                // TODO: Have default choices from a secondary sheet?\n            ],\n        },\n    ],\n};\n","export default {\n    name: 'machinery',\n    title: 'Machinery',\n    visibleIf:\n        '[\"Planting\", \"Spraying\", \"Tillage\", \"Harvest\"] contains {purpose}',\n    elements: [\n        {\n            name: 'machinery-operator',\n            title: 'Operator',\n            type: 'text',\n            isRequired: true,\n            autocomplete: 'previous',\n            autofill: 'lastused',\n        },\n        {\n            name: 'machinery-spray-or-spread',\n            visibleIf: '{purpose} == \"Spraying\"',\n            title: 'Spray or Spread',\n            type: 'radiogroup',\n            choices: [\n                'Spraying',\n                'Spreading',\n            ],\n            isRequired: true,\n        },\n        {\n            name: 'machinery-pull-type',\n            visibleIf: '{purpose} == \"Spraying\"',\n            title: 'Pull Type',\n            type: 'radiogroup',\n            choices: [\n                'Pull',\n                'Self-Propelled',\n            ],\n            isRequired: true,\n        },\n        {\n            name: 'machinery-makemodel',\n            // TODO: change title based on operation?\n            title: 'Machine Make and Model',\n            type: 'dropdown',\n            hideIfChoicesEmpty: false,\n            isRequired: true,\n            hasOther: true,\n            storeOthersAsComment: false,\n            otherText: 'Add new make and model',\n            otherErrorText:\n                'Please enter the new make and model',\n            autocomplete: 'previous',\n            autofill: 'lastused',\n            choices: [\n                // TODO: Have default choices from a secondary sheet?\n            ],\n        },\n        {\n            name: 'planter-makemodel',\n            visibleIf: '{purpose} == \"Planting\"',\n            title: 'Planter Make and Model',\n            type: 'dropdown',\n            hideIfChoicesEmpty: false,\n            isRequired: true,\n            hasOther: true,\n            storeOthersAsComment: false,\n            otherText: 'Add new make and model',\n            otherErrorText:\n                'Please enter the new make and model',\n            autocomplete: 'previous',\n            autofill: 'lastused',\n            choices: [\n                // TODO: Have default choices from a secondary sheet?\n            ],\n        },\n        {\n            name: 'planter-num-rows',\n            visibleIf: '{purpose} == \"Planting\"',\n            title: 'Number of Planter Rows',\n            type: 'text',\n            isRequired: true,\n            inputType: 'number',\n            autofill: 'lastused',\n        },\n        {\n            name: 'machinery-implement',\n            title: 'Implement',\n            type: 'panel',\n            elements: [\n                {\n                    name: 'machinery-implement-type',\n                    visibleIf: '{purpose} == \"Tillage\"',\n                    title: 'Type',\n                    type: 'dropdown',\n                    isRequired: true,\n                    hasOther: true,\n                    storeOthersAsComment: false,\n                    otherText: 'Add new type',\n                    otherErrorText: 'Please enter the new type',\n                    autofill: 'lastused',\n                    autocomplete: 'previous',\n                },\n                {\n                    name: 'machinery-implement-makemodel',\n                    visibleIf: '{purpose} == \"Tillage\" or {machinery-pull-type} == \"Self-Propelled\"',\n                    title: 'Make and Model',\n                    type: 'dropdown',\n                    hideIfChoicesEmpty: false,\n                    isRequired: true,\n                    hasOther: true,\n                    storeOthersAsComment: false,\n                    otherText: 'Add new make and model',\n                    otherErrorText:\n                        'Please enter the new make and model',\n                    autofill: 'lastused',\n                    autocomplete: 'previous',\n                },\n            ],\n        },\n        {\n            name: 'machinery-calibration-report',\n            visibleIf: '{purpose} == \"Planting\"',\n            title: 'Calibration Report',\n            type: 'text',\n            isRequired: true,\n        },\n        {\n            name: 'machinery-row-width',\n            visibleIf: '{purpose} == \"Planting\"',\n            title: 'Row Width (ft)',\n            type: 'text',\n            inputType: 'number',\n            placeHolder: '3 ft',\n            isRequired: true,\n            autofill: 'lastused',\n        },\n        {\n            name: 'machinery-width',\n            visibleIf: '[\"Spraying\", \"Tillage\"] contains {purpose}',\n            title: 'Width (ft)',\n            type: 'text',\n            inputType: 'number',\n            placeHolder: '30 ft',\n            isRequired: true,\n            autofill: 'lastused',\n        },\n        {\n            name: 'machinery-hearder-width',\n            visibleIf: '{purpose} == \"Harvest\"',\n            title: 'Header Width (ft or rows)',\n            type: 'text',\n            inputType: 'number',\n            placeHolder: '30 ft',\n            isRequired: true,\n            autofill: 'lastused',\n        },\n        {\n            name: 'machinery-sprayer-type',\n            visibleIf: '{purpose} == \"Spraying\"',\n            title: 'Type',\n            type: 'dropdown',\n            isRequired: true,\n            autofill: 'lastused',\n            choices: [\n                'Nozzles',\n                'Drop Tube',\n                'Spinner',\n            ],\n        },\n        {\n            name: 'machinery-rate',\n            visibleIf: '{purpose} == \"Spraying\"',\n            title: 'Rate',\n            type: 'text',\n            isRequired: true,\n        },\n        {\n            name: 'machinery-speed',\n            title: 'Speed (mph)',\n            type: 'text',\n            isRequired: true,\n            inputType: 'number',\n            placeHolder: '15 mph',\n        },\n        {\n            name: 'machinery-depth',\n            visibleIf: '[\"Planting\", \"Tillage\"] contains {purpose}',\n            title: 'Depth (in)',\n            type: 'text',\n            isRequired: true,\n            inputType: 'number',\n            placeHolder: '1.5 in',\n        },\n        {\n            name: 'machinery-yield-mapped',\n            visibleIf: '{purpose} == \"Harvest\"',\n            title: 'Yield Mapped?',\n            type: 'boolean',\n            isRequired: true,\n        },\n        {\n            name: 'machinery-yield-calibrated',\n            visibleIf: '{purpose} == \"Harvest\"',\n            title: 'Yield Monitor Calibrated?',\n            type: 'boolean',\n            isRequired: true,\n        },\n        {\n            name: 'machinery-controller-makemodel',\n            visibleIf: '[\"Planting\", \"Spraying\"] contains {purpose}',\n            title: 'Controller Make and Model',\n            type: 'dropdown',\n            hideIfChoicesEmpty: false,\n            isRequired: false,\n            hasOther: true,\n            storeOthersAsComment: false,\n            otherText: 'Add new make and model',\n            otherErrorText:\n                'Please enter the new make and model',\n            autocomplete: 'previous',\n            autofill: 'lastused',\n            choices: [\n                // TODO: Have default choices from a secondary sheet?\n            ],\n        },\n        {\n            name: 'machinery-variable-rate',\n            visibleIf: '{purpose} == \"Spraying\"',\n            title: 'Variable Rate?',\n            type: 'boolean',\n            isRequired: true,\n        },\n        {\n            name: 'machinery-variable-rate-source',\n            visibleIf:\n                '{purpose} == \"Spraying\" and {machinery-variable-rate} == true',\n            title: 'Variable Rate Source',\n            type: 'text',\n            isRequired: true,\n            autocomplete: 'previous',\n        },\n    ],\n};\n","export default {\n    name: 'planting-chemicals',\n    title: 'Chemicals',\n    visibleIf: '{purpose} == \"Planting\"',\n    elements: [\n        {\n            name: 'planting-chemicals-starter',\n            title: 'Starter',\n            type: 'text',\n            isRequired: true,\n            autocomplete: 'previous',\n            autofill: 'lastused',\n        },\n        {\n            name: 'planting-chemicals-insectiside',\n            title: 'Insecticide',\n            type: 'text',\n            isRequired: true,\n            autocomplete: 'previous',\n            autofill: 'lastused',\n        },\n    ],\n};\n","export default {\n    name: 'planting-seed',\n    title: 'Seed',\n    visibleIf: '{purpose} == \"Planting\"',\n    elements: [\n        {\n            name: 'seed-brand',\n            title: 'Brand',\n            type: 'text',\n            autofill: 'lastused',\n            autocomplete: 'previous',\n            isRequired: true,\n        },\n        {\n            name: 'seed-variety',\n            title: 'Variety',\n            type: 'text',\n            autofill: 'lastused',\n            autocomplete: 'previous',\n            isRequired: true,\n        },\n        {\n            name: 'seed-treatments',\n            title: 'Treatments',\n            type: 'tagbox',\n            isRequired: true,\n            placeHolder: 'Choose Treatments',\n            previousAsChoices: true,\n        },\n        {\n            name: 'seed-population',\n            title: 'Population',\n            type: 'text',\n            inputType: 'number',\n            autofill: 'lastused',\n            isRequired: true,\n        },\n    ],\n};\n","export default {\n    name: 'spraying-chemicals',\n    title: 'Chemicals',\n    visibleIf: '{purpose} == \"Spraying\"',\n    elements: ['Herbicide', 'Insecticide', 'Fungicide', 'Fertilizer']\n        .map(chem => ({\n            name: `spraying-chemicals-${chem.toLowerCase()}s`,\n            title: `${chem}s`,\n            type: 'paneldynamic',\n            panelCount: 0,\n            panelAddText: `Add ${chem}`,\n            panelRemoveText: `Remove ${chem}`,\n            autofill: 'lastused',\n            templateTitle: `${chem} #{panelIndex}`,\n            templateElements: [\n                {\n                    name: `spraying-checmicals-${chem.toLowerCase()}s-product`,\n                    valueName: 'product',\n                    title: 'Product Name',\n                    type: 'text',\n                    isRequired: true,\n                },\n                {\n                    name: `spraying-checmicals-${chem.toLowerCase()}s-amount`,\n                    valueName: 'amount',\n                    title: 'Amount per Acre (this product)',\n                    type: 'text',\n                    inputType: 'number',\n                    isRequired: true,\n                },\n            ],\n        })),\n};\n","export default {\n    name: 'tillage-conditions',\n    title: 'Conditions',\n    visibleIf: '{purpose} == \"Tillage\"',\n    elements: [\n        {\n            name: 'tillage-conditions-residue-start',\n            title: 'Residue Cover (%) at Start',\n            type: 'text',\n            inputType: 'number',\n            isRequired: false,\n        },\n        {\n            name: 'tillage-conditions-residue-after',\n            title: 'Residue Cover (%) after Tillage',\n            type: 'text',\n            inputType: 'number',\n            isRequired: false,\n        },\n        {\n            name: 'tillage-conditions-soil-temp',\n            title: 'Soil Temperature (℉)',\n            type: 'text',\n            inputType: 'number',\n            isRequired: true,\n            placeHolder: '50 F',\n        },\n        {\n            name: 'tillage-conditions-soil-moisture',\n            title: 'Soil Moisture (%)',\n            type: 'text',\n            inputType: 'number',\n            isRequired: true,\n            placeHolder: '23 %',\n        },\n        {\n            name: 'tillage-conditions-field-condition-start',\n            title: 'Field Condition at Start',\n            type: 'text',\n            isRequired: false,\n            autocomplete: 'previous',\n        },\n        {\n            name: 'tillage-conditions-field-condition-after',\n            title: 'Field Condition after Tillage',\n            type: 'text',\n            isRequired: false,\n            autocomplete: 'previous',\n        },\n    ],\n};\n\n","export default {\n    name: 'b4ufly',\n    title: 'B4UFLY Status',\n    visible: false, // Get rid of B4UFLY page for now\n    elements: [\n        {\n            name: 'b4ufly-status',\n            title: 'Status',\n            type: 'dropdown',\n            isRequired: true,\n            choices: [\n                'proceed with caution',\n                'flying in controlled airspace (class B/C/D/E)',\n                'other',\n            ],\n        },\n        {\n            name: 'b4ufly-extra',\n            title: '',\n            type: 'panel',\n            visibleIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\" or {b4ufly-status} == \"other\"',\n            elements: [\n                {\n                    name: 'b4ufly-airport-operator',\n                    title: 'Airport Operator Contact',\n                    type: 'text',\n                    requiredIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\n                },\n                {\n                    name: 'b4ufly-control-tower',\n                    title: 'Control Tower Contact',\n                    type: 'text',\n                    requiredIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\n                },\n                {\n                    name: 'b4ufly-prior-authorization',\n                    title: 'Prior Authorization',\n                    type: 'text',\n                    requiredIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\n                },\n            ],\n        },\n        {\n            // TODO: What the heck even is this?\n            name: 'b4ufly-options',\n            title: 'Options',\n            type: 'checkbox',\n            isRequired: true,\n            choices: [\n                'checked NOTAMS',\n                'checked flight restrictions',\n                'checked local restrictions',\n                'checked upcoming restrictions',\n                'checked national parks',\n            ],\n        },\n        {\n            name: 'b4ufly-certificate',\n            title: 'COW or COA #',\n            type: 'text',\n        },\n    ],\n};\n","// TODO: Get these from sheets\nconst drones = [\n    {\n        make: 'Test',\n        model: 'testtest',\n        type: 'Fixed wing',\n    },\n];\n\nexport default {\n    name: 'uav-drone',\n    title: 'UAV Info',\n    visibleIf: '{purpose} == \"UAV\"',\n    elements: [\n        {\n            // TODO: make required for submission only\n            name: 'drone-screenshots',\n            title: 'Flight Planning Screenshots',\n            type: 'panel',\n            elements: [\n                {\n                    name: 'drone-flight-planning',\n                    title: 'Screenshot of Flight Planning',\n                    type: 'file',\n                    storeDataAsText: false,\n                    acceptedTypes: 'image/*',\n                    allowMultiple: false,\n                },\n                {\n                    name: 'drone-advanced-flight-planning',\n                    title: 'Screenshot of Advanced Flight Planning',\n                    type: 'file',\n                    storeDataAsText: false,\n                    acceptedTypes: 'image/*',\n                    allowMultiple: false,\n                },\n            ],\n        },\n        {\n            name: 'drone-qr',\n            title: 'Scan drone QR code',\n            type: 'html',\n            cerebralbutton: 'showDroneQRScanner',\n            visible: false,\n        },\n        {\n            name: 'uav-drone-type',\n            title: 'Type',\n            type: 'dropdown',\n            isRequired: true,\n            defaultValue: 'Fixed wing',\n            hasOther: true,\n            choices: [\n                'Fixed wing',\n                'Multi-rotor',\n                'Helicopter',\n            ],\n        },\n        {\n            name: 'uav-drone-makemodel',\n            title: 'Make and Model',\n            type: 'dropdown',\n            autofill: 'lastused',\n            hideIfChoicesEmpty: false,\n            hasOther: true,\n            storeOthersAsComment: false,\n            otherText: 'Add new make and model',\n            otherErrorText: 'Please enter the new make and model',\n            choices: drones.map((e, i) => ({\n                text: e.make + ' ' + e.model,\n                value: e.make + ' ' + e.model,\n                //value: i,\n                visibleIf: `{uav-drone-type} == \"${e.type}\"`,\n            })),\n        },\n    ]\n};\n","export default {\n    name: 'uav-operator',\n    title: 'UAV Operator',\n    visibleIf: '{purpose} == \"UAV\"',\n    elements: [\n        {\n            name: 'remote-pics',\n            title: 'Remote Pilot in Command (PIC)',\n            description: 'remote PIC - A person who holds a remote pilot certificate with an sUAS rating and has the final authority and responsibility for the operation and safety of an sUAS operation conducted under part 107.',\n            type: 'paneldynamic',\n            panelCount: 1,\n            minPanelCount: 1,\n            panelAddText: 'Add Remote PIC',\n            panelRemoveText: 'Remove Remote PIC',\n            autofill: 'lastused',\n            templateTitle: 'Remote PIC #{panelIndex}',\n            templateElements: [\n                {\n                    name: 'remote-pic-name',\n                    title: 'Name',\n                    type: 'text',\n                    autocomplete: 'previous',\n                    //autofill: 'person',\n                    isRequired: true,\n                    placeHolder: 'Rusty Shackleford',\n                },\n                {\n                    name: 'remote-pic-certificate',\n                    title: 'Certificate Number or equivalent',\n                    type: 'text',\n                    inputType: 'number',\n                    isRequired: true,\n                    placeHolder: '1234567',\n                    validators: [\n                        {\n                            type: 'regex',\n                            regex: /^[0-9]{7}$/,\n                            text: 'License number must be 7 digits'\n                        }\n                    ]\n                },\n\n            ],\n        },\n        {\n            name: 'observer',\n            title: 'Visual Observer (VO)',\n            description: 'VO - A person acting as a flightcrew member who assists the small UA remote PIC and the person manipulating the controls to see and avoid other air traffic or objects aloft or on the ground.',\n            type: 'paneldynamic',\n            panelCount: 0,\n            panelAddText: 'Add VO',\n            panelRemoveText: 'Remove VO',\n            templateTitle: 'VO #{panelIndex}',\n            templateElements: [\n                {\n                    name: 'observer-name',\n                    title: 'Name',\n                    type: 'text',\n                    isRequired: true,\n                    placeHolder: 'John Doe'\n                },\n            ],\n        },\n    ]\n};\n","// TODO: Get these from sheets\nconst sensors = [\n    {\n        make: 'Sony',\n        model: 'A6000',\n        type: 'RGB',\n    },\n    {\n        make: 'Parrot',\n        model: 'Sequoia',\n        type: 'Multispectral',\n    },\n];\n\nexport default {\n    name: 'uav-sensors',\n    title: 'Sensors',\n    visibleIf: '{purpose} == \"UAV\"',\n    elements: [\n        {\n            name: 'sensor-qr',\n            type: 'html',\n            cerebralbutton: 'showSensorQRScanner',\n            visible: false,\n        },\n        {\n            name: 'sensors',\n            title: 'Sensors',\n            type: 'paneldynamic',\n            panelCount: 0,\n            panelAddText: 'Add Sensor',\n            panelRemoveText: 'Remove Sensor',\n            autofill: 'lastused',\n            templateTitle: 'Sensor #{panelIndex}',\n            templateElements: [\n                {\n                    name: 'uav-sensor-type',\n                    valueName: 'type',\n                    title: 'Type',\n                    type: 'dropdown',\n                    isRequired: true,\n                    hasOther: true,\n                    storeOthersAsComment: false,\n                    otherText: 'Add new type',\n                    otherErrorText: 'Please enter the new type',\n                    choices: [\n                        'RGB',\n                        'Multispectral',\n                        'Hyperspectral',\n                        'LiDAR',\n                        'Thermal',\n                    ],\n                },\n                {\n                    name: 'uav-sensor-makemodel',\n                    title: 'Make and Model',\n                    type: 'dropdown',\n                    hideIfChoicesEmpty: false,\n                    isRequired: true,\n                    hasOther: true,\n                    storeOthersAsComment: false,\n                    otherText: 'Add new make and model',\n                    otherErrorText:\n                        'Please enter the new make and model',\n                    choices: sensors.map((e, i) => ({\n                        text: e.make + ' ' + e.model,\n                        value: e.make + ' ' + e.model,\n                        //value: i,\n                        visibleIf: `{panel.type} == \"${e.type}\"`,\n                    })),\n                },\n            ],\n        },\n    ],\n};\n","import * as pages0 from './pages/0-general.js'; import * as pages1 from './pages/1-place.js'; import * as pages2 from './pages/anomalies.js'; import * as pages3 from './pages/harvest/conditions.js'; import * as pages4 from './pages/harvest/transport.js'; import * as pages5 from './pages/machinery.js'; import * as pages6 from './pages/planting/chemicals.js'; import * as pages7 from './pages/planting/seed.js'; import * as pages8 from './pages/spraying/chemicals.js'; import * as pages9 from './pages/tillage/conditions.js'; import * as pages10 from './pages/uav/b4ufly.js'; import * as pages11 from './pages/uav/drone.js'; import * as pages12 from './pages/uav/operator.js'; import * as pages13 from './pages/uav/sensors.js'; let pages = [pages0, pages1, pages2, pages3, pages4, pages5, pages6, pages7, pages8, pages9, pages10, pages11, pages12, pages13];\n\n// Load the default export of all pages\nexport default pages.map(page => page.default);\n","/* eslint import/no-webpack-loader-syntax: off */\nimport pages from '!import-glob!./pages-loader';\n\npages.forEach(page => {\n    // Add a footer to each page\n    page.elements.push(\n        {\n            name: `notes-${page.name}`,\n            title: 'Notes or comments',\n            type: 'comment',\n        },\n        {\n            type: 'html',\n            html: '* Indicates required field',\n        },\n    );\n});\n\nexport default pages;\n","import localstore from './modules/localstore';\n\nimport * as providers from './providers';\nimport * as sequences from './sequences';\nimport * as computeds from './computeds';\nimport * as errors from './errors';\n\n// TODO: Should this be here??\nimport pages from '../pages';\n\n// Parts of state to keep in localstorage\nconst store = localstore(['pageNum', 'surveyData']);\n\nexport default {\n    sequences,\n    state: {\n        ...computeds,\n        initialized: false,\n        loggedin: null,\n        appdataId: null,\n        resultsId: null,\n        submitting: false,\n        navigationOpen: false,\n        confirmSubmitOpen: false,\n        droneQRScannerActive: false,\n        sensorQRScannerActive: false,\n        surveyData: null,\n        pastData: [],\n        pages: [],\n        pageNum: 0,\n        questions: {\n            showNavigationButtons: false,\n            goNextPageAutomatic: true,\n            clearInvisibleValues: 'onHidden',\n            checkErrorsMode: 'onValueChanged',\n            pages,\n        },\n    },\n    catch: [\n        // TODO: Pop up toast or something about giving permission?\n        //[errors.GetLocationError, ({error}) => console.error(error)],\n        //[Error, ({error}) => console.error(error)],\n        [Error, sequences.displayError],\n    ],\n    providers,\n    modules: {\n        store,\n        //storage,\n    },\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from 'cerebral';\nimport {Container} from '@cerebral/react';\nimport Devtools from 'cerebral/devtools';\n\nimport AppComponent from './App';\nimport main from './main';\n\nconst app = App(main, {\n    devtools: process.env.NODE_ENV === 'production' ?\n        null : Devtools({host: 'localhost:8000', reconnect: true}),\n    throwToConsole: true,\n    noRethrow: false,\n    returnSequencePromise: true,\n});\n\n// Run init sequence\napp.on('initialized:model', () => console.log('sadsad') && app.getSequence('init')());\n\nReactDOM.render(\n    <Container app={app}>\n        <AppComponent />\n    </Container>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nif (process.env.NODE_ENV === 'production') {\n    serviceWorker.register();\n} else {\n    serviceWorker.unregister();\n}\n"],"sourceRoot":""}