{"version":3,"sources":["serviceWorker.js","QRDialog.js","surveyModel.js","Questions.js","App.js","localstore/index.js","module/providers.js","module/errors.js","module/actions.js","module/sequences.js","module/index.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","connect","props","react_default","a","createElement","Dialog_default","fullScreen","open","AppBar_default","Toolbar_default","IconButton_default","color","onClick","onClose","aria-label","Close_default","Typography_default","variant","lib_default","style","width","onScan","data","onData","surveyModel","model","Survey","metaData","addProperty","name","Questions","_this","this","_this$props","get","palette","theme","themeColors","ThemeColors","primary","main","dark","text","secondary","divider","background","default","paper","light","applyTheme","questions","_templateObject","pageNum","_templateObject2","undefined","currentPageNo","reaction","_templateObject3","_ref","_templateObject4","_ref2","updatePages","setData","survey","setPages","pages","visiblePages","map","page","hasErrors","title","_this2","_this$props2","Object","objectWithoutProperties","survey_react","assign","onCurrentPageChanged","_templateObject5","setPage","onPageVisibleChanged","bind","onPageAdded","onValueChanged","_ref3","value","setTimeout","completedHtml","ReactDOMServer","renderToString","onAfterRenderQuestion","_ref4","question","htmlElement","cerebralbutton","seq","sequences","_templateObject6","ReactDOM","render","Button_default","Component","_templateObject7","init","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","withTheme","params","queryString","parse","search","createMuiTheme","type","gold","App","classes","styles","Fragment","CssBaseline_default","className","position","menuButton","showNavigation","Menu_default","disabled","goPreviousPage","NavigateBefore_default","length","goNextPage","NavigateNext_default","some","submit","Send_default","grow","data-theme","SwipeableDrawer_default","navigationOpen","onOpen","hideNavigation","List_default","ListItem_default","key","button","selected","setSurveyPage","ListItemIcon_default","Warning_default","Done_default","ListItemText_default","src_QRDialog","droneQRScannerActive","hideDroneQRScanner","sensorQRScannerActive","hideSensorQRScanner","src_Questions","isSinglePage","singlePage","onComplete","submitResults","App_templateObject","App_templateObject2","App_templateObject3","App_templateObject4","App_templateObject5","App_templateObject6","App_templateObject7","App_templateObject8","App_templateObject9","App_templateObject10","App_templateObject11","App_templateObject12","showDroneQRScanner","_templateObject13","showSensorQRScanner","_templateObject14","_templateObject15","_templateObject16","_templateObject17","login","_templateObject18","logout","_templateObject19","google","_templateObject20","createSheet","_templateObject21","_templateObject22","withStyles","root","flexGrow","marginLeft","marginRight","client","gapi","GetLocationError","_CerebralError","message","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","inherits","CerebralError","GAPIError","_CerebralError2","err","result","geolocation","getCurrentLoc","_getCurrentLoc","asyncToGenerator","regenerator_default","mark","_callee","msg","wrap","_context","prev","next","Promise","resolve","reject","getCurrentPosition","pos","coords","abrupt","sent","t0","t1","code","stop","apply","arguments","setAnswer","setValue","num","nextPage","previousPage","prevPage","completeLastPage","gapiClient","_init","_callee2","_context2","googleapi","tap","load","callback","onerror","timeout","ontimeout","discoveryDocs","auth","auth2","getAuthInstance","listener","signedIn","context","isSignedIn","listen","_x","_get","_callee3","_context3","_ref5","grants","scope","reduce","b","concat","currentUser","grant","googleappdata","getData","_getData","_callee4","_ref6","drive","_ref7","_context4","files","list","spaces","q","fields","appProperties","initData","_initData","_callee5","_ref8","_ref8$body","body","_ref9","_ref10","_context5","create","resource","mimeType","parents","_x2","googlesheets","_createSheet","_callee6","_ref11","sheets","_ref12","_context6","spreadsheets","getSheet","_getSheet","_callee7","id","_ref13","_ref14","sheet","_context7","values","spreadsheetId","range","XLSX","utils","aoa_to_sheet","sheet_to_json","_x3","writeSheet","_writeSheet","_callee8","_ref15","_ref16","_context8","json_to_sheet","header","update","valueInputOption","includeValuesInResponse","majorDimension","_x4","_x5","addRow","_addRow","_callee9","cols","row","_ref17","_context9","append","insertDataOption","_x6","_x7","_x8","answer","module_actions_createSheet","results","serialized","keys","forEach","JSON","stringify","deserialized","startsWith","substring","resultsId","path","found","notfound","paths","set","sequences_templateObject","sequences_templateObject2","sequences_templateObject3","sequences_templateObject4","_initGapi","sequences_templateObject5","sequences_templateObject6","sequences_templateObject7","sequences_templateObject8","sequences_templateObject9","sequences_templateObject10","sequences_templateObject11","setSurveyData","sequences_templateObject12","sequences_templateObject13","actions","sequences_templateObject14","sequences_templateObject15","sequences_templateObject16","sequences_templateObject17","completeSurvey","done","setCurrentLocation","currentLoc","latitude","longitude","sequences_templateObject18","sequences_templateObject19","locations","sequences_templateObject20","sequences_templateObject21","sequences_templateObject22","loadappdata","_x9","_loadAppData","_templateObject23","_templateObject24","_templateObject25","_createAppData","_templateObject26","_templateObject27","_templateObject28","_templateObject29","_loadPastResults","_deserializeResults","_templateObject30","_templateObject31","_templateObject32","_templateObject33","_templateObject34","when","_templateObject35","true","false","push","_templateObject36","_templateObject37","_templateObject38","_templateObject39","_serializeResults","_templateObject40","_templateObject41","_uploadResults","store","providers","localstore","ls","val","clear","initialized","persistState","localstore_templateObject","success","localstore_templateObject2","merge","localstore_templateObject3","localstore_templateObject4","localstore_templateObject5","localstore_templateObject6","localstore_templateObject7","reactions","defineProperty","Reaction","localstore_templateObject8","localstore_templateObject9","obj","src_module","surveyData","pastData","showNavigationButtons","goNextPageAutomatic","clearInvisibleValues","checkErrorsMode","elements","choices","defaultValue","inputType","DateTime","local","toFormat","panelCount","minPanelCount","panelAddText","panelRemoveText","templateTitle","templateElements","isRequired","visibleIf","placeHolder","description","validators","regex","allowMultiple","hasOther","hideIfChoicesEmpty","make","e","i","enableIf","valueName","requiredIf","html","Error","modules","app","devtools","_cerebral_react","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c0b11401.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {connect} from '@cerebral/react';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport QrReader from 'react-qr-reader';\r\n\r\nfunction QRDialog(props) {\r\n    return (\r\n        <Dialog\r\n            fullScreen\r\n            open={props.open}\r\n        >\r\n          <AppBar>\r\n            <Toolbar>\r\n              <IconButton color='inherit' onClick={props.onClose} aria-label='Close'>\r\n                <CloseIcon />\r\n              </IconButton>\r\n              <Typography variant='h6' color='inherit'>\r\n                Scan QR code\r\n              </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n            <QrReader\r\n                style={{width: '100%'}}\r\n                onScan={data => {\r\n                    if (!data) {\r\n                        return;\r\n                    }\r\n\r\n\t\t\t\t\tprops.onData(data);\r\n                    props.onClose();\r\n                }}\r\n            />\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default connect({\r\n}, QRDialog);\r\n","// TODO: This is probably the wrong way to do stuff, but I don't know cerebral\r\n// Want a singleton of survey model\r\nexport default {\r\n    model: null\r\n};\r\n","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactDOMServer from 'react-dom/server';\r\n\r\nimport {connect} from '@cerebral/react';\r\nimport {state, sequences} from 'cerebral/tags';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport {withTheme} from '@material-ui/core/styles';\r\n\r\nimport * as Survey from 'survey-react';\r\nimport 'survey-react/survey.css';\r\n\r\nimport surveyModel from './surveyModel';\r\n\r\nSurvey.JsonObject.metaData.addProperty('question', {\r\n    name: 'cerebralbutton',\r\n});\r\n\r\nclass Questions extends Component {\r\n    componentWillMount() {\r\n        const {get, theme} = this.props;\r\n\r\n        // Apply MUI theme to survey\r\n        const {palette} = theme;\r\n        let themeColors = Survey.StylesManager.ThemeColors['default'];\r\n        themeColors[\"$main-color\"] = palette.primary.main;\r\n        themeColors[\"$main-hover-color\"] = palette.primary.dark;\r\n        themeColors[\"$text-color\"] = palette.text.primary;\r\n        themeColors[\"$header-color\"] = palette.secondary.main;\r\n        themeColors[\"$border-color\"] = palette.divider;\r\n        themeColors[\"$header-background-color\"] = palette.secondary.main;\r\n        themeColors[\"$body-background-color\"] = palette.background.default;\r\n        themeColors[\"$body-container-background-color\"] = palette.background.paper;\r\n        themeColors[\"$inputs-background-color\"] = palette.background.paper;\r\n        themeColors[\"$error-color\"] = palette.error.main;\r\n        themeColors[\"$error-background-color\"] = palette.error.light;\r\n        Survey.StylesManager.applyTheme('default');\r\n\r\n        this.model = new Survey.Model(this.props.questions);\r\n        surveyModel.model = this.model;\r\n\r\n        // TODO: I'm sure this is isn't right with cerebral..\r\n        let data = get(state`surveyData`);\r\n        if (data) {\r\n            this.model.data = data;\r\n        }\r\n        let pageNum = get(state`pageNum`);\r\n        if (pageNum !== undefined) {\r\n            this.model.currentPageNo = pageNum;\r\n        }\r\n\r\n        this.props.reaction('changePage',\r\n            {\r\n                pageNum: state`pageNum`,\r\n            },\r\n            ({pageNum}) => this.model.currentPageNo = pageNum\r\n        );\r\n        this.props.reaction('changeData',\r\n            {\r\n                data: state`surveyData`,\r\n            },\r\n            ({data}) => this.model.data = data\r\n        );\r\n\r\n        this.updatePages(this.model);\r\n        this.props.setData({data: this.model.data});\r\n    }\r\n\r\n    updatePages(survey) {\r\n        this.props.setPages({\r\n            pages: survey.visiblePages.map((page) => ({\r\n                error: page.hasErrors(false, false),\r\n                name: page.name,\r\n                title: page.title,\r\n            }))\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {get, ...props} = this.props;\r\n        return (\r\n            <Survey.Survey\r\n                {...props}\r\n                model={this.model}\r\n                onCurrentPageChanged={(survey) => {\r\n                    if (get(state`pageNum`) !== survey.currentPageNo) {\r\n                        props.setPage({pageNum: survey.currentPageNo});\r\n                    }\r\n                }}\r\n                onPageVisibleChanged={this.updatePages.bind(this)}\r\n                onPageAdded={this.updatePages.bind(this)}\r\n                onValueChanged={(survey, {name, value}) => {\r\n                    props.setData({data: survey.data});\r\n                    // No idea why, but cerebral freaks out if I call this\r\n                    // without the setTimeout...\r\n                    setTimeout(() => this.updatePages(survey));\r\n                }}\r\n                completedHtml={\r\n                    ReactDOMServer.renderToString(props.completedHtml)\r\n                }\r\n                onAfterRenderQuestion={\r\n                    (survey, {question, htmlElement}) => {\r\n                        if (!question.cerebralbutton) {\r\n                            return;\r\n                        }\r\n\r\n                        let seq = get(sequences`${question.cerebralbutton}`);\r\n                        ReactDOM.render(\r\n                            <Button onClick={() => seq()}>\r\n                                {question.title}\r\n                            </Button>\r\n                        , htmlElement);\r\n                    }\r\n                }\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    {\r\n        questions: state`questions`,\r\n        init: sequences`initSurvey`,\r\n        data: state`surveyData`,\r\n        setData: sequences`setSurveyData`,\r\n        setPage: sequences`setSurveyPage`,\r\n        setPages: sequences`setPages`,\r\n    },\r\n    withTheme()(Questions)\r\n);\r\n","import React, {Component} from 'react';\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport {withStyles} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport SendIcon from '@material-ui/icons/Send';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Drawer from '@material-ui/core/SwipeableDrawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport queryString from 'query-string';\n\nimport './App.css';\nimport QRDialog from './QRDialog';\nimport Questions from './Questions';\n\nimport {createMuiTheme, MuiThemeProvider} from '@material-ui/core/styles';\nimport gold from '@material-ui/core/colors/amber';\n\n// Parse query string\nconst params = queryString.parse(window.location.search);\n\n// All the following keys are optional.\n// We try our best to provide a great default value.\nconst theme = createMuiTheme({\n    palette: {\n\t\ttype: params.theme || 'light',\n        primary: gold,\n    },\n});\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n};\n\nclass App extends Component {\n\n    componentWillMount() {\n        this.props.init();\n    }\n\n    render() {\n        let props = this.props;\n        const {classes} = props;\n        return (\n            <MuiThemeProvider theme={theme}>\n            <React.Fragment>\n\t\t\t<CssBaseline />\n            <div className='App'>\n                <AppBar position='static'>\n                    <Toolbar>\n                        <IconButton\n                            className={classes.menuButton}\n                            color='inherit'\n                            onClick={() => props.showNavigation()}\n                            aria-label='Menu'>\n                            <MenuIcon\n                            />\n                        </IconButton>\n                        <Button\n                            color='inherit'\n                            disabled={props.pageNum === 0}\n                            onClick={() => props.goPreviousPage()}>\n                            <NavigateBeforeIcon />\n                            Previous\n                        </Button>\n                        <Button\n                            color='inherit'\n                            disabled={props.pageNum === props.pages.length - 1}\n                            onClick={() => props.goNextPage()}>\n                            Next\n                            <NavigateNextIcon />\n                        </Button>\n                        <Button\n                            color='inherit'\n                            disabled={props.pages.some(page => page.error)}\n                            onClick={() => props.submit()}>\n                            Submit\n                            <SendIcon />\n                        </Button>\n                        <div className={classes.grow} />\n\t\t\t\t\t\t<div className=\"g-signin2\" data-theme='dark' />\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                  open={props.navigationOpen}\n                  onOpen={()=>props.showNavigation()}\n                  onClose={()=>props.hideNavigation()}\n                >\n                    <List>\n                        {props.pages.map(({name, title, error}, pageNum) => (\n                            <ListItem\n                                key={name}\n                                button\n                                selected={pageNum === props.pageNum}\n                                className={error ? 'page-err' : 'page-complete'}\n                                onClick={()=>props.setSurveyPage({pageNum})}>\n                                <ListItemIcon>\n                                    {error ? <WarningIcon /> : <DoneIcon />}\n                                </ListItemIcon>\n                                <ListItemText primary={title} />\n                            </ListItem>\n                        ))}\n                    </List>\n                </Drawer>\n                <QRDialog\n                    open={props.droneQRScannerActive}\n                    onClose={props.hideDroneQRScanner}\n                />\n                <QRDialog\n                    open={props.sensorQRScannerActive}\n                    onClose={props.hideSensorQRScanner}\n                />\n                <Questions\n                    isSinglePage={params.singlePage !== undefined}\n                    completedHtml={\n                        (<div> woo done!</div>)\n                    }\n                    onComplete={({data}) => props.submitResults()}\n                />\n            </div>\n            </React.Fragment>\n            </MuiThemeProvider>\n        );\n    }\n}\n\nexport default connect({\n    navigationOpen: state`navigationOpen`,\n    showNavigation: sequences`showNavigation`,\n    hideNavigation: sequences`hideNavigation`,\n    setSurveyPage: sequences`setSurveyPage`,\n    pages: state`pages`,\n    pageNum: state`pageNum`,\n    goNextPage: sequences`goNextPage`,\n    goPreviousPage: sequences`goPreviousPage`,\n    submit: sequences`completeSurvey`,\n    questions: state`questions`,\n    droneQRScannerActive: state`droneQRScannerActive`,\n    sensorQRScannerActive: state`sensorQRScannerActive`,\n    showDroneQRScanner: sequences`showDroneQRScanner`,\n    showSensorQRScanner: sequences`showSensorQRScanner`,\n    hideDroneQRScanner: sequences`hideDroneQRScanner`,\n    hideSensorQRScanner: sequences`hideSensorQRScanner`,\n    init: sequences`init`,\n    login: sequences`login`,\n    logout: sequences`logout`,\n    google: state`google`,\n\tcreateSheet: sequences`createSheet`,\n    submitResults: sequences`submitResults`,\n}, withStyles(styles)(App));\n","import {Reaction} from 'cerebral';\nimport {state, props, sequences} from 'cerebral/tags'\nimport {set, merge, when} from 'cerebral/factories';\n\nimport ls from 'local-storage';\n\nexport default (paths) => ({\n    providers: {\n        localstore: {\n            get(key) {\n                return ls.get(key);\n            },\n\n            set(key, val) {\n                return ls.set(key, val);\n            },\n\n            clear() {\n                return ls.clear();\n            },\n        },\n    },\n\n    state:{\n        initialized: false,\n    },\n\n    sequences: {\n        persistState: [\n            when(state`store.initialized`), // Wait for init?\n            {\n                true: ({localstore, props}) => {\n                    let {key, val} = props;\n                    return {success: localstore.set(key, val)};\n                },\n                false: [],\n            },\n        ],\n        init: [\n            // Load each path from store and set it in state\n            paths.map(path => [\n                ({localstore}) => ({val: localstore.get(path)}),\n                when(props`val`, val => typeof val === 'object'),\n                {\n                    true: [merge(state`${path}`, props`val`)],\n                    false: [set(state`${path}`, props`val`)],\n                }\n            ]),\n            set(state`store.initialized`, true),\n        ],\n    },\n\n    // Generate a reaction for each path in the store\n    reactions: paths.map(path => ({[path] : Reaction(\n        {\n            val: state`${path}`,\n        },\n        ({val, get}) => get(sequences`store.persistState`)({key: path, val})\n    )})).reduce((obj, reaction) => Object.assign(obj, reaction), {}),\n});\n","import Promise from 'bluebird';\n//import {state} from 'cerebral';\nimport googleapi from 'google-client-api';\nimport XLSX from 'xlsx';\n\nimport {GetLocationError, GAPIError} from './errors';\nimport model from '../surveyModel';\n\nexport const geolocation = {\n    async getCurrentLoc() {\n        try {\n            return await new Promise((resolve, reject) =>\n                    navigator.geolocation.getCurrentPosition(resolve, reject))\n                .then(pos => pos.coords);\n        } catch (err) {\n            let msg;\n\n            switch (err.code) {\n                case 1: // PERMISSION_DENIED\n                    msg = 'Permission denied';\n                    break;\n                case 2: // POSITION_UNAVAILABLE\n                    msg = 'Position unavailable';\n                    break;\n                case 3: // TIMEOUT\n                    msg = 'Timeout obtaining position';\n                    break;\n                default:\n                    msg = 'Unknown error';\n            }\n\n            throw new GetLocationError(msg);\n        }\n    }\n};\n\nexport const survey = {\n    setAnswer(name, value) {\n        model.model.setValue(name, value);\n    },\n\n    setPage(num) {\n        model.model.currentPageNo = num;\n    },\n\n    nextPage() {\n        return model.model.nextPage();\n    },\n\n    previousPage() {\n        return model.model.prevPage();\n    },\n\n    setData(data) {\n        model.model.data = data;\n    },\n\n    submit() {\n        return model.model.completeLastPage();\n    },\n};\n\nlet client;\nlet gapi;\nexport const gapiClient = {\n    // Do one-time gapi setup not effected by login/logout\n    async init({login, logout}) {\n        gapi = Promise.resolve(googleapi())\n            // Load client library\n            .tap(({load}) => new Promise((resolve, reject) => load('client', {\n                callback: resolve,\n                onerror: reject,\n                timeout: 10000,\n                ontimeout: reject,\n            })))\n            // Initialize client (load sheets and drive APIs)\n            .tap(({client}) => client.init({\n                discoveryDocs: [\n                    'https://www.googleapis.com/discovery/v1/apis/drive/v3/rest',\n                    'https://sheets.googleapis.com/$discovery/rest?version=v4'\n                ],\n            }))\n            // Listen for login/logout\n            .tap(({auth2}) => {\n                let auth = auth2.getAuthInstance();\n                let listener = signedIn => {\n                    if (!signedIn) {\n                        client = undefined;\n                        logout && this.context.get(logout)();\n                    } else {\n                        login && this.context.get(login)();\n                    }\n                };\n\n                auth.isSignedIn.listen(listener);\n                listener(auth.isSignedIn.get());\n            });\n        await gapi;\n    },\n\n    async get() {\n        if (client) {\n            return client;\n        }\n\n        client = await gapi\n            // Request needed scopes from user\n            .tap(({auth2}) => {\n                const grants = {\n                    scope: [\n                        'https://www.googleapis.com/auth/drive.file',\n                        'https://www.googleapis.com/auth/drive.appdata',\n                    ].reduce((a, b) => `${a} ${b}`),\n                };\n                let auth = auth2.getAuthInstance();\n\n                return auth.currentUser.get().grant(grants);\n            })\n            .get('client');\n\n        return client;\n    }\n}\nexport const googleappdata = {\n    async getData() {\n        let {drive} = await this.context.gapiClient.get();\n\n        let result;\n        try {\n            ({result} = await drive.files.list({\n                spaces: 'appDataFolder',\n                q: \"name='config.json'\",\n                fields: 'files(id, appProperties)',\n            }));\n        } catch (err) {\n            throw new GAPIError(err);\n        }\n\n        return result.files[0].appProperties;\n    },\n\n    async initData({body = {}}) {\n        let {drive} = await this.context.gapiClient.get();\n\n        try {\n            let {result} = await drive.files.create({\n                resource: {\n                    name: 'config.json',\n                    mimeType: 'application/json',\n                    parents: ['appDataFolder'],\n                    appProperties: body,\n                },\n            });\n            return result;\n        } catch (err) {\n            throw new GAPIError(err);\n        }\n    },\n}\nexport const googlesheets = {\n    async createSheet() {\n        let {sheets} = await this.context.gapiClient.get();\n\n        try {\n            let {result} = await sheets.spreadsheets.create({}, {});\n            return result;\n        } catch (err) {\n            throw new GAPIError(err);\n        }\n    },\n\n    async getSheet(id) {\n        let {sheets} = await this.context.gapiClient.get();\n\n        let result;\n        try {\n            ({result} = await sheets.spreadsheets.values.get({\n                spreadsheetId: id,\n                range: ['Sheet1'],\n            }));\n        } catch (err) {\n            throw new GAPIError(err);\n        }\n\n        if (!result.values) {\n            return [];\n        }\n\n        let sheet = XLSX.utils.aoa_to_sheet(result.values);\n        return XLSX.utils.sheet_to_json(sheet);\n    },\n\n    async writeSheet(id, data) {\n        let {sheets} = await this.context.gapiClient.get();\n\n        // Format data with spreadsheet lib\n        let sheet = XLSX.utils.json_to_sheet(data);\n        let values = XLSX.utils.sheet_to_json(sheet, {header: 1});\n\n        try {\n            let {result} = await sheets.spreadsheets.values.update({\n                spreadsheetId: id,\n                range: sheet['!ref'],\n                valueInputOption: 'USER_ENTERED', // 'RAW'\n                includeValuesInResponse: false,\n            }, {\n                majorDimension: 'ROWS',\n                values,\n            });\n            return result;\n        } catch (err) {\n            throw new GAPIError(err);\n        }\n    },\n\n    async addRow(id, cols, row) {\n        let {sheets} = await this.context.gapiClient.get();\n\n        return sheets.spreadsheets.values.append({\n            spreadsheetId: id,\n            valueInputOption: 'USER_ENTERED', // 'RAW'\n            insertDataOption: 'INSERT_ROWS', // 'OVERWRITE'\n            includeValuesInResponse: false,\n        }, {\n            majorDimension: 'ROWS',\n            values: [row],\n        });\n    },\n};\n","import {CerebralError} from 'cerebral';\n\nexport class GetLocationError extends CerebralError {\n    constructor(message) {\n        super(message);\n        this.name = 'GetLocationError';\n    }\n}\n\nexport class GAPIError extends CerebralError {\n    constructor(err) {\n        // gapi doesn't always throw the same sorts of things..\n        let error = err;\n        if (err.result && error.result.error) {\n            error = err.result.error;\n        }\n\n        super(error.message);\n        this.name = 'GAPIError';\n        this.result = error;\n    }\n}\n","//import {state} from 'cerebral';\n\nexport function getCurrentLocation({geolocation}) {\n    return geolocation.getCurrentLoc()\n        .then(({latitude, longitude}) => ({currentLoc: {latitude, longitude}}));\n}\n\nexport function setAnswer({survey, props}) {\n    return survey.setAnswer(props.question, props.answer);\n}\nexport function setSurveyPage({survey, props}) {\n    return survey.setPage(props.pageNum);\n}\nexport function setSurveyData({survey, props}) {\n    return survey.setData(props.data);\n}\nexport function nextPage({survey}) {\n    return {error: survey.nextPage()};\n}\nexport function previousPage({survey}) {\n    return {error: survey.previousPage()};\n}\nexport function completeSurvey({survey, props}) {\n    return {done: survey.submit()};\n}\n\nexport async function initGapi({gapiClient, props}) {\n\treturn gapiClient.init(props);\n}\nexport async function createSheet({googlesheets}) {\n\tlet sheet = await googlesheets.createSheet();\n\treturn {sheet};\n}\nexport async function initSheet({googlesheets, props}) {\n\tlet {result} = await googlesheets.createSheet();\n\tawait googlesheets.addRow(result.spreadsheetId, props.headerRow);\n}\nexport async function serializeResults({props}) {\n\tlet {results} = props;\n\n\t// TODO: Better way to handle arrays and such in a spreadsheet?\n\tlet serialized = results.map(result => {\n\t\tlet serialized = {};\n\t\tObject.keys(result).forEach(key => {\n\t\t\tif (result[key] && typeof result[key] === 'object') {\n\t\t\t\tserialized['$$' + key] = JSON.stringify(result[key]);\n\t\t\t} else {\n\t\t\t\tserialized[key] = result[key];\n\t\t\t}\n\t\t});\n\t\treturn serialized;\n\t});\n\n\treturn {results: serialized};\n}\nexport async function deserializeResults({props}) {\n\tlet {results} = props;\n\n\tlet deserialized = results.map(result => {\n\t\tlet deserialized = {};\n\t\tObject.keys(result).forEach(key => {\n\t\t\tif (key.startsWith('$$')) {\n\t\t\t\tdeserialized[key.substring(2)] = JSON.parse(result[key]);\n\t\t\t} else {\n\t\t\t\tdeserialized[key] = result[key];\n\t\t\t}\n\t\t});\n\t\treturn deserialized;\n\t});\n\n\treturn {results: deserialized};\n}\nexport async function loadPastResults({googlesheets, props}) {\n\tlet {resultsId} = props;\n\n\tlet results = (await googlesheets.getSheet(resultsId)) || [];\n\n\treturn {results};\n}\nexport async function uploadResults({googlesheets, props}) {\n\tlet {results, resultsId} = props;\n\n\treturn googlesheets.writeSheet(resultsId, results);\n}\n\nexport async function createAppData({googleappdata, props}) {\n    let result = await googleappdata.initData(props);\n\n    return {result};\n}\nexport async function loadAppData({googleappdata, path}) {\n    let data = await googleappdata.getData();\n\n    if (data) {\n        return path.found({body: data});\n    } else {\n        return path.notfound();\n    }\n}\n","import {set, push, when} from 'cerebral/factories';\nimport {state, sequences, props} from 'cerebral/tags';\nimport * as actions from './actions';\nimport {sequence, parallel} from 'cerebral';\n\nexport const init = [\n    set(props`login`, sequences`login`),\n    set(props`logout`, sequences`logout`),\n    actions.initGapi,\n    ({get}) => get(sequences`store.init`)(),\n];\n\nexport const showDroneQRScanner = [set(state`droneQRScannerActive`, true)];\nexport const hideDroneQRScanner = [set(state`droneQRScannerActive`, false)];\nexport const showSensorQRScanner = [set(state`sensorQRScannerActive`, true)];\nexport const hideSensorQRScanner = [set(state`sensorQRScannerActive`, false)];\nexport const showNavigation = [set(state`navigationOpen`, true)];\nexport const hideNavigation = [set(state`navigationOpen`, false)];\n\nexport const setSurveyData = [set(state`surveyData`, props`data`)];\nexport const setAnswer = [actions.setAnswer];\nexport const setSurveyPage = [\n    set(state`pageNum`, props`pageNum`),\n];\nexport const setPages = [set(state`pages`, props`pages`)];\nexport const goNextPage = [\n    actions.nextPage,\n    /*\n    set(props`pageNum`, state`pageNum`, num => num + 1),\n    set(state`pageNum`, props`pageNum`),\n    */\n];\nexport const goPreviousPage = [\n    actions.previousPage,\n    /*\n    set(props`pageNum`, state`pageNum`, num => num - 1),\n    set(state`pageNum`, props`pageNum`),\n    */\n];\nexport const completeSurvey = [actions.completeSurvey];\nexport const setCurrentLocation = [\n    actions.getCurrentLocation,\n    set(props`locations`, state`surveyData.locations`),\n    // Using the push factory seems to break things...\n    ({props}) => ({locations: props.locations.concat(props.currentLoc)}),\n\tset(props`question`, 'locations'),\n\tset(props`answer`, props`locations`),\n    actions.setAnswer,\n];\n\nexport const loadappdata = [\n    actions.loadAppData,\n    {\n        found: [],\n        notfound: [\n            actions.createSheet,\n            set(props`body`, {}),\n            set(props`body.resultsId`, props`sheet.spreadsheetId`),\n            actions.createAppData,\n        ],\n    },\n    set(state`resultsId`, props`body.resultsId`),\n];\n\n// Run _after_ login\nexport const login = [\n    loadappdata,\n    set(props`resultsId`, state`resultsId`),\n    actions.loadPastResults,\n    actions.deserializeResults,\n    set(state`pastData`, props`results`),\n    set(state`loggedin`, true),\n];\n// Runs _after_ logout\nexport const logout = [\n    set(state`loggedin`, false),\n    set(state`pastData`, []),\n];\n\nexport const createSheet = [actions.createSheet];\nexport const submitResults = [\n    when(state`loggedin`),\n    {\n        true: [],\n        false: login,\n    },\n    push(state`pastData`, state`surveyData`),\n    set(props`results`, state`pastData`),\n    actions.serializeResults,\n    set(props`resultsId`, state`resultsId`),\n    actions.uploadResults,\n];\n","//import { set } from 'cerebral/operators';\n//import { state } from 'cerebral/tags';\n\nimport {DateTime} from 'luxon';\nimport * as Survey from 'survey-react';\n\nimport localstore from '../localstore';\n\nimport * as providers from './providers';\nimport * as sequences from './sequences';\n\n// TODO: Get these from sheets\nconst sensors = [\n    {\n        make: 'Sony',\n        model: 'A6000',\n        type: 'RGB',\n    },\n    {\n        make: 'Parrot',\n        model: 'Sequoia',\n        type: 'Multispectral',\n    },\n];\nconst drones = [\n    {\n        make: 'Test',\n        model: 'testtest',\n        type: 'Fixed wing',\n    },\n];\n\nconst store = localstore(['pageNum', 'surveyData']);\n\nexport default {\n    sequences,\n    state: {\n        resultsId: null,\n        navigationOpen: true,\n        droneQRScannerActive: false,\n        sensorQRScannerActive: false,\n        surveyData: null,\n        pastData: [],\n        pages: [],\n        pageNum: 0,\n        questions: {\n            showNavigationButtons: false,\n            goNextPageAutomatic: true,\n            clearInvisibleValues: 'onHidden',\n            checkErrorsMode: 'onValueChanged',\n            pages: [\n                {\n                    name: 'general',\n                    title: 'General',\n                    elements: [\n                        {\n                            name: 'purpose',\n                            title: 'Purpose',\n                            type: 'dropdown',\n                            choices: [\n                                'UAV',\n                                'Planting',\n                                'Spraying',\n                                'Tilling',\n                                'Harvest'\n                            ],\n                            defaultValue: 'UAV' // TODO: remove default later\n                        },\n                        {\n                            name: 'datetime',\n                            title: 'Date/Time of data',\n                            type: 'text',\n                            inputType: 'datetime-local',\n                            defaultValue: DateTime.local()\n                                .toFormat(\"yyyy-MM-dd'T'HH:mm:ss\"),\n                        },\n                        {\n                            type: 'panel',\n                            elements: [\n                                {\n                                    // TODO: Support selecting region on a map\n                                    name: 'locations',\n                                    title: 'Collection locations',\n                                    type: 'paneldynamic',\n                                    panelCount: 1,\n                                    minPanelCount: 1,\n                                    panelAddText: 'Add Location',\n                                    panelRemoveText: 'Remove Location',\n                                    templateTitle: 'Location #{panelIndex}',\n                                    templateElements: [\n                                        {\n                                            name: 'latitude',\n                                            title: 'Latitude',\n                                            type: 'text',\n                                            isRequired: true,\n                                        },\n                                        {\n                                            name: 'longitude',\n                                            title: 'Longitude',\n                                            type: 'text',\n                                            isRequired: true,\n                                        },\n                                    ],\n                                },\n                                {\n                                    name: 'location-button',\n                                    title: 'Add current location',\n                                    type: 'html',\n                                    cerebralbutton: 'setCurrentLocation',\n                                },\n                            ],\n                        },\n                        {\n                            name: 'notes',\n                            title: 'Notes or comments',\n                            type: 'comment'\n                        },\n                    ]\n                },\n                {\n                    name: 'place',\n                    title: 'Place',\n                    visibleIf: '{purpose} == \"UAV\"',\n                    elements: [\n                        {\n                            name: 'client',\n                            title: 'Grower (or Client)',\n                            type: 'text',\n                            placeHolder: 'Farmer Frank',\n                        },\n                        {\n                            name: 'operation',\n                            title: 'Farm (or Operation)',\n                            type: 'text',\n                            placeHolder: 'Frank Farms',\n                        },\n                        {\n                            name: 'site',\n                            title: 'Field (or Site)',\n                            type: 'text',\n                            placeHolder: 'East Field',\n                        },\n                        {\n                            name: 'crop',\n                            title: 'Crop',\n                            type: 'text',\n                            placeHolder: 'corn',\n                        },\n                        {\n                            name:'prev-crop',\n                            title: 'Previous Crop',\n                            type: 'text',\n                            placeHolder: 'beans',\n                        },\n                        {\n                            name: 'weather',\n                            title: 'Weather',\n                            type: 'panel',\n                            elements: [\n                                {\n                                    name: 'weather-button',\n                                    title: 'Get Current Weather',\n                                    type: 'html',\n                                    // TODO: Implement functionality for button\n                                    cerebralbutton: 'setCurrentWeather',\n                                },\n                                {\n                                    name: 'temperature',\n                                    title: 'Temperature',\n                                    type: 'text',\n                                    //inputType: 'number',\n                                    placeHolder: '60 F'\n                                },\n                                {\n                                    name: 'windspeed',\n                                    title: 'Wind Speed',\n                                    type: 'text',\n                                    //inputType: 'number',\n                                    placeHolder: '10 mph',\n                                },\n                                {\n                                    name: 'winddirection',\n                                    title: 'Wind Direction',\n                                    type: 'text',\n                                    //inputType: 'number',\n                                    placeHolder: '35 deg',\n                                },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    name: 'uav-operator',\n                    title: 'UAV Operator',\n                    visibleIf: '{purpose} == \"UAV\"',\n                    elements: [\n                        {\n                            name: 'remote-pics',\n                            title: 'Remote Pilot in Command (PIC)',\n                            description: 'remote PIC - A person who holds a remote pilot certificate with an sUAS rating and has the final authority and responsibility for the operation and safety of an sUAS operation conducted under part 107.',\n                            type: 'paneldynamic',\n                            panelCount: 1,\n                            minPanelCount: 1,\n                            panelAddText: 'Add Remote PIC',\n                            panelRemoveText: 'Remove Remote PIC',\n                            templateTitle: 'Remote PIC #{panelIndex}',\n                            templateElements: [\n                                {\n                                    name: 'remote-pic-name',\n                                    title: 'Name',\n                                    type: 'text',\n                                    isRequired: true,\n                                    placeHolder: 'Rusty Shackleford'\n                                },\n                                {\n                                    name: 'remote-pic-certificate',\n                                    title: 'Certificate Number or equivalent',\n                                    type: 'text',\n                                    isRequired: true,\n                                    placeHolder: '1234567',\n                                    validators: [\n                                        {\n                                            type: 'regex',\n                                            regex: /^[0-9]{7}$/,\n                                            text: 'Invalid license number'\n                                        }\n                                    ]\n                                },\n\n                            ],\n                        },\n                        {\n                            name: 'observer',\n                            title: 'Visual Observer (VO)',\n                            description: 'VO - A person acting as a flightcrew member who assists the small UA remote PIC and the person manipulating the controls to see and avoid other air traffic or objects aloft or on the ground.',\n                            type: 'paneldynamic',\n                            panelCount: 0,\n                            panelAddText: 'Add VO',\n                            panelRemoveText: 'Remove VO',\n                            templateTitle: 'VO #{panelIndex}',\n                            templateElements: [\n                                {\n                                    name: 'observer-name',\n                                    title: 'Name',\n                                    type: 'text',\n                                    isRequired: true,\n                                    placeHolder: 'John Doe'\n                                },\n                            ],\n                        },\n                    ]\n                },\n                {\n                    name: 'uav-drone',\n                    title: 'Drone Info',\n                    visibleIf: '{purpose} == \"UAV\"',\n                    elements: [\n                        {\n                            // TODO: make required for submission only\n                            name: 'drone-screenshots',\n                            title: 'DroneDeploy Screenshots',\n                            type: 'panel',\n                            elements: [\n                                {\n                                    name: 'drone-flight-planning',\n                                    title: 'Screenshot of Flight Planning',\n                                    type: 'file',\n                                    allowMultiple: false,\n                                },\n                                {\n                                    name: 'drone-advanced-flight-planning',\n                                    title: 'Screenshot of Advanced Flight Planning',\n                                    type: 'file',\n                                    allowMultiple: false,\n                                },\n                            ],\n                        },\n                        {\n                            name: 'drone-qr',\n                            title: 'Scan drone QR code',\n                            type: 'html',\n                            cerebralbutton: 'showDroneQRScanner',\n                        },\n                        {\n                            name: 'uav-drone-type',\n                            title: 'Type',\n                            type: 'dropdown',\n                            isRequired: true,\n                            defaultValue: 'Fixed wing',\n                            hasOther: true,\n                            choices: [\n                                'Fixed wing',\n                                'Multi-rotor',\n                                'Helicopter',\n                            ],\n                        },\n                        {\n                            name: 'uav-drone',\n                            title: 'Drone',\n                            type: 'dropdown',\n                            hideIfChoicesEmpty: true,\n                            choices: drones.map((e, i) => ({\n                                text: e.make + ' ' + e.model,\n                                value: e.make + ' ' + e.model,\n                                //value: i,\n                                visibleIf: `{uav-drone-type} == \"${e.type}\"`,\n                            })),\n                        },\n                        {\n                            name: 'uav-drone-make',\n                            title: 'Make',\n                            type: 'text',\n                            enableIf: '{uav-drone} empty'\n                        },\n                        {\n                            name: 'uav-drone-model',\n                            title: 'Model',\n                            type: 'text',\n                            enableIf: '{uav-drone} empty'\n                        },\n                    ]\n                },\n                {\n                    name: 'uav-sensors',\n                    title: 'Sensors',\n                    visibleIf: '{purpose} == \"UAV\"',\n                    elements: [\n                        {\n                            name: 'sensor-qr',\n                            type: 'html',\n                            cerebralbutton: 'showSensorQRScanner',\n                        },\n                        {\n                            name: 'sensors',\n                            title: 'Sensors',\n                            type: 'paneldynamic',\n                            panelCount: 0,\n                            panelAddText: 'Add Sensor',\n                            panelRemoveText: 'Remove Sensor',\n                            templateTitle: 'Sensor #{panelIndex}',\n                            templateElements: [\n                                {\n                                    name: 'uav-sensor-type',\n                                    valueName: 'type',\n                                    title: 'Type',\n                                    type: 'dropdown',\n                                    isRequired: true,\n                                    hasOther: true,\n                                    choices: [\n                                        'RGB',\n                                        'Multispectral',\n                                        'Hyperspectral',\n                                        'LiDAR',\n                                        'Thermal',\n                                    ],\n                                },\n                                {\n                                    name: 'uav-sensor',\n                                    valueName: 'sensor',\n                                    title: 'Sensor',\n                                    type: 'dropdown',\n                                    hideIfChoicesEmpty: true,\n                                    choices: sensors.map((e, i) => ({\n                                        text: e.make + ' ' + e.model,\n                                        value: e.make + ' ' + e.model,\n                                        //value: i,\n                                        visibleIf: `{panel.type} == \"${e.type}\"`,\n                                    })),\n                                },\n                                {\n                                    name: 'uav-sensor-make',\n                                    valueName: 'sensor.make',\n                                    title: 'Make',\n                                    type: 'text',\n                                    enableIf: '{panel.sensor} empty'\n                                },\n                                {\n                                    name: 'uav-sensor-model',\n                                    valueName: 'model',\n                                    title: 'Model',\n                                    type: 'text',\n                                    enableIf: '{panel.sensor} empty'\n                                },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    name: 'b4ufly',\n                    title: 'B4UFLY Status',\n                    visibleIf: '{purpose} == \"UAV\"',\n                    elements: [\n                        {\n                            name: 'b4ufly-status',\n                            title: 'Status',\n                            type: 'dropdown',\n                            isRequired: true,\n                            choices: [\n                                'proceed with caution',\n                                'flying in controlled airspace (class B/C/D/E)',\n                                'other',\n                            ],\n                        },\n                        {\n                            name: 'b4ufly-extra',\n                            title: '',\n                            type: 'panel',\n                            visibleIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\" or {b4ufly-status} == \"other\"',\n                            elements: [\n                                {\n                                    name: 'b4ufly-airport-operator',\n                                    title: 'Airport Operator Contact',\n                                    type: 'text',\n                                    requiredIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\n                                },\n                                {\n                                    name: 'b4ufly-control-tower',\n                                    title: 'Control Tower Contact',\n                                    type: 'text',\n                                    requiredIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\n                                },\n                                {\n                                    name: 'b4ufly-prior-authorization',\n                                    title: 'Prior Authorization',\n                                    type: 'text',\n                                    requiredIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\n                                },\n                            ],\n                        },\n                        {\n                            // TODO: What the heck even is this?\n                            name: 'b4ufly-options',\n                            title: 'Options',\n                            type: 'checkbox',\n                            isRequired: true,\n                            choices: [\n                                'checked NOTAMS',\n                                'checked flight restrictions',\n                                'checked local restrictions',\n                                'checked upcoming restrictions',\n                                'checked national parks',\n                            ],\n                        },\n                        {\n                            name: 'b4ufly-certificate',\n                            title: 'COW or COA #',\n                            type: 'text',\n                        },\n                    ],\n                },\n                {\n                    name: 'planting',\n                    visibleIf: '!({purpose} == \"UAV\")',\n                    elements: [\n                        {\n                            name: 'nyi',\n                            type: 'html',\n                            html: 'Not yet implemented'\n                        }\n                    ]\n                },\n            ]\n        },\n    },\n    catch: [\n        [Error, ({error}) => console.error(error)],\n    ],\n    providers,\n    modules: {\n        store,\n        //storage,\n    },\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from 'cerebral';\nimport { Container } from '@cerebral/react';\nimport Devtools from 'cerebral/devtools';\n\nimport AppComponent from './App';\nimport main from './module';\n\nconst app = App(main, {\n    devtools: process.env.NODE_ENV === 'production' ?\n        null : Devtools({host: 'localhost:8000', reconnect: true})\n});\n\nReactDOM.render(\n    <Container app={app}>\n\t\t<AppComponent />\n\t</Container>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nif (process.env.NODE_ENV === 'production') {\n\tserviceWorker.register();\n} else {\n\tserviceWorker.unregister();\n}\n"],"sourceRoot":""}