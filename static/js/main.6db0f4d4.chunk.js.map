{"version":3,"sources":["serviceWorker.js","QRDialog.js","surveyModel.js","Questions.js","PagesDrawer.js","App.js","main/modules/localstore/index.js","main/providers.js","main/errors.js","main/actions.js","main/sequences.js","main/index.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","connect","props","react_default","a","createElement","Dialog_default","fullScreen","open","AppBar_default","Toolbar_default","IconButton_default","color","onClick","onClose","aria-label","Close_default","Typography_default","variant","lib_default","style","width","onScan","data","onData","surveyModel","model","Survey","metaData","addProperty","name","Questions","_this","this","_this$props","get","palette","theme","themeColors","ThemeColors","primary","main","dark","text","secondary","divider","background","paper","default","light","applyTheme","questions","_templateObject","pageNum","_templateObject2","undefined","currentPageNo","reaction","_templateObject3","_ref","_templateObject4","_ref2","updatePages","setData","survey","setPages","pages","visiblePages","map","page","hasErrors","title","_this2","_this$props2","Object","objectWithoutProperties","survey_react","assign","onCurrentPageChanged","_templateObject5","setPage","onPageVisibleChanged","bind","onPageAdded","onValueChanged","_ref3","value","setTimeout","completedHtml","ReactDOMServer","renderToString","onAfterRenderQuestion","_ref4","question","htmlElement","cerebralbutton","seq","sequences","_templateObject6","ReactDOM","render","Button_default","Component","_templateObject7","init","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","withTheme","navigationOpen","PagesDrawer_templateObject","showNavigation","PagesDrawer_templateObject2","hideNavigation","PagesDrawer_templateObject3","setSurveyPage","PagesDrawer_templateObject4","PagesDrawer_templateObject5","PagesDrawer_templateObject6","_props$classes","classes","contents","align","className","grow","noWrap","Divider_default","List_default","ListItem_default","key","button","selected","ListItemIcon_default","Warning_default","Done_default","ListItemText_default","secondaryTypographyProps","drawer","Hidden_default","permScreens","implementation","SwipeableDrawer_default","onOpen","drawerPaper","tempScreens","Drawer_default","params","queryString","parse","search","createMuiTheme","typography","useNextVariants","type","gold","addEventListener","e","preventDefault","install","prompt","App","core_styles","Fragment","CssBaseline_default","root","src_PagesDrawer","smUp","xsDown","position","appBar","menuButton","Menu_default","disabled","some","submit","Send_default","data-theme","src_QRDialog","droneQRScannerActive","hideDroneQRScanner","sensorQRScannerActive","hideSensorQRScanner","content","toolbar","src_Questions","isSinglePage","singlePage","onComplete","submitResults","bottomBar","MobileStepper_default","steps","length","activeStep","mobileStepper","nextButton","goNextPage","NavigateNext_default","backButton","goPreviousPage","NavigateBefore_default","App_templateObject","App_templateObject2","App_templateObject3","App_templateObject4","App_templateObject5","App_templateObject6","App_templateObject7","App_templateObject8","App_templateObject9","App_templateObject10","App_templateObject11","App_templateObject12","showDroneQRScanner","_templateObject13","showSensorQRScanner","_templateObject14","_templateObject15","_templateObject16","_templateObject17","login","_templateObject18","logout","_templateObject19","google","_templateObject20","createSheet","_templateObject21","_templateObject22","withStyles","display","alignItems","justifyContent","textAlign","flexGrow","alignSelf","maxWidth","defineProperty","top","bottom","marginLeft","breakpoints","up","concat","mixins","marginRight","flexShrink","client","gapi","GetLocationError","_CerebralError","message","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","inherits","CerebralError","GAPIError","_CerebralError2","err","result","geolocation","getCurrentLoc","_getCurrentLoc","asyncToGenerator","regenerator_default","mark","_callee","msg","wrap","_context","prev","next","Promise","resolve","reject","getCurrentPosition","pos","coords","abrupt","sent","t0","t1","code","stop","apply","arguments","setAnswer","setValue","num","nextPage","previousPage","prevPage","completeLastPage","gapiClient","_init","_callee2","_context2","googleapi","tap","load","callback","onerror","timeout","ontimeout","discoveryDocs","auth","auth2","getAuthInstance","listener","signedIn","context","isSignedIn","listen","_x","_get","_callee3","_context3","_ref5","grants","scope","reduce","b","currentUser","grant","googleappdata","getData","_getData","_callee4","_ref6","drive","_ref7","_context4","files","list","spaces","q","fields","appProperties","initData","_initData","_callee5","_ref8","_ref8$body","body","_ref9","_ref10","_context5","create","resource","mimeType","parents","_x2","googlesheets","_createSheet","_callee6","_ref11","sheets","_ref12","_context6","spreadsheets","getSheet","_getSheet","_callee7","id","_ref13","_ref14","sheet","_context7","values","spreadsheetId","range","XLSX","utils","aoa_to_sheet","sheet_to_json","_x3","writeSheet","_writeSheet","_callee8","_ref15","_ref16","_context8","json_to_sheet","header","update","valueInputOption","includeValuesInResponse","majorDimension","_x4","_x5","addRow","_addRow","_callee9","cols","row","_ref17","_context9","append","insertDataOption","_x6","_x7","_x8","answer","main_actions_createSheet","results","serialized","keys","forEach","JSON","stringify","deserialized","startsWith","substring","resultsId","path","found","notfound","paths","set","sequences_templateObject","sequences_templateObject2","sequences_templateObject3","sequences_templateObject4","_initGapi","sequences_templateObject5","sequences_templateObject6","sequences_templateObject7","sequences_templateObject8","sequences_templateObject9","sequences_templateObject10","sequences_templateObject11","setSurveyData","sequences_templateObject12","sequences_templateObject13","actions","sequences_templateObject14","sequences_templateObject15","sequences_templateObject16","sequences_templateObject17","completeSurvey","done","setCurrentLocation","currentLoc","latitude","longitude","sequences_templateObject18","sequences_templateObject19","locations","sequences_templateObject20","sequences_templateObject21","sequences_templateObject22","loadappdata","_x9","_loadAppData","_templateObject23","_templateObject24","_templateObject25","_createAppData","_templateObject26","_templateObject27","_templateObject28","_templateObject29","_loadPastResults","_deserializeResults","_templateObject30","_templateObject31","_templateObject32","_templateObject33","_templateObject34","when","_templateObject35","true","false","push","_templateObject36","_templateObject37","_templateObject38","_templateObject39","_serializeResults","_templateObject40","_templateObject41","_uploadResults","store","providers","localstore","ls","val","clear","initialized","persistState","moduleState","localstore_templateObject","success","parallel","localstore_templateObject2","merge","localstore_templateObject3","localstore_templateObject4","localstore_templateObject5","localstore_templateObject6","localstore_templateObject7","reactions","Reaction","localstore_templateObject8","modulePath","join","localstore_templateObject9","sequence","obj","surveyData","pastData","showNavigationButtons","goNextPageAutomatic","clearInvisibleValues","checkErrorsMode","elements","choices","defaultValue","inputType","DateTime","local","toFormat","panelCount","minPanelCount","panelAddText","panelRemoveText","templateTitle","templateElements","isRequired","visibleIf","placeHolder","description","validators","regex","allowMultiple","hasOther","hideIfChoicesEmpty","make","i","enableIf","valueName","requiredIf","html","Error","modules","app","devtools","on","getSequence","_cerebral_react","src_App_0","document","getElementById","URL","process","href","origin","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6db0f4d4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {connect} from '@cerebral/react';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport QrReader from 'react-qr-reader';\r\n\r\nfunction QRDialog(props) {\r\n    return (\r\n        <Dialog\r\n            fullScreen\r\n            open={props.open}\r\n        >\r\n          <AppBar>\r\n            <Toolbar>\r\n              <IconButton color='inherit' onClick={props.onClose} aria-label='Close'>\r\n                <CloseIcon />\r\n              </IconButton>\r\n              <Typography variant='h6' color='inherit'>\r\n                Scan QR code\r\n              </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n            <QrReader\r\n                style={{width: '100%'}}\r\n                onScan={data => {\r\n                    if (!data) {\r\n                        return;\r\n                    }\r\n\r\n\t\t\t\t\tprops.onData(data);\r\n                    props.onClose();\r\n                }}\r\n            />\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default connect({\r\n}, QRDialog);\r\n","// TODO: This is probably the wrong way to do stuff, but I don't know cerebral\r\n// Want a singleton of survey model\r\nexport default {\r\n    model: null\r\n};\r\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactDOMServer from 'react-dom/server';\n\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport Button from '@material-ui/core/Button';\nimport {withTheme} from '@material-ui/core/styles';\n\nimport * as Survey from 'survey-react';\nimport 'survey-react/survey.css';\n\nimport surveyModel from './surveyModel';\n\nSurvey.JsonObject.metaData.addProperty('question', {\n    name: 'cerebralbutton',\n});\n\nclass Questions extends Component {\n    componentWillMount() {\n        const {get, theme} = this.props;\n\n        // Apply MUI theme to survey\n        const {palette} = theme;\n        let themeColors = Survey.StylesManager.ThemeColors['default'];\n        themeColors[\"$main-color\"] = palette.primary.main;\n        themeColors[\"$main-hover-color\"] = palette.primary.dark;\n        themeColors[\"$text-color\"] = palette.text.primary;\n        themeColors[\"$header-color\"] = palette.secondary.main;\n        themeColors[\"$border-color\"] = palette.divider;\n        themeColors[\"$header-background-color\"] = palette.secondary.main;\n        themeColors[\"$body-background-color\"] = palette.background.paper;\n        themeColors[\"$body-container-background-color\"] = palette.background.paper;\n        themeColors[\"$inputs-background-color\"] = palette.background.default;\n        themeColors[\"$error-color\"] = palette.error.main;\n        themeColors[\"$error-background-color\"] = palette.error.light;\n        Survey.StylesManager.applyTheme('default');\n\n        this.model = new Survey.Model(this.props.questions);\n        surveyModel.model = this.model;\n\n        // TODO: I'm sure this is isn't right with cerebral..\n        let data = get(state`surveyData`);\n        if (data) {\n            this.model.data = data;\n        }\n        let pageNum = get(state`pageNum`);\n        if (pageNum !== undefined) {\n            this.model.currentPageNo = pageNum;\n        }\n\n        this.props.reaction('changePage',\n            {\n                pageNum: state`pageNum`,\n            },\n            ({pageNum}) => this.model.currentPageNo = pageNum\n        );\n        this.props.reaction('changeData',\n            {\n                data: state`surveyData`,\n            },\n            ({data}) => this.model.data = data\n        );\n\n        this.updatePages(this.model);\n        this.props.setData({data: this.model.data});\n    }\n\n    updatePages(survey) {\n        this.props.setPages({\n            pages: survey.visiblePages.map((page) => ({\n                error: page.hasErrors(false, false),\n                name: page.name,\n                title: page.title,\n            }))\n        });\n    }\n\n    render() {\n        let {get, ...props} = this.props;\n        return (\n            <Survey.Survey\n                {...props}\n                model={this.model}\n                onCurrentPageChanged={(survey) => {\n                    if (get(state`pageNum`) !== survey.currentPageNo) {\n                        props.setPage({pageNum: survey.currentPageNo});\n                    }\n                }}\n                onPageVisibleChanged={this.updatePages.bind(this)}\n                onPageAdded={this.updatePages.bind(this)}\n                onValueChanged={(survey, {name, value}) => {\n                    props.setData({data: survey.data});\n                    // No idea why, but cerebral freaks out if I call this\n                    // without the setTimeout...\n                    setTimeout(() => this.updatePages(survey));\n                }}\n                completedHtml={\n                    ReactDOMServer.renderToString(props.completedHtml)\n                }\n                onAfterRenderQuestion={\n                    (survey, {question, htmlElement}) => {\n                        if (!question.cerebralbutton) {\n                            return;\n                        }\n\n                        let seq = get(sequences`${question.cerebralbutton}`);\n                        ReactDOM.render(\n                            <Button onClick={() => seq()}>\n                                {question.title}\n                            </Button>\n                        , htmlElement);\n                    }\n                }\n            />\n        );\n    }\n}\n\nexport default connect(\n    {\n        questions: state`questions`,\n        init: sequences`initSurvey`,\n        data: state`surveyData`,\n        setData: sequences`setSurveyData`,\n        setPage: sequences`setSurveyPage`,\n        setPages: sequences`setPages`,\n    },\n    withTheme()(Questions)\n);\n","import React from 'react';\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport WarningIcon from '@material-ui/icons/Warning';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Drawer from '@material-ui/core/Drawer';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nfunction PagesDrawer(props) {\n    const {classes={}} = props;\n\n    const contents = (\n        <div>\n            <Toolbar>\n                <Typography\n                    variant='h6'\n                    color='primary'\n                    align='center'\n                    className={classes.grow}\n                    noWrap\n                >\n                    Pages\n                </Typography>\n            </Toolbar>\n            <Divider />\n            <List>\n                {props.pages.map(({name, title, error}, pageNum) => (\n                    <ListItem\n                        key={name}\n                        button\n                        selected={pageNum === props.pageNum}\n                        className={error ? 'page-err' : 'page-complete'}\n                        onClick={()=>props.setSurveyPage({pageNum})}>\n                        <ListItemIcon>\n                            {error ? <WarningIcon color='error'/> : <DoneIcon />}\n                        </ListItemIcon>\n                        <ListItemText\n                            primary={title}\n                            secondary={error ? 'Incomplete' : 'Complete'}\n                            secondaryTypographyProps={{\n                                color: error ? 'error' : 'textSecondary',\n                            }}\n                        />\n                    </ListItem>\n                ))}\n            </List>\n        </div>\n    );\n\n    return (\n        <nav className={classes.drawer}>\n            <Hidden {...props.permScreens} implementation='js'>\n                <SwipeableDrawer\n                    open={props.navigationOpen}\n                    onOpen={()=>props.showNavigation()}\n                    onClose={()=>props.hideNavigation()}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    {contents}\n                </SwipeableDrawer>\n            </Hidden>\n            <Hidden {...props.tempScreens} implementation='js'>\n                <Drawer\n                    variant='permanent'\n                    open\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    {contents}\n                </Drawer>\n            </Hidden>\n        </nav>\n    );\n}\n\nexport default connect({\n    navigationOpen: state`navigationOpen`,\n    showNavigation: sequences`showNavigation`,\n    hideNavigation: sequences`hideNavigation`,\n    setSurveyPage: sequences`setSurveyPage`,\n    pages: state`pages`,\n    pageNum: state`pageNum`,\n}, PagesDrawer);\n","import React, {Component} from 'react';\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport {withStyles} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n//import Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport SendIcon from '@material-ui/icons/Send';\n\nimport queryString from 'query-string';\n\nimport './App.css';\nimport QRDialog from './QRDialog';\nimport Questions from './Questions';\nimport PagesDrawer from './PagesDrawer';\n\nimport {createMuiTheme, MuiThemeProvider} from '@material-ui/core/styles';\nimport gold from '@material-ui/core/colors/amber';\n\n// Parse query string\nconst params = queryString.parse(window.location.search);\n\n// All the following keys are optional.\n// We try our best to provide a great default value.\nconst theme = createMuiTheme({\n    typography: {\n        useNextVariants: true,\n    },\n    palette: {\n        type: params.theme || 'dark',\n        primary: gold,\n    },\n});\n\nconst drawerWidth = 240;\nconst styles = (theme) => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    content: {\n        textAlign: 'center',\n        flexGrow: 1,\n        alignSelf: 'center',\n        maxWidth: 800,\n    },\n    appBar: {\n        top: 0,\n        bottom: 'auto',\n        marginLeft: drawerWidth,\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n        },\n    },\n    toolbar: theme.mixins.toolbar,\n    bottomBar: {\n        bottom: 0,\n        top: 'auto',\n        marginLeft: drawerWidth,\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n        },\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n        [theme.breakpoints.up('sm')]: {\n          display: 'none',\n        },\n    },\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n});\n\nwindow.addEventListener('beforeinstallprompt', (e) => {\n    // Prevent Chrome 67 and earlier from automatically showing the prompt\n    e.preventDefault();\n    // Stash the event so it can be triggered later.\n    //deferredPrompt = e;\n    if (params.install !== undefined) {\n        e.prompt(); // TODO: Don't show prompt immediately?\n    }\n});\n\nclass App extends Component {\n    componentWillMount() {\n        this.props.init();\n    }\n\n    render() {\n        let {props} = this;\n        const {classes} = props;\n\n        return (\n            <MuiThemeProvider theme={theme}>\n            <React.Fragment>\n            <CssBaseline />\n            <div className={classes.root}>\n                <PagesDrawer\n                    classes={classes}\n                    // Screens sizes to show permanent drawer\n                    permScreens={{smUp: true}}\n                    // Screens sizes to show temporary drawer\n                    tempScreens={{xsDown: true}}\n                />\n                <AppBar position='fixed' className={classes.appBar}>\n                    <Toolbar>\n                        <IconButton\n                            className={classes.menuButton}\n                            color='inherit'\n                            onClick={() => props.showNavigation()}\n                            aria-label='Pages'>\n                            <MenuIcon\n                            />\n                        </IconButton>\n                        <Button\n                            color='inherit'\n                            disabled={props.pages.some(page => page.error)}\n                            onClick={() => props.submit()}>\n                            Submit\n                            <SendIcon />\n                        </Button>\n                        <div className={classes.grow} />\n                        <div className=\"g-signin2\" data-theme='dark' />\n                    </Toolbar>\n                </AppBar>\n                <QRDialog\n                    open={props.droneQRScannerActive}\n                    onClose={props.hideDroneQRScanner}\n                />\n                <QRDialog\n                    open={props.sensorQRScannerActive}\n                    onClose={props.hideSensorQRScanner}\n                />\n                <main className={classes.content}>\n                    <div className={classes.toolbar} />\n                    <Questions\n                        isSinglePage={params.singlePage !== undefined}\n                        completedHtml={\n                            (<div> woo done!</div>)\n                        }\n                        onComplete={({data}) => props.submitResults()}\n                    />\n                    <div className={classes.toolbar} />\n                </main>\n                <AppBar position='fixed' className={classes.bottomBar}>\n                    <MobileStepper\n                        steps={props.pages.length}\n                        position='static'\n                        activeStep={props.pageNum}\n                        className={classes.mobileStepper}\n                        nextButton={\n                            <Button\n                                color='primary'\n                                disabled={props.pageNum === props.pages.length - 1}\n                                onClick={() => props.goNextPage()}>\n                                Next\n                                <NavigateNextIcon />\n                            </Button>\n                        }\n                        backButton={\n                            <Button\n                                color='primary'\n                                disabled={props.pageNum === 0}\n                                onClick={() => props.goPreviousPage()}>\n                                <NavigateBeforeIcon />\n                                Previous\n                            </Button>\n                        }\n                    />\n                </AppBar>\n            </div>\n            </React.Fragment>\n            </MuiThemeProvider>\n        );\n    }\n}\n\nexport default connect({\n    navigationOpen: state`navigationOpen`,\n    showNavigation: sequences`showNavigation`,\n    hideNavigation: sequences`hideNavigation`,\n    setSurveyPage: sequences`setSurveyPage`,\n    pages: state`pages`,\n    pageNum: state`pageNum`,\n    goNextPage: sequences`goNextPage`,\n    goPreviousPage: sequences`goPreviousPage`,\n    submit: sequences`completeSurvey`,\n    questions: state`questions`,\n    droneQRScannerActive: state`droneQRScannerActive`,\n    sensorQRScannerActive: state`sensorQRScannerActive`,\n    showDroneQRScanner: sequences`showDroneQRScanner`,\n    showSensorQRScanner: sequences`showSensorQRScanner`,\n    hideDroneQRScanner: sequences`hideDroneQRScanner`,\n    hideSensorQRScanner: sequences`hideSensorQRScanner`,\n    init: sequences`init`,\n    login: sequences`login`,\n    logout: sequences`logout`,\n    google: state`google`,\n    createSheet: sequences`createSheet`,\n    submitResults: sequences`submitResults`,\n}, withStyles(styles)(App));\n","import {Reaction} from 'cerebral';\nimport {state, moduleState, props, sequences} from 'cerebral/tags'\nimport {set, merge, when, parallel} from 'cerebral/factories';\n\nimport ls from 'local-storage';\n\nexport default (paths) => ({\n    providers: {\n        localstore: {\n            get(key) {\n                return ls.get(key);\n            },\n\n            set(key, val) {\n                return ls.set(key, val);\n            },\n\n            clear() {\n                return ls.clear();\n            },\n        },\n    },\n\n    state:{\n        initialized: false,\n    },\n\n    sequences: {\n        persistState: [\n            when(moduleState`initialized`), // Wait for init?\n            {\n                true: ({localstore, props}) => {\n                    let {key, val} = props;\n                    return {success: localstore.set(key, val)};\n                },\n                false: [],\n            },\n        ],\n        init: [\n            // Load each path from store and set it in state\n            parallel('get paths', paths.map(path => [\n                ({localstore}) => ({val: localstore.get(path)}),\n                when(props`val`, val => val && typeof val === 'object'),\n                {\n                    true: [merge(state`${path}`, props`val`)],\n                    false: [set(state`${path}`, props`val`)],\n                }\n            ])),\n            set(moduleState`initialized`, true),\n        ],\n    },\n\n    // Generate a reaction for each path in the store\n    reactions: paths.map(path => {\n        let reaction = Reaction(\n            {\n                val: state`${path}`,\n            },\n            // TODO: Why didn't using moduleSequences work??\n            //({val, get}) => get(moduleSequences`persistState`)({key: path, val})\n            ({val, get}) => {\n                const name = reaction.modulePath.join('.');\n                const sequence = get(sequences`${name}.persistState`);\n                return sequence({key: path, val});\n            }\n        );\n        return {[path]: reaction};\n    }).reduce((obj, reaction) => Object.assign(obj, reaction), {}),\n});\n","import Promise from 'bluebird';\r\n//import {state} from 'cerebral';\r\nimport googleapi from 'google-client-api';\r\nimport XLSX from 'xlsx';\r\n\r\nimport {GetLocationError, GAPIError} from './errors';\r\nimport model from '../surveyModel';\r\n\r\nexport const geolocation = {\r\n    async getCurrentLoc() {\r\n        try {\r\n            return await new Promise((resolve, reject) =>\r\n                    navigator.geolocation.getCurrentPosition(resolve, reject))\r\n                .then(pos => pos.coords);\r\n        } catch (err) {\r\n            let msg;\r\n\r\n            switch (err.code) {\r\n                case 1: // PERMISSION_DENIED\r\n                    msg = 'Permission denied';\r\n                    break;\r\n                case 2: // POSITION_UNAVAILABLE\r\n                    msg = 'Position unavailable';\r\n                    break;\r\n                case 3: // TIMEOUT\r\n                    msg = 'Timeout obtaining position';\r\n                    break;\r\n                default:\r\n                    msg = 'Unknown error';\r\n            }\r\n\r\n            throw new GetLocationError(msg);\r\n        }\r\n    }\r\n};\r\n\r\nexport const survey = {\r\n    setAnswer(name, value) {\r\n        model.model.setValue(name, value);\r\n    },\r\n\r\n    setPage(num) {\r\n        model.model.currentPageNo = num;\r\n    },\r\n\r\n    nextPage() {\r\n        return model.model.nextPage();\r\n    },\r\n\r\n    previousPage() {\r\n        return model.model.prevPage();\r\n    },\r\n\r\n    setData(data) {\r\n        model.model.data = data;\r\n    },\r\n\r\n    submit() {\r\n        return model.model.completeLastPage();\r\n    },\r\n};\r\n\r\nlet client;\r\nlet gapi;\r\nexport const gapiClient = {\r\n    // Do one-time gapi setup not effected by login/logout\r\n    async init({login, logout}) {\r\n        gapi = Promise.resolve(googleapi())\r\n            // Load client library\r\n            .tap(({load}) => new Promise((resolve, reject) => load('client', {\r\n                callback: resolve,\r\n                onerror: reject,\r\n                timeout: 10000,\r\n                ontimeout: reject,\r\n            })))\r\n            // Initialize client (load sheets and drive APIs)\r\n            .tap(({client}) => client.init({\r\n                discoveryDocs: [\r\n                    'https://www.googleapis.com/discovery/v1/apis/drive/v3/rest',\r\n                    'https://sheets.googleapis.com/$discovery/rest?version=v4'\r\n                ],\r\n            }))\r\n            // Listen for login/logout\r\n            .tap(({auth2}) => {\r\n                let auth = auth2.getAuthInstance();\r\n                let listener = signedIn => {\r\n                    if (!signedIn) {\r\n                        client = undefined;\r\n                        logout && this.context.get(logout)();\r\n                    } else {\r\n                        login && this.context.get(login)();\r\n                    }\r\n                };\r\n\r\n                auth.isSignedIn.listen(listener);\r\n                listener(auth.isSignedIn.get());\r\n            });\r\n        await gapi;\r\n    },\r\n\r\n    async get() {\r\n        if (client) {\r\n            return client;\r\n        }\r\n\r\n        client = await gapi\r\n            // Request needed scopes from user\r\n            .tap(({auth2}) => {\r\n                const grants = {\r\n                    scope: [\r\n                        'https://www.googleapis.com/auth/drive.file',\r\n                        'https://www.googleapis.com/auth/drive.appdata',\r\n                    ].reduce((a, b) => `${a} ${b}`),\r\n                };\r\n                let auth = auth2.getAuthInstance();\r\n\r\n                return auth.currentUser.get().grant(grants);\r\n            })\r\n            .get('client');\r\n\r\n        return client;\r\n    }\r\n}\r\nexport const googleappdata = {\r\n    async getData() {\r\n        let {drive} = await this.context.gapiClient.get();\r\n\r\n        let result;\r\n        try {\r\n            ({result} = await drive.files.list({\r\n                spaces: 'appDataFolder',\r\n                q: \"name='config.json'\",\r\n                fields: 'files(id, appProperties)',\r\n            }));\r\n        } catch (err) {\r\n            throw new GAPIError(err);\r\n        }\r\n\r\n        return result.files[0].appProperties;\r\n    },\r\n\r\n    async initData({body = {}}) {\r\n        let {drive} = await this.context.gapiClient.get();\r\n\r\n        try {\r\n            let {result} = await drive.files.create({\r\n                resource: {\r\n                    name: 'config.json',\r\n                    mimeType: 'application/json',\r\n                    parents: ['appDataFolder'],\r\n                    appProperties: body,\r\n                },\r\n            });\r\n            return result;\r\n        } catch (err) {\r\n            throw new GAPIError(err);\r\n        }\r\n    },\r\n}\r\nexport const googlesheets = {\r\n    async createSheet() {\r\n        let {sheets} = await this.context.gapiClient.get();\r\n\r\n        try {\r\n            let {result} = await sheets.spreadsheets.create({}, {});\r\n            return result;\r\n        } catch (err) {\r\n            throw new GAPIError(err);\r\n        }\r\n    },\r\n\r\n    async getSheet(id) {\r\n        let {sheets} = await this.context.gapiClient.get();\r\n\r\n        let result;\r\n        try {\r\n            ({result} = await sheets.spreadsheets.values.get({\r\n                spreadsheetId: id,\r\n                range: ['Sheet1'],\r\n            }));\r\n        } catch (err) {\r\n            throw new GAPIError(err);\r\n        }\r\n\r\n        if (!result.values) {\r\n            return [];\r\n        }\r\n\r\n        let sheet = XLSX.utils.aoa_to_sheet(result.values);\r\n        return XLSX.utils.sheet_to_json(sheet);\r\n    },\r\n\r\n    async writeSheet(id, data) {\r\n        let {sheets} = await this.context.gapiClient.get();\r\n\r\n        // Format data with spreadsheet lib\r\n        let sheet = XLSX.utils.json_to_sheet(data);\r\n        let values = XLSX.utils.sheet_to_json(sheet, {header: 1});\r\n\r\n        try {\r\n            let {result} = await sheets.spreadsheets.values.update({\r\n                spreadsheetId: id,\r\n                range: sheet['!ref'],\r\n                valueInputOption: 'USER_ENTERED', // 'RAW'\r\n                includeValuesInResponse: false,\r\n            }, {\r\n                majorDimension: 'ROWS',\r\n                values,\r\n            });\r\n            return result;\r\n        } catch (err) {\r\n            throw new GAPIError(err);\r\n        }\r\n    },\r\n\r\n    async addRow(id, cols, row) {\r\n        let {sheets} = await this.context.gapiClient.get();\r\n\r\n        return sheets.spreadsheets.values.append({\r\n            spreadsheetId: id,\r\n            valueInputOption: 'USER_ENTERED', // 'RAW'\r\n            insertDataOption: 'INSERT_ROWS', // 'OVERWRITE'\r\n            includeValuesInResponse: false,\r\n        }, {\r\n            majorDimension: 'ROWS',\r\n            values: [row],\r\n        });\r\n    },\r\n};\r\n","import {CerebralError} from 'cerebral';\r\n\r\nexport class GetLocationError extends CerebralError {\r\n    constructor(message) {\r\n        super(message);\r\n        this.name = 'GetLocationError';\r\n    }\r\n}\r\n\r\nexport class GAPIError extends CerebralError {\r\n    constructor(err) {\r\n        // gapi doesn't always throw the same sorts of things..\r\n        let error = err;\r\n        if (err.result && error.result.error) {\r\n            error = err.result.error;\r\n        }\r\n\r\n        super(error.message);\r\n        this.name = 'GAPIError';\r\n        this.result = error;\r\n    }\r\n}\r\n","//import {state} from 'cerebral';\r\n\r\nexport function getCurrentLocation({geolocation}) {\r\n    return geolocation.getCurrentLoc()\r\n        .then(({latitude, longitude}) => ({currentLoc: {latitude, longitude}}));\r\n}\r\n\r\nexport function setAnswer({survey, props}) {\r\n    return survey.setAnswer(props.question, props.answer);\r\n}\r\nexport function setSurveyPage({survey, props}) {\r\n    return survey.setPage(props.pageNum);\r\n}\r\nexport function setSurveyData({survey, props}) {\r\n    return survey.setData(props.data);\r\n}\r\nexport function nextPage({survey}) {\r\n    return {error: survey.nextPage()};\r\n}\r\nexport function previousPage({survey}) {\r\n    return {error: survey.previousPage()};\r\n}\r\nexport function completeSurvey({survey, props}) {\r\n    return {done: survey.submit()};\r\n}\r\n\r\nexport async function initGapi({gapiClient, props}) {\r\n\treturn gapiClient.init(props);\r\n}\r\nexport async function createSheet({googlesheets}) {\r\n\tlet sheet = await googlesheets.createSheet();\r\n\treturn {sheet};\r\n}\r\nexport async function initSheet({googlesheets, props}) {\r\n\tlet {result} = await googlesheets.createSheet();\r\n\tawait googlesheets.addRow(result.spreadsheetId, props.headerRow);\r\n}\r\nexport async function serializeResults({props}) {\r\n\tlet {results} = props;\r\n\r\n\t// TODO: Better way to handle arrays and such in a spreadsheet?\r\n\tlet serialized = results.map(result => {\r\n\t\tlet serialized = {};\r\n\t\tObject.keys(result).forEach(key => {\r\n\t\t\tif (result[key] && typeof result[key] === 'object') {\r\n\t\t\t\tserialized['$$' + key] = JSON.stringify(result[key]);\r\n\t\t\t} else {\r\n\t\t\t\tserialized[key] = result[key];\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn serialized;\r\n\t});\r\n\r\n\treturn {results: serialized};\r\n}\r\nexport async function deserializeResults({props}) {\r\n\tlet {results} = props;\r\n\r\n\tlet deserialized = results.map(result => {\r\n\t\tlet deserialized = {};\r\n\t\tObject.keys(result).forEach(key => {\r\n\t\t\tif (key.startsWith('$$')) {\r\n\t\t\t\tdeserialized[key.substring(2)] = JSON.parse(result[key]);\r\n\t\t\t} else {\r\n\t\t\t\tdeserialized[key] = result[key];\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn deserialized;\r\n\t});\r\n\r\n\treturn {results: deserialized};\r\n}\r\nexport async function loadPastResults({googlesheets, props}) {\r\n\tlet {resultsId} = props;\r\n\r\n\tlet results = (await googlesheets.getSheet(resultsId)) || [];\r\n\r\n\treturn {results};\r\n}\r\nexport async function uploadResults({googlesheets, props}) {\r\n\tlet {results, resultsId} = props;\r\n\r\n\treturn googlesheets.writeSheet(resultsId, results);\r\n}\r\n\r\nexport async function createAppData({googleappdata, props}) {\r\n    let result = await googleappdata.initData(props);\r\n\r\n    return {result};\r\n}\r\nexport async function loadAppData({googleappdata, path}) {\r\n    let data = await googleappdata.getData();\r\n\r\n    if (data) {\r\n        return path.found({body: data});\r\n    } else {\r\n        return path.notfound();\r\n    }\r\n}\r\n","import {set, push, when} from 'cerebral/factories';\nimport {state, sequences, props} from 'cerebral/tags';\nimport * as actions from './actions';\n\nexport const init = [\n    set(props`login`, sequences`login`),\n    set(props`logout`, sequences`logout`),\n    actions.initGapi,\n    ({get}) => get(sequences`store.init`)(),\n];\n\nexport const showDroneQRScanner = [set(state`droneQRScannerActive`, true)];\nexport const hideDroneQRScanner = [set(state`droneQRScannerActive`, false)];\nexport const showSensorQRScanner = [set(state`sensorQRScannerActive`, true)];\nexport const hideSensorQRScanner = [set(state`sensorQRScannerActive`, false)];\nexport const showNavigation = [set(state`navigationOpen`, true)];\nexport const hideNavigation = [set(state`navigationOpen`, false)];\n\nexport const setSurveyData = [set(state`surveyData`, props`data`)];\nexport const setAnswer = [actions.setAnswer];\nexport const setSurveyPage = [\n    set(state`pageNum`, props`pageNum`),\n];\nexport const setPages = [set(state`pages`, props`pages`)];\nexport const goNextPage = [\n    actions.nextPage,\n    /*\n    set(props`pageNum`, state`pageNum`, num => num + 1),\n    set(state`pageNum`, props`pageNum`),\n    */\n];\nexport const goPreviousPage = [\n    actions.previousPage,\n    /*\n    set(props`pageNum`, state`pageNum`, num => num - 1),\n    set(state`pageNum`, props`pageNum`),\n    */\n];\nexport const completeSurvey = [actions.completeSurvey];\nexport const setCurrentLocation = [\n    actions.getCurrentLocation,\n    set(props`locations`, state`surveyData.locations`),\n    // Using the push factory seems to break things...\n    ({props}) => ({locations: props.locations.concat(props.currentLoc)}),\n\tset(props`question`, 'locations'),\n\tset(props`answer`, props`locations`),\n    actions.setAnswer,\n];\n\nexport const loadappdata = [\n    actions.loadAppData,\n    {\n        found: [],\n        notfound: [\n            actions.createSheet,\n            set(props`body`, {}),\n            set(props`body.resultsId`, props`sheet.spreadsheetId`),\n            actions.createAppData,\n        ],\n    },\n    set(state`resultsId`, props`body.resultsId`),\n];\n\n// Run _after_ login\nexport const login = [\n    loadappdata,\n    set(props`resultsId`, state`resultsId`),\n    actions.loadPastResults,\n    actions.deserializeResults,\n    set(state`pastData`, props`results`),\n    set(state`loggedin`, true),\n];\n// Runs _after_ logout\nexport const logout = [\n    set(state`loggedin`, false),\n    set(state`pastData`, []),\n];\n\nexport const createSheet = [actions.createSheet];\nexport const submitResults = [\n    when(state`loggedin`),\n    {\n        true: [],\n        false: login,\n    },\n    push(state`pastData`, state`surveyData`),\n    set(props`results`, state`pastData`),\n    actions.serializeResults,\n    set(props`resultsId`, state`resultsId`),\n    actions.uploadResults,\n];\n","//import { set } from 'cerebral/operators';\n//import { state } from 'cerebral/tags';\n\nimport {DateTime} from 'luxon';\n\nimport localstore from './modules/localstore';\n\nimport * as providers from './providers';\nimport * as sequences from './sequences';\n\n// TODO: Get these from sheets\nconst sensors = [\n    {\n        make: 'Sony',\n        model: 'A6000',\n        type: 'RGB',\n    },\n    {\n        make: 'Parrot',\n        model: 'Sequoia',\n        type: 'Multispectral',\n    },\n];\nconst drones = [\n    {\n        make: 'Test',\n        model: 'testtest',\n        type: 'Fixed wing',\n    },\n];\n\n// Parts of state to keep in localstorage\nconst store = localstore(['pageNum', 'surveyData']);\n\nexport default {\n    sequences,\n    state: {\n        resultsId: null,\n        navigationOpen: true,\n        droneQRScannerActive: false,\n        sensorQRScannerActive: false,\n        surveyData: null,\n        pastData: [],\n        pages: [],\n        pageNum: 0,\n        questions: {\n            showNavigationButtons: false,\n            goNextPageAutomatic: true,\n            clearInvisibleValues: 'onHidden',\n            checkErrorsMode: 'onValueChanged',\n            pages: [\n                {\n                    name: 'general',\n                    title: 'General',\n                    elements: [\n                        {\n                            name: 'purpose',\n                            title: 'Purpose',\n                            type: 'dropdown',\n                            choices: [\n                                'UAV',\n                                'Planting',\n                                'Spraying',\n                                'Tilling',\n                                'Harvest'\n                            ],\n                            defaultValue: 'UAV' // TODO: remove default later\n                        },\n                        {\n                            name: 'datetime',\n                            title: 'Date/Time of data',\n                            type: 'text',\n                            inputType: 'datetime-local',\n                            defaultValue: DateTime.local()\n                                .toFormat(\"yyyy-MM-dd'T'HH:mm:ss\"),\n                        },\n                        {\n                            type: 'panel',\n                            elements: [\n                                {\n                                    // TODO: Support selecting region on a map\n                                    name: 'locations',\n                                    title: 'Collection locations',\n                                    type: 'paneldynamic',\n                                    panelCount: 1,\n                                    minPanelCount: 1,\n                                    panelAddText: 'Add Location',\n                                    panelRemoveText: 'Remove Location',\n                                    templateTitle: 'Location #{panelIndex}',\n                                    templateElements: [\n                                        {\n                                            name: 'latitude',\n                                            title: 'Latitude',\n                                            type: 'text',\n                                            isRequired: true,\n                                        },\n                                        {\n                                            name: 'longitude',\n                                            title: 'Longitude',\n                                            type: 'text',\n                                            isRequired: true,\n                                        },\n                                    ],\n                                },\n                                {\n                                    name: 'location-button',\n                                    title: 'Add current location',\n                                    type: 'html',\n                                    cerebralbutton: 'setCurrentLocation',\n                                },\n                            ],\n                        },\n                        {\n                            name: 'notes',\n                            title: 'Notes or comments',\n                            type: 'comment'\n                        },\n                    ]\n                },\n                {\n                    name: 'place',\n                    title: 'Place',\n                    visibleIf: '{purpose} == \"UAV\"',\n                    elements: [\n                        {\n                            name: 'client',\n                            title: 'Grower (or Client)',\n                            type: 'text',\n                            placeHolder: 'Farmer Frank',\n                        },\n                        {\n                            name: 'operation',\n                            title: 'Farm (or Operation)',\n                            type: 'text',\n                            placeHolder: 'Frank Farms',\n                        },\n                        {\n                            name: 'site',\n                            title: 'Field (or Site)',\n                            type: 'text',\n                            placeHolder: 'East Field',\n                        },\n                        {\n                            name: 'crop',\n                            title: 'Crop',\n                            type: 'text',\n                            placeHolder: 'corn',\n                        },\n                        {\n                            name:'prev-crop',\n                            title: 'Previous Crop',\n                            type: 'text',\n                            placeHolder: 'beans',\n                        },\n                        {\n                            name: 'weather',\n                            title: 'Weather',\n                            type: 'panel',\n                            elements: [\n                                {\n                                    name: 'weather-button',\n                                    title: 'Get Current Weather',\n                                    type: 'html',\n                                    // TODO: Implement functionality for button\n                                    cerebralbutton: 'setCurrentWeather',\n                                },\n                                {\n                                    name: 'temperature',\n                                    title: 'Temperature',\n                                    type: 'text',\n                                    //inputType: 'number',\n                                    placeHolder: '60 F'\n                                },\n                                {\n                                    name: 'windspeed',\n                                    title: 'Wind Speed',\n                                    type: 'text',\n                                    //inputType: 'number',\n                                    placeHolder: '10 mph',\n                                },\n                                {\n                                    name: 'winddirection',\n                                    title: 'Wind Direction',\n                                    type: 'text',\n                                    //inputType: 'number',\n                                    placeHolder: '35 deg',\n                                },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    name: 'uav-operator',\n                    title: 'UAV Operator',\n                    visibleIf: '{purpose} == \"UAV\"',\n                    elements: [\n                        {\n                            name: 'remote-pics',\n                            title: 'Remote Pilot in Command (PIC)',\n                            description: 'remote PIC - A person who holds a remote pilot certificate with an sUAS rating and has the final authority and responsibility for the operation and safety of an sUAS operation conducted under part 107.',\n                            type: 'paneldynamic',\n                            panelCount: 1,\n                            minPanelCount: 1,\n                            panelAddText: 'Add Remote PIC',\n                            panelRemoveText: 'Remove Remote PIC',\n                            templateTitle: 'Remote PIC #{panelIndex}',\n                            templateElements: [\n                                {\n                                    name: 'remote-pic-name',\n                                    title: 'Name',\n                                    type: 'text',\n                                    isRequired: true,\n                                    placeHolder: 'Rusty Shackleford'\n                                },\n                                {\n                                    name: 'remote-pic-certificate',\n                                    title: 'Certificate Number or equivalent',\n                                    type: 'text',\n                                    isRequired: true,\n                                    placeHolder: '1234567',\n                                    validators: [\n                                        {\n                                            type: 'regex',\n                                            regex: /^[0-9]{7}$/,\n                                            text: 'Invalid license number'\n                                        }\n                                    ]\n                                },\n\n                            ],\n                        },\n                        {\n                            name: 'observer',\n                            title: 'Visual Observer (VO)',\n                            description: 'VO - A person acting as a flightcrew member who assists the small UA remote PIC and the person manipulating the controls to see and avoid other air traffic or objects aloft or on the ground.',\n                            type: 'paneldynamic',\n                            panelCount: 0,\n                            panelAddText: 'Add VO',\n                            panelRemoveText: 'Remove VO',\n                            templateTitle: 'VO #{panelIndex}',\n                            templateElements: [\n                                {\n                                    name: 'observer-name',\n                                    title: 'Name',\n                                    type: 'text',\n                                    isRequired: true,\n                                    placeHolder: 'John Doe'\n                                },\n                            ],\n                        },\n                    ]\n                },\n                {\n                    name: 'uav-drone',\n                    title: 'Drone Info',\n                    visibleIf: '{purpose} == \"UAV\"',\n                    elements: [\n                        {\n                            // TODO: make required for submission only\n                            name: 'drone-screenshots',\n                            title: 'DroneDeploy Screenshots',\n                            type: 'panel',\n                            elements: [\n                                {\n                                    name: 'drone-flight-planning',\n                                    title: 'Screenshot of Flight Planning',\n                                    type: 'file',\n                                    allowMultiple: false,\n                                },\n                                {\n                                    name: 'drone-advanced-flight-planning',\n                                    title: 'Screenshot of Advanced Flight Planning',\n                                    type: 'file',\n                                    allowMultiple: false,\n                                },\n                            ],\n                        },\n                        {\n                            name: 'drone-qr',\n                            title: 'Scan drone QR code',\n                            type: 'html',\n                            cerebralbutton: 'showDroneQRScanner',\n                        },\n                        {\n                            name: 'uav-drone-type',\n                            title: 'Type',\n                            type: 'dropdown',\n                            isRequired: true,\n                            defaultValue: 'Fixed wing',\n                            hasOther: true,\n                            choices: [\n                                'Fixed wing',\n                                'Multi-rotor',\n                                'Helicopter',\n                            ],\n                        },\n                        {\n                            name: 'uav-drone',\n                            title: 'Drone',\n                            type: 'dropdown',\n                            hideIfChoicesEmpty: true,\n                            choices: drones.map((e, i) => ({\n                                text: e.make + ' ' + e.model,\n                                value: e.make + ' ' + e.model,\n                                //value: i,\n                                visibleIf: `{uav-drone-type} == \"${e.type}\"`,\n                            })),\n                        },\n                        {\n                            name: 'uav-drone-make',\n                            title: 'Make',\n                            type: 'text',\n                            enableIf: '{uav-drone} empty'\n                        },\n                        {\n                            name: 'uav-drone-model',\n                            title: 'Model',\n                            type: 'text',\n                            enableIf: '{uav-drone} empty'\n                        },\n                    ]\n                },\n                {\n                    name: 'uav-sensors',\n                    title: 'Sensors',\n                    visibleIf: '{purpose} == \"UAV\"',\n                    elements: [\n                        {\n                            name: 'sensor-qr',\n                            type: 'html',\n                            cerebralbutton: 'showSensorQRScanner',\n                        },\n                        {\n                            name: 'sensors',\n                            title: 'Sensors',\n                            type: 'paneldynamic',\n                            panelCount: 0,\n                            panelAddText: 'Add Sensor',\n                            panelRemoveText: 'Remove Sensor',\n                            templateTitle: 'Sensor #{panelIndex}',\n                            templateElements: [\n                                {\n                                    name: 'uav-sensor-type',\n                                    valueName: 'type',\n                                    title: 'Type',\n                                    type: 'dropdown',\n                                    isRequired: true,\n                                    hasOther: true,\n                                    choices: [\n                                        'RGB',\n                                        'Multispectral',\n                                        'Hyperspectral',\n                                        'LiDAR',\n                                        'Thermal',\n                                    ],\n                                },\n                                {\n                                    name: 'uav-sensor',\n                                    valueName: 'sensor',\n                                    title: 'Sensor',\n                                    type: 'dropdown',\n                                    hideIfChoicesEmpty: true,\n                                    choices: sensors.map((e, i) => ({\n                                        text: e.make + ' ' + e.model,\n                                        value: e.make + ' ' + e.model,\n                                        //value: i,\n                                        visibleIf: `{panel.type} == \"${e.type}\"`,\n                                    })),\n                                },\n                                {\n                                    name: 'uav-sensor-make',\n                                    valueName: 'sensor.make',\n                                    title: 'Make',\n                                    type: 'text',\n                                    enableIf: '{panel.sensor} empty'\n                                },\n                                {\n                                    name: 'uav-sensor-model',\n                                    valueName: 'model',\n                                    title: 'Model',\n                                    type: 'text',\n                                    enableIf: '{panel.sensor} empty'\n                                },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    name: 'b4ufly',\n                    title: 'B4UFLY Status',\n                    visibleIf: '{purpose} == \"UAV\"',\n                    elements: [\n                        {\n                            name: 'b4ufly-status',\n                            title: 'Status',\n                            type: 'dropdown',\n                            isRequired: true,\n                            choices: [\n                                'proceed with caution',\n                                'flying in controlled airspace (class B/C/D/E)',\n                                'other',\n                            ],\n                        },\n                        {\n                            name: 'b4ufly-extra',\n                            title: '',\n                            type: 'panel',\n                            visibleIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\" or {b4ufly-status} == \"other\"',\n                            elements: [\n                                {\n                                    name: 'b4ufly-airport-operator',\n                                    title: 'Airport Operator Contact',\n                                    type: 'text',\n                                    requiredIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\n                                },\n                                {\n                                    name: 'b4ufly-control-tower',\n                                    title: 'Control Tower Contact',\n                                    type: 'text',\n                                    requiredIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\n                                },\n                                {\n                                    name: 'b4ufly-prior-authorization',\n                                    title: 'Prior Authorization',\n                                    type: 'text',\n                                    requiredIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\n                                },\n                            ],\n                        },\n                        {\n                            // TODO: What the heck even is this?\n                            name: 'b4ufly-options',\n                            title: 'Options',\n                            type: 'checkbox',\n                            isRequired: true,\n                            choices: [\n                                'checked NOTAMS',\n                                'checked flight restrictions',\n                                'checked local restrictions',\n                                'checked upcoming restrictions',\n                                'checked national parks',\n                            ],\n                        },\n                        {\n                            name: 'b4ufly-certificate',\n                            title: 'COW or COA #',\n                            type: 'text',\n                        },\n                    ],\n                },\n                {\n                    name: 'planting',\n                    visibleIf: '!({purpose} == \"UAV\")',\n                    elements: [\n                        {\n                            name: 'nyi',\n                            type: 'html',\n                            html: 'Not yet implemented'\n                        }\n                    ]\n                },\n            ]\n        },\n    },\n    catch: [\n        [Error, ({error}) => console.error(error)],\n    ],\n    providers,\n    modules: {\n        store,\n        //storage,\n    },\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from 'cerebral';\nimport {Container} from '@cerebral/react';\nimport Devtools from 'cerebral/devtools';\n\nimport AppComponent from './App';\nimport main from './main';\n\nconst app = App(main, {\n    devtools: process.env.NODE_ENV === 'production' ?\n        null : Devtools({host: 'localhost:8000', reconnect: true})\n});\n\n// Run init sequence\napp.on('initialized:model', () => console.log('sadsad') && app.getSequence('init')());\n\nReactDOM.render(\n    <Container app={app}>\n        <AppComponent />\n    </Container>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nif (process.env.NODE_ENV === 'production') {\n    serviceWorker.register();\n} else {\n    serviceWorker.unregister();\n}\n"],"sourceRoot":""}