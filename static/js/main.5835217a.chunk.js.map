{"version":3,"sources":["serviceWorker.js","QRDialog.js","surveyModel.js","Questions.js","App.js","module/errors.js","module/providers.js","module/sequences.js","module/actions.js","module/index.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","connect","props","react_default","a","createElement","Dialog_default","fullScreen","open","AppBar_default","Toolbar_default","IconButton_default","color","onClick","onClose","aria-label","Close_default","Typography_default","variant","lib_default","style","width","onScan","data","onData","surveyModel","model","Survey","metaData","addProperty","name","Questions","_this","this","get","questions","_templateObject","pageNum","_templateObject2","undefined","currentPageNo","reaction","_templateObject3","_ref","_templateObject4","_ref2","updatePages","setData","survey","setPages","pages","visiblePages","map","page","hasErrors","title","_this2","_this$props","Object","objectWithoutProperties","survey_react","assign","onCurrentPageChanged","_templateObject5","setPage","onPageVisibleChanged","bind","onPageAdded","onValueChanged","_ref3","value","setTimeout","completedHtml","ReactDOMServer","renderToString","onAfterRenderQuestion","_ref4","question","htmlElement","cerebralbutton","seq","sequences","_templateObject6","ReactDOM","render","Button_default","Component","_templateObject7","init","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","theme","createMuiTheme","palette","type","primary","gold","App","classes","styles","Fragment","CssBaseline_default","className","position","menuButton","showNavigation","Menu_default","disabled","goPreviousPage","NavigateBefore_default","length","goNextPage","NavigateNext_default","some","submit","Send_default","grow","google","google_login","onLogoutSuccess","logout","clientId","login","tokenObj","isSignedIn","SwipeableDrawer_default","navigationOpen","onOpen","hideNavigation","List_default","ListItem_default","key","button","selected","setSurveyPage","ListItemIcon_default","Warning_default","Done_default","ListItemText_default","src_QRDialog","droneQRScannerActive","hideDroneQRScanner","sensorQRScannerActive","hideSensorQRScanner","src_Questions","isSinglePage","onComplete","JSON","stringify","App_templateObject","App_templateObject2","App_templateObject3","App_templateObject4","App_templateObject5","App_templateObject6","App_templateObject7","App_templateObject8","App_templateObject9","App_templateObject10","App_templateObject11","App_templateObject12","showDroneQRScanner","_templateObject13","showSensorQRScanner","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","_templateObject19","_templateObject20","withStyles","root","flexGrow","marginLeft","marginRight","GetLocationError","_CerebralError","message","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","inherits","CerebralError","geolocation","getCurrentLoc","_getCurrentLoc","asyncToGenerator","regenerator_default","mark","_callee","msg","wrap","_context","prev","next","Promise","resolve","reject","getCurrentPosition","pos","coords","abrupt","sent","t0","t1","code","stop","apply","arguments","setAnswer","setValue","num","nextPage","previousPage","prevPage","completeLastPage","set","sequences_templateObject","sequences_templateObject2","sequences_templateObject3","sequences_templateObject4","sequences_templateObject5","sequences_templateObject6","setSurveyData","sequences_templateObject7","sequences_templateObject8","answer","sequences_templateObject9","sequences_templateObject10","sequences_templateObject11","sequences_templateObject12","_ref6","_ref7","completeSurvey","_ref8","done","setCurrentLocation","currentLoc","latitude","longitude","push","sequences_templateObject13","sequences_templateObject14","sequences_templateObject15","sequences_templateObject16","unset","sequences_templateObject17","cssType","applyTheme","Date","toLocaleString","toISOString","split","src_module","surveyData","showNavigationButtons","goNextPageAutomatic","clearInvisibleValues","checkErrorsMode","elements","choices","defaultValue","date","time","items","inputType","panelCount","minPanelCount","panelAddText","panelRemoveText","templateTitle","templateElements","isRequired","visibleIf","placeHolder","description","validators","regex","text","allowMultiple","hasOther","hideIfChoicesEmpty","make","e","i","concat","enableIf","valueName","requiredIf","html","providers","app","main","devtools","_cerebral_react","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5835217a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {connect} from '@cerebral/react';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport QrReader from 'react-qr-reader';\r\n\r\nfunction QRDialog(props) {\r\n    return (\r\n        <Dialog\r\n            fullScreen\r\n            open={props.open}\r\n        >\r\n          <AppBar>\r\n            <Toolbar>\r\n              <IconButton color='inherit' onClick={props.onClose} aria-label='Close'>\r\n                <CloseIcon />\r\n              </IconButton>\r\n              <Typography variant='h6' color='inherit'>\r\n                Scan QR code\r\n              </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n            <QrReader\r\n                style={{width: '100%'}}\r\n                onScan={data => {\r\n                    if (!data) {\r\n                        return;\r\n                    }\r\n\r\n\t\t\t\t\tprops.onData(data);\r\n                    props.onClose();\r\n                }}\r\n            />\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default connect({\r\n}, QRDialog);\r\n","// TODO: This is probably the wrong way to do stuff, but I don't know cerebral\r\n// Want a singleton of survey model\r\nexport default {\r\n    model: null\r\n};\r\n","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactDOMServer from 'react-dom/server';\r\n\r\nimport {connect} from '@cerebral/react';\r\nimport {state, sequences} from 'cerebral/tags';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport * as Survey from 'survey-react';\r\nimport 'survey-react/survey.css';\r\n\r\nimport surveyModel from './surveyModel';\r\n\r\nSurvey.JsonObject.metaData.addProperty('question', {\r\n    name: 'cerebralbutton',\r\n});\r\n\r\nclass Questions extends Component {\r\n    componentWillMount() {\r\n        let get = this.props.get;\r\n\r\n        this.model = new Survey.Model(this.props.questions);\r\n        surveyModel.model = this.model;\r\n\r\n        // TODO: I'm sure this is isn't right with cerebral..\r\n        let data = get(state`surveyData`);\r\n        if (data) {\r\n            this.model.data = data;\r\n        }\r\n        let pageNum = get(state`pageNum`);\r\n        if (pageNum !== undefined) {\r\n            this.model.currentPageNo = pageNum;\r\n        }\r\n\r\n        this.props.reaction('changePage',\r\n            {\r\n                pageNum: state`pageNum`,\r\n            },\r\n            ({pageNum}) => this.model.currentPageNo = pageNum\r\n        );\r\n        this.props.reaction('changeData',\r\n            {\r\n                data: state`surveyData`,\r\n            },\r\n            ({data}) => this.model.data = data\r\n        );\r\n\r\n        this.updatePages(this.model);\r\n        this.props.setData({data: this.model.data});\r\n    }\r\n\r\n    updatePages(survey) {\r\n        this.props.setPages({\r\n            pages: survey.visiblePages.map((page) => ({\r\n                error: page.hasErrors(false, false),\r\n                name: page.name,\r\n                title: page.title,\r\n            }))\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {get, ...props} = this.props;\r\n        return (\r\n            <Survey.Survey\r\n                {...props}\r\n                model={this.model}\r\n                onCurrentPageChanged={(survey) => {\r\n                    if (get(state`pageNum`) !== survey.currentPageNo) {\r\n                        props.setPage({pageNum: survey.currentPageNo});\r\n                    }\r\n                }}\r\n                onPageVisibleChanged={this.updatePages.bind(this)}\r\n                onPageAdded={this.updatePages.bind(this)}\r\n                onValueChanged={(survey, {name, value}) => {\r\n                    props.setData({data: survey.data});\r\n                    // No idea why, but cerebral freaks out if I call this\r\n                    // without the setTimeout...\r\n                    setTimeout(() => this.updatePages(survey));\r\n                }}\r\n                completedHtml={\r\n                    ReactDOMServer.renderToString(props.completedHtml)\r\n                }\r\n                onAfterRenderQuestion={\r\n                    (survey, {question, htmlElement}) => {\r\n                        if (!question.cerebralbutton) {\r\n                            return;\r\n                        }\r\n\r\n                        let seq = get(sequences`${question.cerebralbutton}`);\r\n                        ReactDOM.render(\r\n                            <Button onClick={() => seq()}>\r\n                                {question.title}\r\n                            </Button>\r\n                        , htmlElement);\r\n                    }\r\n                }\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    {\r\n        questions: state`questions`,\r\n        init: sequences`initSurvey`,\r\n        data: state`surveyData`,\r\n        setData: sequences`setSurveyData`,\r\n        setPage: sequences`setSurveyPage`,\r\n        setPages: sequences`setPages`,\r\n    },\r\n    Questions\r\n);\r\n","import React, {Component} from 'react';\r\nimport {connect} from '@cerebral/react';\r\nimport {state, sequences} from 'cerebral/tags';\r\n\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport Drawer from '@material-ui/core/SwipeableDrawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport {GoogleLogin, GoogleLogout} from 'react-google-login';\r\n\r\nimport './App.css';\r\nimport QRDialog from './QRDialog';\r\nimport Questions from './Questions';\r\n\r\nimport {createMuiTheme, MuiThemeProvider} from '@material-ui/core/styles';\r\nimport gold from '@material-ui/core/colors/amber';\r\n\r\n// All the following keys are optional.\r\n// We try our best to provide a great default value.\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        type: 'dark',\r\n        primary: gold,\r\n    },\r\n});\r\n\r\nconst styles = {\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginLeft: -12,\r\n        marginRight: 20,\r\n    },\r\n};\r\n\r\nclass App extends Component {\r\n\r\n    componentWillMount() {\r\n        this.props.init();\r\n    }\r\n\r\n    render() {\r\n        let props = this.props;\r\n        const {classes} = props;\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n            <React.Fragment>\r\n            <CssBaseline />\r\n            <div className='App'>\r\n                <AppBar position='static'>\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            className={classes.menuButton}\r\n                            color='inherit'\r\n                            onClick={() => props.showNavigation()}\r\n                            aria-label='Menu'>\r\n                            <MenuIcon\r\n                            />\r\n                        </IconButton>\r\n                        <Button\r\n                            color='inherit'\r\n                            disabled={props.pageNum === 0}\r\n                            onClick={() => props.goPreviousPage()}>\r\n                            <NavigateBeforeIcon />\r\n                            Previous\r\n                        </Button>\r\n                        <Button\r\n                            color='inherit'\r\n                            disabled={props.pageNum === props.pages.length - 1}\r\n                            onClick={() => props.goNextPage()}>\r\n                            Next\r\n                            <NavigateNextIcon />\r\n                        </Button>\r\n                        <Button\r\n                            color='inherit'\r\n                            disabled={props.pages.some(page => page.error)}\r\n                            onClick={() => props.submit()}>\r\n                            Submit\r\n                            <SendIcon />\r\n                        </Button>\r\n                        <div className={classes.grow} />\r\n                        {props.google ? \r\n                            <GoogleLogout theme='dark' onLogoutSuccess={props.logout} /> :\r\n                            <GoogleLogin\r\n                                clientId='971551995245-9fmoq64cftrk371tft6qutehpn4i04b9.apps.googleusercontent.com'\r\n                                onSuccess={google => props.login({google: google.tokenObj})}\r\n                                theme='dark'\r\n                                isSignedIn={true}\r\n                            />\r\n                        }\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer\r\n                  open={props.navigationOpen}\r\n                  onOpen={()=>props.showNavigation()}\r\n                  onClose={()=>props.hideNavigation()}\r\n                >\r\n                    <List>\r\n                        {props.pages.map(({name, title, error}, pageNum) => (\r\n                            <ListItem\r\n                                key={name}\r\n                                button\r\n                                selected={pageNum === props.pageNum}\r\n                                className={error ? 'page-err' : 'page-complete'}\r\n                                onClick={()=>props.setSurveyPage({pageNum})}>\r\n                                <ListItemIcon>\r\n                                    {error ? <WarningIcon /> : <DoneIcon />}\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={title} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Drawer>\r\n                <QRDialog\r\n                    open={props.droneQRScannerActive}\r\n                    onClose={props.hideDroneQRScanner}\r\n                />\r\n                <QRDialog\r\n                    open={props.sensorQRScannerActive}\r\n                    onClose={props.hideSensorQRScanner}\r\n                />\r\n                <Questions\r\n                    isSinglePage={false}\r\n                    completedHtml={\r\n                        (<div> woo done!</div>)\r\n                    }\r\n                    onComplete={({data}) => console.log(JSON.stringify(data))}\r\n                />\r\n            </div>\r\n            </React.Fragment>\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect({\r\n    navigationOpen: state`navigationOpen`,\r\n    showNavigation: sequences`showNavigation`,\r\n    hideNavigation: sequences`hideNavigation`,\r\n    setSurveyPage: sequences`setSurveyPage`,\r\n    pages: state`pages`,\r\n    pageNum: state`pageNum`,\r\n    goNextPage: sequences`goNextPage`,\r\n    goPreviousPage: sequences`goPreviousPage`,\r\n    submit: sequences`completeSurvey`,\r\n    questions: state`questions`,\r\n    droneQRScannerActive: state`droneQRScannerActive`,\r\n    sensorQRScannerActive: state`sensorQRScannerActive`,\r\n    showDroneQRScanner: sequences`showDroneQRScanner`,\r\n    showSensorQRScanner: sequences`showSensorQRScanner`,\r\n    hideDroneQRScanner: sequences`hideDroneQRScanner`,\r\n    hideSensorQRScanner: sequences`hideSensorQRScanner`,\r\n    init: sequences`init`,\r\n    login: sequences`login`,\r\n    logout: sequences`logout`,\r\n    google: state`google`,\r\n}, withStyles(styles)(App));\r\n","import {CerebralError} from 'cerebral';\r\n\r\nexport class GetLocationError extends CerebralError {\r\n    constructor(message) {\r\n        super(message);\r\n        this.name = 'GetLocationError';\r\n    }\r\n}\r\n","//import Promise from 'bluebird';\r\n//import {state} from 'cerebral';\r\nimport {GetLocationError} from './errors';\r\nimport model from '../surveyModel';\r\n\r\nexport const geolocation = {\r\n    async getCurrentLoc() {\r\n        try {\r\n            return await new Promise((resolve, reject) =>\r\n                    navigator.geolocation.getCurrentPosition(resolve, reject))\r\n                .then(pos => pos.coords);\r\n        } catch (err) {\r\n            let msg;\r\n\r\n            switch (err.code) {\r\n                case 1: // PERMISSION_DENIED\r\n                    msg = 'Permission denied';\r\n                    break;\r\n                case 2: // POSITION_UNAVAILABLE\r\n                    msg = 'Position unavailable';\r\n                    break;\r\n                case 3: // TIMEOUT\r\n                    msg = 'Timeout obtaining position';\r\n                    break;\r\n                default:\r\n                    msg = 'Unknown error';\r\n            }\r\n\r\n            throw new GetLocationError(msg);\r\n        }\r\n    }\r\n};\r\n\r\nexport const survey = {\r\n    setAnswer(name, value) {\r\n        model.model.setValue(name, value);\r\n    },\r\n\r\n    setPage(num) {\r\n        model.model.currentPageNo = num;\r\n    },\r\n\r\n    nextPage() {\r\n        return model.model.nextPage();\r\n    },\r\n\r\n    previousPage() {\r\n        return model.model.prevPage();\r\n    },\r\n\r\n    setData(data) {\r\n        model.model.data = data;\r\n    },\r\n\r\n    submit() {\r\n        return model.model.completeLastPage();\r\n    },\r\n};\r\n","import {set, unset, push, pop, shift, unshift, merge} from 'cerebral/factories';\r\nimport {state, props} from 'cerebral/tags';\r\nimport * as actions from './actions';\r\nimport {sequence, parallel} from 'cerebral';\r\n\r\nexport const init = [];\r\n\r\nexport const showDroneQRScanner = [set(state`droneQRScannerActive`, true)];\r\nexport const hideDroneQRScanner = [set(state`droneQRScannerActive`, false)];\r\nexport const showSensorQRScanner = [set(state`sensorQRScannerActive`, true)];\r\nexport const hideSensorQRScanner = [set(state`sensorQRScannerActive`, false)];\r\nexport const showNavigation = [set(state`navigationOpen`, true)];\r\nexport const hideNavigation = [set(state`navigationOpen`, false)];\r\n\r\nexport const setSurveyData = [set(state`surveyData`, props`data`)];\r\nexport const setAnswer = [actions.setAnswer];\r\nexport const setSurveyPage = [\r\n    set(state`pageNum`, props`pageNum`),\r\n];\r\nexport const setPages = [set(state`pages`, props`pages`)];\r\nexport const goNextPage = [\r\n    actions.nextPage,\r\n    /*\r\n    set(props`pageNum`, state`pageNum`, num => num + 1),\r\n    set(state`pageNum`, props`pageNum`),\r\n    */\r\n];\r\nexport const goPreviousPage = [\r\n    actions.previousPage,\r\n    /*\r\n    set(props`pageNum`, state`pageNum`, num => num - 1),\r\n    set(state`pageNum`, props`pageNum`),\r\n    */\r\n];\r\nexport const completeSurvey = [actions.completeSurvey];\r\nexport const setCurrentLocation = [\r\n    actions.getCurrentLocation,\r\n\t/*\r\n\tset(props`question`, 'locations'),\r\n\tunshift(state`surveyData.locations`, {}),\r\n\tset(props`answer`, state`surveyData.locations`),\r\n    actions.setAnswer,\r\n\tshift(state`surveyData.locations`),\r\n\t*/\r\n\tpush(state`surveyData.locations`, props`currentLoc`),\r\n\t/*\r\n\tset(props`answer`, state`surveyData.locations`),\r\n    actions.setAnswer,\r\n\t*/\r\n];\r\n\r\nexport const login = [set(state`google`, props`google`)];\r\nexport const logout = [unset(state`google`)];\r\n","//import {state} from 'cerebral';\r\n\r\nexport function getCurrentLocation({geolocation}) {\r\n    return geolocation.getCurrentLoc()\r\n        .then(({latitude, longitude}) => ({currentLoc: {latitude, longitude}}));\r\n}\r\n\r\nexport function setAnswer({survey, props}) {\r\n    return survey.setAnswer(props.question, props.answer);\r\n}\r\nexport function setSurveyPage({survey, props}) {\r\n    return survey.setPage(props.pageNum);\r\n}\r\nexport function setSurveyData({survey, props}) {\r\n    return survey.setData(props.data);\r\n}\r\nexport function nextPage({survey}) {\r\n    return {error: survey.nextPage()};\r\n}\r\nexport function previousPage({survey}) {\r\n    return {error: survey.previousPage()};\r\n}\r\nexport function completeSurvey({survey, props}) {\r\n    return {done: survey.submit()};\r\n}\r\n","//import { set } from 'cerebral/operators';\r\n//import { state } from 'cerebral/tags';\r\n//\r\nimport * as Survey from 'survey-react';\r\n\r\nimport * as providers from './providers';\r\nimport * as sequences from './sequences';\r\n\r\nSurvey.Survey.cssType = 'material';\r\nSurvey.StylesManager.applyTheme('darkblue');\r\n\r\n// TODO: Get current date/time better\r\nvar [date, time] = (new Date((new Date()).toLocaleString() + ' UTC'))\r\n        .toISOString().split(/[TZ]/);\r\n\r\n// TODO: Get these from sheets\r\nconst sensors = [\r\n    {\r\n        make: 'Sony',\r\n        model: 'A6000',\r\n        type: 'RGB',\r\n    },\r\n    {\r\n        make: 'Parrot',\r\n        model: 'Sequoia',\r\n        type: 'Multispectral',\r\n    },\r\n];\r\nconst drones = [\r\n    {\r\n        make: 'Test',\r\n        model: 'testtest',\r\n        type: 'Fixed wing',\r\n    },\r\n];\r\n\r\nexport default {\r\n    sequences,\r\n    state: {\r\n        navigationOpen: true,\r\n        droneQRScannerActive: false,\r\n        sensorQRScannerActive: false,\r\n        surveyData: null,\r\n        pages: [],\r\n        pageNum: 0,\r\n        questions: {\r\n            showNavigationButtons: false,\r\n            goNextPageAutomatic: true,\r\n            clearInvisibleValues: 'onHidden',\r\n            checkErrorsMode: 'onValueChanged',\r\n            pages: [\r\n                {\r\n                    name: 'general',\r\n                    title: 'General',\r\n                    elements: [\r\n                        {\r\n                            name: 'purpose',\r\n                            title: 'Purpose',\r\n                            type: 'dropdown',\r\n                            choices: [\r\n                                'UAV',\r\n                                'Planting',\r\n                                'Spraying',\r\n                                'Tilling',\r\n                                'Harvest'\r\n                            ],\r\n                            defaultValue: 'UAV' // TODO: remove default later\r\n                        },\r\n                        {\r\n                            name: 'datetime',\r\n                            title: 'Date/Time of data',\r\n                            type: 'multipletext',\r\n                            defaultValue: {\r\n                                date: date,\r\n                                time: time,\r\n                            },\r\n                            items: [\r\n                                {\r\n                                    name: 'date',\r\n                                    title: 'Date',\r\n                                    inputType: 'date',\r\n                                },\r\n                                {\r\n                                    name: 'time',\r\n                                    title: 'Time',\r\n                                    inputType: 'time',\r\n                                },\r\n                            ]\r\n                        },\r\n                        {\r\n                            type: 'panel',\r\n                            elements: [\r\n                                {\r\n                                    // TODO: Support selecting region on a map\r\n                                    name: 'locations',\r\n                                    title: 'Collection locations',\r\n                                    type: 'paneldynamic',\r\n                                    panelCount: 1,\r\n                                    minPanelCount: 1,\r\n                                    panelAddText: 'Add Location',\r\n                                    panelRemoveText: 'Remove Location',\r\n                                    templateTitle: 'Location #{panelIndex}',\r\n                                    templateElements: [\r\n                                        {\r\n                                            name: 'latitude',\r\n                                            title: 'Latitude',\r\n                                            type: 'text',\r\n                                            isRequired: true,\r\n                                        },\r\n                                        {\r\n                                            name: 'longitude',\r\n                                            title: 'Longitude',\r\n                                            type: 'text',\r\n                                            isRequired: true,\r\n                                        },\r\n                                    ],\r\n                                },\r\n                                {\r\n                                    name: 'location-button',\r\n                                    title: 'Add current location',\r\n                                    type: 'html',\r\n                                    cerebralbutton: 'setCurrentLocation',\r\n                                },\r\n                            ],\r\n                        },\r\n                        {\r\n                            name: 'notes',\r\n                            title: 'Notes or comments',\r\n                            type: 'comment'\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    name: 'place',\r\n                    title: 'Place',\r\n                    visibleIf: '{purpose} == \"UAV\"',\r\n                    elements: [\r\n                        {\r\n                            name: 'client',\r\n                            title: 'Grower (or Client)',\r\n                            type: 'text',\r\n                            placeHolder: 'Farmer Frank',\r\n                        },\r\n                        {\r\n                            name: 'operation',\r\n                            title: 'Farm (or Operation)',\r\n                            type: 'text',\r\n                            placeHolder: 'Frank Farms',\r\n                        },\r\n                        {\r\n                            name: 'site',\r\n                            title: 'Field (or Site)',\r\n                            type: 'text',\r\n                            placeHolder: 'East Field',\r\n                        },\r\n                        {\r\n                            name: 'crop',\r\n                            title: 'Crop',\r\n                            type: 'text',\r\n                            placeHolder: 'corn',\r\n                        },\r\n                        {\r\n                            name:'prev-crop',\r\n                            title: 'Previous Crop',\r\n                            type: 'text',\r\n                            placeHolder: 'beans',\r\n                        },\r\n                        {\r\n                            name: 'weather',\r\n                            title: 'Weather',\r\n                            type: 'panel',\r\n                            elements: [\r\n                                {\r\n                                    name: 'weather-button',\r\n                                    title: 'Get Current Weather',\r\n                                    type: 'html',\r\n                                    // TODO: Implement functionality for button\r\n                                    cerebralbutton: 'setCurrentWeather',\r\n                                },\r\n                                {\r\n                                    name: 'temperature',\r\n                                    title: 'Temperature',\r\n                                    type: 'text',\r\n                                    //inputType: 'number',\r\n                                    placeHolder: '60 F'\r\n                                },\r\n                                {\r\n                                    name: 'windspeed',\r\n                                    title: 'Wind Speed',\r\n                                    type: 'text',\r\n                                    //inputType: 'number',\r\n                                    placeHolder: '10 mph',\r\n                                },\r\n                                {\r\n                                    name: 'winddirection',\r\n                                    title: 'Wind Direction',\r\n                                    type: 'text',\r\n                                    //inputType: 'number',\r\n                                    placeHolder: '35 deg',\r\n                                },\r\n                            ],\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    name: 'uav-operator',\r\n                    title: 'UAV Operator',\r\n                    visibleIf: '{purpose} == \"UAV\"',\r\n                    elements: [\r\n                        {\r\n                            name: 'remote-pics',\r\n                            title: 'Remote Pilot in Command (PIC)',\r\n                            description: 'remote PIC - A person who holds a remote pilot certificate with an sUAS rating and has the final authority and responsibility for the operation and safety of an sUAS operation conducted under part 107.',\r\n                            type: 'paneldynamic',\r\n                            panelCount: 1,\r\n                            minPanelCount: 1,\r\n                            panelAddText: 'Add Remote PIC',\r\n                            panelRemoveText: 'Remove Remote PIC',\r\n                            templateTitle: 'Remote PIC #{panelIndex}',\r\n                            templateElements: [\r\n                                {\r\n                                    name: 'remote-pic-name',\r\n                                    title: 'Name',\r\n                                    type: 'text',\r\n                                    isRequired: true,\r\n                                    placeHolder: 'Rusty Shackleford'\r\n                                },\r\n                                {\r\n                                    name: 'remote-pic-certificate',\r\n                                    title: 'Certificate Number or equivalent',\r\n                                    type: 'text',\r\n                                    isRequired: true,\r\n                                    placeHolder: '1234567',\r\n                                    validators: [\r\n                                        {\r\n                                            type: 'regex',\r\n                                            regex: /^[0-9]{7}$/,\r\n                                            text: 'Invalid license number'\r\n                                        }\r\n                                    ]\r\n                                },\r\n\r\n                            ],\r\n                        },\r\n                        {\r\n                            name: 'observer',\r\n                            title: 'Visual Observer (VO)',\r\n                            description: 'VO - A person acting as a flightcrew member who assists the small UA remote PIC and the person manipulating the controls to see and avoid other air traffic or objects aloft or on the ground.',\r\n                            type: 'paneldynamic',\r\n                            panelCount: 0,\r\n                            panelAddText: 'Add VO',\r\n                            panelRemoveText: 'Remove VO',\r\n                            templateTitle: 'VO #{panelIndex}',\r\n                            templateElements: [\r\n                                {\r\n                                    name: 'observer-name',\r\n                                    title: 'Name',\r\n                                    type: 'text',\r\n                                    isRequired: true,\r\n                                    placeHolder: 'John Doe'\r\n                                },\r\n                            ],\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    name: 'uav-drone',\r\n                    title: 'Drone Info',\r\n                    visibleIf: '{purpose} == \"UAV\"',\r\n                    elements: [\r\n                        {\r\n                            // TODO: make required for submission only\r\n                            name: 'drone-screenshots',\r\n                            title: 'DroneDeploy Screenshots',\r\n                            type: 'panel',\r\n                            elements: [\r\n                                {\r\n                                    name: 'drone-flight-planning',\r\n                                    title: 'Screenshot of Flight Planning',\r\n                                    type: 'file',\r\n                                    allowMultiple: false,\r\n                                },\r\n                                {\r\n                                    name: 'drone-advanced-flight-planning',\r\n                                    title: 'Screenshot of Advanced Flight Planning',\r\n                                    type: 'file',\r\n                                    allowMultiple: false,\r\n                                },\r\n                            ],\r\n                        },\r\n                        {\r\n                            name: 'drone-qr',\r\n                            title: 'Scan drone QR code',\r\n                            type: 'html',\r\n                            cerebralbutton: 'showDroneQRScanner',\r\n                        },\r\n                        {\r\n                            name: 'uav-drone-type',\r\n                            title: 'Type',\r\n                            type: 'dropdown',\r\n                            isRequired: true,\r\n                            defaultValue: 'Fixed wing',\r\n                            hasOther: true,\r\n                            choices: [\r\n                                'Fixed wing',\r\n                                'Multi-rotor',\r\n                                'Helicopter',\r\n                            ],\r\n                        },\r\n                        {\r\n                            name: 'uav-drone',\r\n                            title: 'Drone',\r\n                            type: 'dropdown',\r\n                            hideIfChoicesEmpty: true,\r\n                            choices: drones.map((e, i) => ({\r\n                                text: e.make + ' ' + e.model,\r\n                                value: e.make + ' ' + e.model,\r\n                                //value: i,\r\n                                visibleIf: `{uav-drone-type} == \"${e.type}\"`,\r\n                            })),\r\n                        },\r\n                        {\r\n                            name: 'uav-drone-make',\r\n                            title: 'Make',\r\n                            type: 'text',\r\n                            enableIf: '{uav-drone} empty'\r\n                        },\r\n                        {\r\n                            name: 'uav-drone-model',\r\n                            title: 'Model',\r\n                            type: 'text',\r\n                            enableIf: '{uav-drone} empty'\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    name: 'uav-sensors',\r\n                    title: 'Sensors',\r\n                    visibleIf: '{purpose} == \"UAV\"',\r\n                    elements: [\r\n                        {\r\n                            name: 'sensor-qr',\r\n                            type: 'html',\r\n                            cerebralbutton: 'showSensorQRScanner',\r\n                        },\r\n                        {\r\n                            name: 'sensors',\r\n                            title: 'Sensors',\r\n                            type: 'paneldynamic',\r\n                            panelCount: 0,\r\n                            panelAddText: 'Add Sensor',\r\n                            panelRemoveText: 'Remove Sensor',\r\n                            templateTitle: 'Sensor #{panelIndex}',\r\n                            templateElements: [\r\n                                {\r\n                                    name: 'uav-sensor-type',\r\n                                    valueName: 'type',\r\n                                    title: 'Type',\r\n                                    type: 'dropdown',\r\n                                    isRequired: true,\r\n                                    hasOther: true,\r\n                                    choices: [\r\n                                        'RGB',\r\n                                        'Multispectral',\r\n                                        'Hyperspectral',\r\n                                        'LiDAR',\r\n                                        'Thermal',\r\n                                    ],\r\n                                },\r\n                                {\r\n                                    name: 'uav-sensor',\r\n                                    valueName: 'sensor',\r\n                                    title: 'Sensor',\r\n                                    type: 'dropdown',\r\n                                    hideIfChoicesEmpty: true,\r\n                                    choices: sensors.map((e, i) => ({\r\n                                        text: e.make + ' ' + e.model,\r\n                                        value: e.make + ' ' + e.model,\r\n                                        //value: i,\r\n                                        visibleIf: `{panel.type} == \"${e.type}\"`,\r\n                                    })),\r\n                                },\r\n                                {\r\n                                    name: 'uav-sensor-make',\r\n                                    valueName: 'sensor.make',\r\n                                    title: 'Make',\r\n                                    type: 'text',\r\n                                    enableIf: '{panel.sensor} empty'\r\n                                },\r\n                                {\r\n                                    name: 'uav-sensor-model',\r\n                                    valueName: 'model',\r\n                                    title: 'Model',\r\n                                    type: 'text',\r\n                                    enableIf: '{panel.sensor} empty'\r\n                                },\r\n                            ],\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    name: 'b4ufly',\r\n                    title: 'B4UFLY Status',\r\n                    visibleIf: '{purpose} == \"UAV\"',\r\n                    elements: [\r\n                        {\r\n                            name: 'b4ufly-status',\r\n                            title: 'Status',\r\n                            type: 'dropdown',\r\n                            isRequired: true,\r\n                            choices: [\r\n                                'proceed with caution',\r\n                                'flying in controlled airspace (class B/C/D/E)',\r\n                                'other',\r\n                            ],\r\n                        },\r\n                        {\r\n                            name: 'b4ufly-extra',\r\n                            title: '',\r\n                            type: 'panel',\r\n                            visibleIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\" or {b4ufly-status} == \"other\"',\r\n                            elements: [\r\n                                {\r\n                                    name: 'b4ufly-airport-operator',\r\n                                    title: 'Airport Operator Contact',\r\n                                    type: 'text',\r\n                                    requiredIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\r\n                                },\r\n                                {\r\n                                    name: 'b4ufly-control-tower',\r\n                                    title: 'Control Tower Contact',\r\n                                    type: 'text',\r\n                                    requiredIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\r\n                                },\r\n                                {\r\n                                    name: 'b4ufly-prior-authorization',\r\n                                    title: 'Prior Authorization',\r\n                                    type: 'text',\r\n                                    requiredIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\r\n                                },\r\n                            ],\r\n                        },\r\n                        {\r\n                            // TODO: What the heck even is this?\r\n                            name: 'b4ufly-options',\r\n                            title: 'Options',\r\n                            type: 'checkbox',\r\n                            isRequired: true,\r\n                            choices: [\r\n                                'checked NOTAMS',\r\n                                'checked flight restrictions',\r\n                                'checked local restrictions',\r\n                                'checked upcoming restrictions',\r\n                                'checked national parks',\r\n                            ],\r\n                        },\r\n                        {\r\n                            name: 'b4ufly-certificate',\r\n                            title: 'COW or COA #',\r\n                            type: 'text',\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    name: 'planting',\r\n                    visibleIf: '!({purpose} == \"UAV\")',\r\n                    elements: [\r\n                        {\r\n                            name: 'nyi',\r\n                            type: 'html',\r\n                            html: 'Not yet implemented'\r\n                        }\r\n                    ]\r\n                },\r\n            ]\r\n        },\r\n    },\r\n    providers,\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport App from 'cerebral';\r\nimport { Container } from '@cerebral/react';\r\nimport Devtools from 'cerebral/devtools';\r\n\r\nimport AppComponent from './App';\r\nimport main from './module';\r\n\r\nconst app = App(main, {\r\n    devtools: process.env.NODE_ENV === 'production' ?\r\n        null : Devtools({host: 'localhost:8000', reconnect: true})\r\n});\r\n\r\nReactDOM.render(\r\n    <Container app={app}>\r\n\t\t<AppComponent />\r\n\t</Container>,\r\ndocument.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nif (process.env.NODE_ENV === 'production') {\r\n\tserviceWorker.register();\r\n} else {\r\n\tserviceWorker.unregister();\r\n}\r\n"],"sourceRoot":""}