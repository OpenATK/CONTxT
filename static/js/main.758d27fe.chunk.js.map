{"version":3,"sources":["serviceWorker.js","QRDialog.js","surveyModel.js","Questions.js","PagesDrawer.js","ConfirmSubmitDialog.js","DebugButton.js","App.js","main/modules/localstore/index.js","main/providers.js","main/errors.js","main/actions.js","main/sequences.js","main/index.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","connect","props","react_default","a","createElement","Dialog_default","fullScreen","open","AppBar_default","Toolbar_default","IconButton_default","color","onClick","onClose","aria-label","Close_default","Typography_default","variant","lib_default","style","width","onScan","data","onData","surveyModel","model","Survey","metaData","addProperty","name","Questions","_this","this","_this$props","get","palette","theme","themeColors","ThemeColors","primary","main","dark","text","secondary","divider","background","paper","default","light","applyTheme","questions","_templateObject","pageNum","_templateObject2","undefined","currentPageNo","reaction","_templateObject3","_ref","_templateObject4","_ref2","updatePages","setData","survey","setPages","pages","visiblePages","map","page","hasErrors","title","_this2","_this$props2","Object","objectWithoutProperties","survey_react","assign","onCurrentPageChanged","_templateObject5","setPage","onPageVisibleChanged","bind","onPageAdded","onValueChanged","_ref3","value","setTimeout","completedHtml","ReactDOMServer","renderToString","onAfterRenderQuestion","_ref4","question","htmlElement","cerebralbutton","seq","sequences","_templateObject6","ReactDOM","render","Button_default","Component","_templateObject7","init","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","withTheme","navigationOpen","PagesDrawer_templateObject","showNavigation","PagesDrawer_templateObject2","hideNavigation","PagesDrawer_templateObject3","setSurveyPage","PagesDrawer_templateObject4","PagesDrawer_templateObject5","PagesDrawer_templateObject6","_props$classes","classes","contents","align","className","grow","noWrap","Divider_default","List_default","ListItem_default","key","button","selected","ListItemIcon_default","Warning_default","Done_default","ListItemText_default","secondaryTypographyProps","drawer","Hidden_default","permScreens","implementation","SwipeableDrawer_default","onOpen","drawerPaper","tempScreens","Drawer_default","ConfirmSubmitDialog_templateObject","resultsUrl","ConfirmSubmitDialog_templateObject2","confirm","ConfirmSubmitDialog_templateObject3","handleClose","aria-labelledby","aria-describedby","DialogTitle_default","id","DialogContent_default","DialogContentText_default","Link_default","href","DialogActions_default","autoFocus","DebugButton_templateObject","setState","DebugButton_templateObject2","submitResults","DebugButton_templateObject3","disconnect","DebugButton_templateObject4","aria-owns","aria-haspopup","process","core_Menu_default","MenuItem_default","params","queryString","parse","search","createMuiTheme","typography","useNextVariants","type","gold","addEventListener","e","preventDefault","install","prompt","App","core_styles","Fragment","CssBaseline_default","root","src_PagesDrawer","smUp","xsDown","position","appBar","debug","src_DebugButton","menuButton","Menu_default","disabled","some","submit","Send_default","data-theme","src_QRDialog","droneQRScannerActive","hideDroneQRScanner","sensorQRScannerActive","hideSensorQRScanner","src_ConfirmSubmitDialog","content","toolbar","src_Questions","isSinglePage","singlePage","onComplete","bottomBar","MobileStepper_default","steps","length","activeStep","mobileStepper","nextButton","goNextPage","NavigateNext_default","backButton","goPreviousPage","NavigateBefore_default","App_templateObject","App_templateObject2","App_templateObject3","App_templateObject4","App_templateObject5","App_templateObject6","App_templateObject7","App_templateObject8","App_templateObject9","App_templateObject10","App_templateObject11","App_templateObject12","showDroneQRScanner","_templateObject13","showSensorQRScanner","_templateObject14","_templateObject15","_templateObject16","_templateObject17","login","_templateObject18","logout","_templateObject19","google","_templateObject20","createSheet","_templateObject21","_templateObject22","withStyles","display","alignItems","justifyContent","textAlign","flexGrow","alignSelf","maxWidth","defineProperty","top","bottom","marginLeft","breakpoints","up","concat","mixins","marginRight","flexShrink","client","gapi","GetLocationError","_CerebralError","message","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","inherits","CerebralError","GAPIError","_CerebralError2","err","result","SerializeError","_CerebralError3","r","c","_this3","DeserializeError","_CerebralError4","_this4","geolocation","getCurrentLoc","_getCurrentLoc","asyncToGenerator","regenerator_default","mark","_callee","msg","wrap","_context","prev","next","Promise","resolve","reject","getCurrentPosition","pos","coords","abrupt","sent","t0","t1","code","errors","stop","apply","arguments","setAnswer","setValue","num","nextPage","previousPage","prevPage","completeLastPage","gapiClient","_init","_callee2","_context2","googleapi","tap","load","callback","onerror","timeout","ontimeout","discoveryDocs","auth","auth2","getAuthInstance","listener","signedIn","context","isSignedIn","listen","_x","_get","_callee3","_context3","_ref5","grants","scope","reduce","b","currentUser","grant","_disconnect","_callee4","_context4","googleappdata","getData","_getData","_callee5","_ref6","drive","_ref7","_context5","files","list","spaces","q","fields","appProperties","initData","_initData","_callee6","_ref8","_ref8$body","body","_ref9","_ref10","_context6","create","resource","mimeType","parents","_x2","googlesheets","_createSheet","_callee7","_ref11","sheets","_ref12","_context7","spreadsheets","getSheet","_getSheet","_callee8","_ref13","_ref14","sheet","_context8","values","spreadsheetId","range","XLSX","utils","aoa_to_sheet","sheet_to_json","_x3","writeSheet","_writeSheet","_callee9","sheetsURL","_ref15","_ref16","row","_context9","json_to_sheet","header","update","valueInputOption","includeValuesInResponse","majorDimension","objectSpread","_x4","_x5","addRow","_addRow","_callee10","cols","_ref17","_context10","append","insertDataOption","_x6","_x7","_x8","serialize","i","serialized","keys","forEach","JSON","stringify","deserialize","deserialized","startsWith","kkey","substring","answer","main_actions_createSheet","results","resultsId","_ref18","path","found","notfound","paths","set","sequences_templateObject","sequences_templateObject2","sequences_templateObject3","sequences_templateObject4","_initGapi","sequences_templateObject5","sequences_templateObject6","sequences_templateObject7","sequences_templateObject8","sequences_templateObject9","sequences_templateObject10","sequences_templateObject11","setSurveyData","sequences_templateObject12","sequences_templateObject13","actions","sequences_templateObject14","sequences_templateObject15","sequences_templateObject16","sequences_templateObject17","completeSurvey","done","setCurrentLocation","currentLoc","latitude","longitude","sequences_templateObject18","sequences_templateObject19","locations","sequences_templateObject20","sequences_templateObject21","sequences_templateObject22","loadappdata","_x10","_loadAppData","_templateObject23","_templateObject24","_templateObject25","_x9","_createAppData","_templateObject26","_templateObject27","_templateObject28","_templateObject29","_loadPastResults","_deserializeResults","_templateObject30","_templateObject31","_templateObject32","_templateObject33","_templateObject34","disconnectGoogle","_disconnectGapi","when","_templateObject35","true","false","push","_templateObject36","_templateObject37","_templateObject38","_templateObject39","_serializeResults","_templateObject40","_templateObject41","_uploadResults","_templateObject42","_templateObject43","_templateObject44","confirmSubmit","_templateObject45","_templateObject46","reload","setDebugMenuOpen","_templateObject47","_templateObject48","store","providers","localstore","ls","val","clear","initialized","persistState","moduleState","localstore_templateObject","success","parallel","localstore_templateObject2","localstore_templateObject3","merge","localstore_templateObject4","localstore_templateObject5","localstore_templateObject6","localstore_templateObject7","localstore_templateObject8","reactions","Reaction","localstore_templateObject9","modulePath","join","localstore_templateObject10","sequence","obj","confirmSubmitOpen","surveyData","pastData","showNavigationButtons","goNextPageAutomatic","clearInvisibleValues","checkErrorsMode","elements","choices","defaultValue","inputType","DateTime","local","toFormat","panelCount","minPanelCount","panelAddText","panelRemoveText","templateTitle","templateElements","isRequired","visibleIf","placeHolder","description","validators","regex","allowMultiple","hasOther","hideIfChoicesEmpty","make","enableIf","valueName","requiredIf","html","Error","modules","app","devtools","throwToConsole","noRethrow","on","getSequence","_cerebral_react","src_App_0","document","getElementById","URL","origin","fetch","response","contentType","headers","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"yjDAYMA,UAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,4DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,gHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,UAO5BW,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,yXCrDlDC,wBAAQ,GA/BvB,SAAkBC,GACd,OACIC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACIG,YAAU,EACVC,KAAMN,EAAMM,MAEdL,EAAAC,EAAAC,cAACI,EAAAL,EAAD,KACED,EAAAC,EAAAC,cAACK,EAAAN,EAAD,KACED,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CAAYQ,MAAM,UAAUC,QAASX,EAAMY,QAASC,aAAW,SAC7DZ,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,OAEFD,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAYc,QAAQ,KAAKN,MAAM,WAA/B,kBAKFT,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CACIgB,MAAO,CAACC,MAAO,QACfC,OAAQ,SAAAC,GACCA,IAIpBrB,EAAMsB,OAAOD,GACErB,EAAMY,wDClCXW,WAAA,CACXC,MAAO,s8BCYXC,cAAkBC,SAASC,YAAY,WAAY,CAC/CC,KAAM,uBAGJC,gMACmB,IAAAC,EAAAC,KAAAC,EACID,KAAK/B,MAAnBiC,EADUD,EACVC,IAGAC,EAJUF,EACLG,MAGLD,QACHE,EAAcX,iBAAqBY,YAArB,QAClBD,EAAY,eAAiBF,EAAQI,QAAQC,KAC7CH,EAAY,qBAAuBF,EAAQI,QAAQE,KACnDJ,EAAY,eAAiBF,EAAQO,KAAKH,QAC1CF,EAAY,iBAAmBF,EAAQQ,UAAUH,KACjDH,EAAY,iBAAmBF,EAAQS,QACvCP,EAAY,4BAA8BF,EAAQQ,UAAUH,KAC5DH,EAAY,0BAA4BF,EAAQU,WAAWC,MAC3DT,EAAY,oCAAsCF,EAAQU,WAAWC,MACrET,EAAY,4BAA8BF,EAAQU,WAAWE,QAC7DV,EAAY,gBAAkBF,EAAQpC,MAAMyC,KAC5CH,EAAY,2BAA6BF,EAAQpC,MAAMiD,MACvDtB,iBAAqBuB,WAAW,WAEhCjB,KAAKP,MAAQ,IAAIC,SAAaM,KAAK/B,MAAMiD,WACzC1B,GAAYC,MAAQO,KAAKP,MAGzB,IAAIH,EAAOY,EAAI1C,gBAAD2D,OACV7B,IACAU,KAAKP,MAAMH,KAAOA,GAEtB,IAAI8B,EAAUlB,EAAI1C,gBAAD6D,YACDC,IAAZF,IACApB,KAAKP,MAAM8B,cAAgBH,GAG/BpB,KAAK/B,MAAMuD,SAAS,aAChB,CACIJ,QAAS5D,gBAAFiE,OAEX,SAAAC,GAAA,IAAEN,EAAFM,EAAEN,QAAF,OAAerB,EAAKN,MAAM8B,cAAgBH,IAE9CpB,KAAK/B,MAAMuD,SAAS,aAChB,CACIlC,KAAM9B,gBAAFmE,OAER,SAAAC,GAAA,IAAEtC,EAAFsC,EAAEtC,KAAF,OAAYS,EAAKN,MAAMH,KAAOA,IAGlCU,KAAK6B,YAAY7B,KAAKP,OACtBO,KAAK/B,MAAM6D,QAAQ,CAACxC,KAAMU,KAAKP,MAAMH,2CAG7ByC,GACR/B,KAAK/B,MAAM+D,SAAS,CAChBC,MAAOF,EAAOG,aAAaC,IAAI,SAACC,GAAD,MAAW,CACtCrE,MAAOqE,EAAKC,WAAU,GAAO,GAC7BxC,KAAMuC,EAAKvC,KACXyC,MAAOF,EAAKE,4CAKf,IAAAC,EAAAvC,KAAAwC,EACiBxC,KAAK/B,MAAtBiC,EADAsC,EACAtC,IAAQjC,EADRwE,OAAAC,EAAA,EAAAD,CAAAD,EAAA,SAEL,OACItE,EAAAC,EAAAC,cAACuE,GAAA,OAADF,OAAAG,OAAA,GACQ3E,EADR,CAEIwB,MAAOO,KAAKP,MACZoD,qBAAsB,SAACd,GACf7B,EAAI1C,gBAADsF,SAAqBf,EAAOR,eAC/BtD,EAAM8E,QAAQ,CAAC3B,QAASW,EAAOR,iBAGvCyB,qBAAsBhD,KAAK6B,YAAYoB,KAAKjD,MAC5CkD,YAAalD,KAAK6B,YAAYoB,KAAKjD,MACnCmD,eAAgB,SAACpB,EAADqB,GAA2BA,EAAjBvD,KAAiBuD,EAAXC,MAC5BpF,EAAM6D,QAAQ,CAACxC,KAAMyC,EAAOzC,OAG5BgE,WAAW,kBAAMf,EAAKV,YAAYE,MAEtCwB,cACIC,KAAeC,eAAexF,EAAMsF,eAExCG,sBACI,SAAC3B,EAAD4B,GAAqC,IAA3BC,EAA2BD,EAA3BC,SAAUC,EAAiBF,EAAjBE,YAChB,GAAKD,EAASE,eAAd,CAIA,IAAIC,EAAM7D,EAAI8D,oBAADC,KAAaL,EAASE,iBACnCI,IAASC,OACLjG,EAAAC,EAAAC,cAACgG,EAAAjG,EAAD,CAAQS,QAAS,kBAAMmF,MAClBH,EAAStB,OAEhBuB,eA7FFQ,aAqGTrG,qBACX,CACIkD,UAAW1D,gBAAF8G,MACTC,KAAMP,oBAAFQ,MACJlF,KAAM9B,gBAAFiH,MACJ3C,QAASkC,oBAAFU,MACP3B,QAASiB,oBAAFW,MACP3C,SAAUgC,oBAAFY,OAEZC,sBAAY/E,isBC1CD9B,yBAAQ,CACnB8G,eAAgBtH,gBAAFuH,MACdC,eAAgBhB,oBAAFiB,MACdC,eAAgBlB,oBAAFmB,MACdC,cAAepB,oBAAFqB,MACbpD,MAAOzE,gBAAF8H,MACLlE,QAAS5D,gBAAF+H,OA5EX,SAAqBtH,GAAO,IAAAuH,EACHvH,EAAdwH,eADiB,IAAAD,EACT,GADSA,EAGlBE,EACFxH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACK,EAAAN,EAAD,KACID,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CACIc,QAAQ,KACRN,MAAM,UACNgH,MAAM,SACNC,UAAWH,EAAQI,KACnBC,QAAM,GALV,UAUJ5H,EAAAC,EAAAC,cAAC2H,GAAA5H,EAAD,MACAD,EAAAC,EAAAC,cAAC4H,GAAA7H,EAAD,KACKF,EAAMgE,MAAME,IAAI,SAAAT,EAAuBN,GAAvB,IAAEvB,EAAF6B,EAAE7B,KAAMyC,EAARZ,EAAQY,MAAOvE,EAAf2D,EAAe3D,MAAf,OACbG,EAAAC,EAAAC,cAAC6H,GAAA9H,EAAD,CACI+H,IAAKrG,EACLsG,QAAM,EACNC,SAAUhF,IAAYnD,EAAMmD,QAC5BwE,UAAW7H,EAAQ,WAAa,gBAChCa,QAAS,kBAAIX,EAAMmH,cAAc,CAAChE,cAClClD,EAAAC,EAAAC,cAACiI,GAAAlI,EAAD,KACKJ,EAAQG,EAAAC,EAAAC,cAACkI,GAAAnI,EAAD,CAAaQ,MAAM,UAAYT,EAAAC,EAAAC,cAACmI,GAAApI,EAAD,OAE5CD,EAAAC,EAAAC,cAACoI,GAAArI,EAAD,CACIoC,QAAS+B,EACT3B,UAAW5C,EAAQ,aAAe,WAClC0I,yBAA0B,CACtB9H,MAAOZ,EAAQ,QAAU,wBASrD,OACIG,EAAAC,EAAAC,cAAA,OAAKwH,UAAWH,EAAQiB,QACpBxI,EAAAC,EAAAC,cAACuI,GAAAxI,EAADsE,OAAAG,OAAA,GAAY3E,EAAM2I,YAAlB,CAA+BC,eAAe,OAC1C3I,EAAAC,EAAAC,cAAC0I,GAAA3I,EAAD,CACII,KAAMN,EAAM6G,eACZiC,OAAQ,kBAAI9I,EAAM+G,kBAClBnG,QAAS,kBAAIZ,EAAMiH,kBACnBO,QAAS,CACL3E,MAAO2E,EAAQuB,cAGlBtB,IAGTxH,EAAAC,EAAAC,cAACuI,GAAAxI,EAADsE,OAAAG,OAAA,GAAY3E,EAAMgJ,YAAlB,CAA+BJ,eAAe,OAC1C3I,EAAAC,EAAAC,cAAC8I,GAAA/I,EAAD,CACIc,QAAQ,YACRV,MAAI,EACJkH,QAAS,CACL3E,MAAO2E,EAAQuB,cAGlBtB,6WCvCN1H,yBAAQ,CACnBO,KAAMf,gBAAF2J,MACJC,WAAY5J,gBAAF6J,MACVC,QAAStD,oBAAFuD,OAhCX,SAA6BtJ,GACzB,IAAMuJ,EAAcvJ,EAAMqJ,QAC1B,OACIpJ,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACII,KAAMN,EAAMM,KACZM,QAAS2I,EACTC,kBAAgB,qBAChBC,mBAAiB,4BAEjBxJ,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayJ,GAAG,sBAAhB,mCAGA1J,EAAAC,EAAAC,cAACyJ,GAAA1J,EAAD,KACID,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAmByJ,GAAG,4BACjB,oCACD1J,EAAAC,EAAAC,cAAC2J,GAAA5J,EAAD,CAAM6J,KAAM/J,EAAMmJ,YAAlB,WAKRlJ,EAAAC,EAAAC,cAAC6J,GAAA9J,EAAD,KACID,EAAAC,EAAAC,cAACgG,EAAAjG,EAAD,CAAQS,QAAS4I,EAAa7I,MAAM,UAAUuJ,WAAS,GAAvD,yYCMDlK,yBAAQ,CACnBO,KAAMf,gBAAF2K,MACJC,SAAUpE,oBAAFqE,MACRC,cAAetE,oBAAFuE,MACbC,WAAYxE,oBAAFyE,OAnCd,SAAqBxK,GACjB,IAAIkI,EACAjI,EAAAC,EAAAC,cAACgG,EAAAjG,EAAD,CACIuK,YAAU,aACVC,gBAAc,OACd/J,QAAS,kBAAMX,EAAMmK,SAAS,CAAC7J,MAAM,KACrCI,MAAM,WAELiK,WAGT,OACI1K,EAAAC,EAAAC,cAAA,WACK+H,EACDjI,EAAAC,EAAAC,cAACyK,GAAA1K,EAAD,CACIyJ,GAAG,aAEHrJ,KAAMN,EAAMM,OAAQ,EACpBM,QAAS,kBAAMZ,EAAMmK,SAAS,CAAC7J,MAAM,MAErCL,EAAAC,EAAAC,cAAC0K,GAAA3K,EAAD,CAAUS,QAAS,kBAAMX,EAAMqK,kBAA/B,gBAGApK,EAAAC,EAAAC,cAAC0K,GAAA3K,EAAD,CAAUS,QAAS,kBAAMX,EAAMuK,eAA/B,01DCDhB,IAAMO,GAASC,IAAYC,MAAMzM,OAAOC,SAASyM,QAI3C9I,GAAQ+I,yBAAe,CACzBC,WAAY,CACRC,iBAAiB,GAErBlJ,QAAS,CACLmJ,KAAMP,GAAO3I,OAAS,OACtBG,QAASgJ,QAuDjB/M,OAAOgN,iBAAiB,sBAAuB,SAACC,GAE5CA,EAAEC,sBAGqBpI,IAAnByH,GAAOY,SACPF,EAAEG,eAIJC,gMAEE7J,KAAK/B,MAAMsG,wCAGN,IACAtG,EAAS+B,KAAT/B,MACEwH,EAAWxH,EAAXwH,QAEP,OACIvH,EAAAC,EAAAC,cAAC0L,EAAA,iBAAD,CAAkB1J,MAAOA,IACzBlC,EAAAC,EAAAC,cAACF,EAAAC,EAAM4L,SAAP,KACA7L,EAAAC,EAAAC,cAAC4L,EAAA7L,EAAD,MACAD,EAAAC,EAAAC,cAAA,OAAKwH,UAAWH,EAAQwE,MACpB/L,EAAAC,EAAAC,cAAC8L,GAAD,CACIzE,QAASA,EAETmB,YAAa,CAACuD,MAAM,GAEpBlD,YAAa,CAACmD,QAAQ,KAE1BlM,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAQkM,SAAS,QAAQzE,UAAWH,EAAQ6E,QACxCpM,EAAAC,EAAAC,cAACK,EAAAN,EAAD,UACsBmD,IAAjByH,GAAOwB,OAEJrM,EAAAC,EAAAC,cAACoM,GAAD,MAEJtM,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CACIyH,UAAWH,EAAQgF,WACnB9L,MAAM,UACNC,QAAS,kBAAMX,EAAM+G,kBACrBlG,aAAW,SACXZ,EAAAC,EAAAC,cAACsM,EAAAvM,EAAD,OAGJD,EAAAC,EAAAC,cAACgG,EAAAjG,EAAD,CACIQ,MAAM,UACNgM,SAAU1M,EAAMgE,MAAM2I,KAAK,SAAAxI,GAAI,OAAIA,EAAKrE,QACxCa,QAAS,kBAAMX,EAAM4M,WAHzB,SAKI3M,EAAAC,EAAAC,cAAC0M,EAAA3M,EAAD,OAEJD,EAAAC,EAAAC,cAAA,OAAKwH,UAAWH,EAAQI,OACxB3H,EAAAC,EAAAC,cAAA,OAAKwH,UAAU,YAAYmF,aAAW,WAG9C7M,EAAAC,EAAAC,cAAC4M,EAAD,CACIzM,KAAMN,EAAMgN,qBACZpM,QAASZ,EAAMiN,qBAEnBhN,EAAAC,EAAAC,cAAC4M,EAAD,CACIzM,KAAMN,EAAMkN,sBACZtM,QAASZ,EAAMmN,sBAEnBlN,EAAAC,EAAAC,cAACiN,GAAD,MACAnN,EAAAC,EAAAC,cAAA,QAAMwH,UAAWH,EAAQ6F,SACrBpN,EAAAC,EAAAC,cAAA,OAAKwH,UAAWH,EAAQ8F,UACxBrN,EAAAC,EAAAC,cAACoN,GAAD,CACIC,kBAAoCnK,IAAtByH,GAAO2C,WACrBnI,cACKrF,EAAAC,EAAAC,cAAA,yBAELuN,WAAY,SAAAjK,KAAEpC,KAAF,OAAYrB,EAAMqK,mBAElCpK,EAAAC,EAAAC,cAAA,OAAKwH,UAAWH,EAAQ8F,WAE5BrN,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAQkM,SAAS,QAAQzE,UAAWH,EAAQmG,WACxC1N,EAAAC,EAAAC,cAACyN,EAAA1N,EAAD,CACI2N,MAAO7N,EAAMgE,MAAM8J,OACnB1B,SAAS,SACT2B,WAAY/N,EAAMmD,QAClBwE,UAAWH,EAAQwG,cACnBC,WACIhO,EAAAC,EAAAC,cAACgG,EAAAjG,EAAD,CACIQ,MAAM,UACNgM,SAAU1M,EAAMmD,UAAYnD,EAAMgE,MAAM8J,OAAS,EACjDnN,QAAS,kBAAMX,EAAMkO,eAHzB,OAKIjO,EAAAC,EAAAC,cAACgO,EAAAjO,EAAD,OAGRkO,WACInO,EAAAC,EAAAC,cAACgG,EAAAjG,EAAD,CACIQ,MAAM,UACNgM,SAA4B,IAAlB1M,EAAMmD,QAChBxC,QAAS,kBAAMX,EAAMqO,mBACrBpO,EAAAC,EAAAC,cAACmO,EAAApO,EAAD,MAJJ,yBAlFVkG,aAmGHrG,qBAAQ,CACnB8G,eAAgBtH,gBAAFgP,MACdxH,eAAgBhB,oBAAFyI,MACdvH,eAAgBlB,oBAAF0I,MACdtH,cAAepB,oBAAF2I,MACb1K,MAAOzE,gBAAFoP,MACLxL,QAAS5D,gBAAFqP,MACPV,WAAYnI,oBAAF8I,MACVR,eAAgBtI,oBAAF+I,MACdlC,OAAQ7G,oBAAFgJ,MACN9L,UAAW1D,gBAAFyP,MACThC,qBAAsBzN,gBAAF0P,MACpB/B,sBAAuB3N,gBAAF2P,MACrBC,mBAAoBpJ,oBAAFqJ,MAClBC,oBAAqBtJ,oBAAFuJ,MACnBrC,mBAAoBlH,oBAAFwJ,MAClBpC,oBAAqBpH,oBAAFyJ,MACnBlJ,KAAMP,oBAAF0J,MACJC,MAAO3J,oBAAF4J,MACLC,OAAQ7J,oBAAF8J,MACNC,OAAQvQ,gBAAFwQ,MACNC,YAAajK,oBAAFkK,MACX5F,cAAetE,oBAAFmK,OACdC,qBAtLY,SAAChO,GAAD,MAAY,CACvB6J,KAAM,CACFoE,QAAS,OACTC,WAAY,SACZC,eAAgB,UAEpBjD,QAAS,CACLkD,UAAW,SACXC,SAAU,EACVC,UAAW,SACXC,SAAU,KAEdrE,OAAO7H,OAAAmM,EAAA,EAAAnM,CAAA,CACHoM,IAAK,EACLC,OAAQ,OACRC,WAhBY,KAiBX3O,EAAM4O,YAAYC,GAAG,MAAQ,CAC1B7P,MAAK,eAAA8P,OAlBG,IAkBH,SAGb3D,QAASnL,EAAM+O,OAAO5D,QACtBK,UAAUnJ,OAAAmM,EAAA,EAAAnM,CAAA,CACNqM,OAAQ,EACRD,IAAK,OACLE,WAzBY,KA0BX3O,EAAM4O,YAAYC,GAAG,MAAQ,CAC1B7P,MAAK,eAAA8P,OA3BG,IA2BH,SAGbrJ,KAAM,CACF4I,SAAU,GAEdhE,WAAWhI,OAAAmM,EAAA,EAAAnM,CAAA,CACPsM,YAAa,GACbK,YAAa,IACZhP,EAAM4O,YAAYC,GAAG,MAAQ,CAC5BZ,QAAS,SAGf3H,OAAOjE,OAAAmM,EAAA,EAAAnM,CAAA,GACFrC,EAAM4O,YAAYC,GAAG,MAAQ,CAC1B7P,MA1CQ,IA2CRiQ,WAAY,IAGpBrI,YAAa,CACT5H,MA/CY,OAuLjBgP,CAAmBvE,6yBC7NP,ICwDXyF,GACAC,sGC7DSC,GAAb,SAAAC,GACI,SAAAD,EAAYE,GAAS,IAAA3P,EAAA,OAAA0C,OAAAkN,EAAA,EAAAlN,CAAAzC,KAAAwP,IACjBzP,EAAA0C,OAAAmN,EAAA,EAAAnN,CAAAzC,KAAAyC,OAAAoN,EAAA,EAAApN,CAAA+M,GAAAM,KAAA9P,KAAM0P,KACD7P,KAAO,mBAFKE,EADzB,OAAA0C,OAAAsN,EAAA,EAAAtN,CAAA+M,EAAAC,GAAAD,EAAA,CAAsCQ,iBAOzBC,GAAb,SAAAC,GACI,SAAAD,EAAYE,GAAK,IAAA5N,EAAAE,OAAAkN,EAAA,EAAAlN,CAAAzC,KAAAiQ,GAEb,IAAIlS,EAAQoS,EAFC,OAGTA,EAAIC,QAAUrS,EAAMqS,OAAOrS,QAC3BA,EAAQoS,EAAIC,OAAOrS,QAGvBwE,EAAAE,OAAAmN,EAAA,EAAAnN,CAAAzC,KAAAyC,OAAAoN,EAAA,EAAApN,CAAAwN,GAAAH,KAAA9P,KAAMjC,EAAM2R,WACP7P,KAAO,YACZ0C,EAAK6N,OAASrS,EATDwE,EADrB,OAAAE,OAAAsN,EAAA,EAAAtN,CAAAwN,EAAAC,GAAAD,EAAA,CAA+BD,iBAclBK,GAAb,SAAAC,GACI,SAAAD,EAAYE,EAAGC,EAAGL,GAAK,IAAAM,EAAA,OAAAhO,OAAAkN,EAAA,EAAAlN,CAAAzC,KAAAqQ,IACnBI,EAAAhO,OAAAmN,EAAA,EAAAnN,CAAAzC,KAAAyC,OAAAoN,EAAA,EAAApN,CAAA4N,GAAAP,KAAA9P,KAAA,6BAAAkP,OAAmCsB,EAAnC,aAAAtB,OAAgDqB,EAAhD,MAAArB,OAAsDiB,EAAIT,YACrD7P,KAAO,mBACZ4Q,EAAKN,IAAMA,EAHQM,EAD3B,OAAAhO,OAAAsN,EAAA,EAAAtN,CAAA4N,EAAAC,GAAAD,EAAA,CAAoCL,iBAQvBU,GAAb,SAAAC,GACI,SAAAD,EAAYH,EAAGC,EAAGL,GAAK,IAAAS,EAAA,OAAAnO,OAAAkN,EAAA,EAAAlN,CAAAzC,KAAA0Q,IACnBE,EAAAnO,OAAAmN,EAAA,EAAAnN,CAAAzC,KAAAyC,OAAAoN,EAAA,EAAApN,CAAAiO,GAAAZ,KAAA9P,KAAA,+BAAAkP,OAAqCsB,EAArC,aAAAtB,OAAkDqB,EAAlD,MAAArB,OAAwDiB,EAAIT,YACvD7P,KAAO,mBACZ+Q,EAAKT,IAAMA,EAHQS,EAD3B,OAAAnO,OAAAsN,EAAA,EAAAtN,CAAAiO,EAAAC,GAAAD,EAAA,CAAsCV,iBDvBzBa,GAAc,CACjBC,cADiB,eAAAC,EAAAtO,OAAAuO,GAAA,EAAAvO,CAAAwO,GAAA9S,EAAA+S,KAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAH,GAAA9S,EAAAkT,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGF,IAAIC,KAAQ,SAACC,EAASC,GAAV,OACjB5U,UAAU8T,YAAYe,mBAAmBF,EAASC,KACrDzU,KAAK,SAAA2U,GAAG,OAAIA,EAAIC,SALN,cAAAR,EAAAS,OAAA,SAAAT,EAAAU,MAAA,OAAAV,EAAAC,KAAA,EAAAD,EAAAW,GAAAX,EAAA,SAAAA,EAAAY,GASPZ,EAAAW,GAAIE,KATGb,EAAAE,KAUN,IAVMF,EAAAY,GAAA,GAaN,IAbMZ,EAAAY,GAAA,GAgBN,IAhBMZ,EAAAY,GAAA,2BAWPd,EAAM,oBAXCE,EAAAS,OAAA,2BAcPX,EAAM,uBAdCE,EAAAS,OAAA,2BAiBPX,EAAM,6BAjBCE,EAAAS,OAAA,oBAoBPX,EAAM,gBApBC,cAuBT,IAAIgB,GAAwBhB,GAvBnB,yBAAAE,EAAAe,SAAAlB,EAAAnR,KAAA,qCAAA+Q,EAAAuB,MAAAtS,KAAAuS,YAAA,IA4BdxQ,GAAS,CAClByQ,UADkB,SACR3S,EAAMwD,GACZ5D,GAAMA,MAAMgT,SAAS5S,EAAMwD,IAG/BN,QALkB,SAKV2P,GACJjT,GAAMA,MAAM8B,cAAgBmR,GAGhCC,SATkB,WAUd,OAAOlT,GAAMA,MAAMkT,YAGvBC,aAbkB,WAcd,OAAOnT,GAAMA,MAAMoT,YAGvB/Q,QAjBkB,SAiBVxC,GACJG,GAAMA,MAAMH,KAAOA,GAGvBuL,OArBkB,WAsBd,OAAOpL,GAAMA,MAAMqT,qBAMdC,GAAa,CAEhBxO,KAFgB,eAAAyO,EAAAvQ,OAAAuO,GAAA,EAAAvO,CAAAwO,GAAA9S,EAAA+S,KAAA,SAAA+B,EAAAvR,GAAA,IAAAiM,EAAAE,EAAA9N,EAAAC,KAAA,OAAAiR,GAAA9S,EAAAkT,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cAEV7D,EAFUjM,EAEViM,MAAOE,EAFGnM,EAEHmM,OACf0B,GAAOkC,KAAQC,QAAQyB,QAElBC,IAAI,SAAAxR,GAAA,IAAEyR,EAAFzR,EAAEyR,KAAF,OAAY,IAAI5B,KAAQ,SAACC,EAASC,GAAV,OAAqB0B,EAAK,SAAU,CAC7DC,SAAU5B,EACV6B,QAAS5B,EACT6B,QAAS,IACTC,UAAW9B,QAGdyB,IAAI,SAAAhQ,GAAA,OAAAA,EAAEkM,OAAmB/K,KAAK,CAC3BmP,cAAe,CACX,6DACA,gEAIPN,IAAI,SAAAzP,GAAa,IACVgQ,EADUhQ,EAAXiQ,MACcC,kBACbC,EAAW,SAAAC,GACNA,EAIDpG,GAAS5N,EAAKiU,QAAQ9T,IAAIyN,EAAjB5N,IAHTuP,QAAShO,EACTuM,GAAU9N,EAAKiU,QAAQ9T,IAAI2N,EAAjB9N,KAMlB4T,EAAKM,WAAWC,OAAOJ,GACvBA,EAASH,EAAKM,WAAW/T,SA/BfgT,EAAA1B,KAAA,EAiCZjC,GAjCY,wBAAA2D,EAAAb,SAAAY,EAAAjT,SAAA,gBAAAmU,GAAA,OAAAnB,EAAAV,MAAAtS,KAAAuS,YAAA,GAoChBrS,IApCgB,eAAAkU,EAAA3R,OAAAuO,GAAA,EAAAvO,CAAAwO,GAAA9S,EAAA+S,KAAA,SAAAmD,IAAA,OAAApD,GAAA9S,EAAAkT,KAAA,SAAAiD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,WAqCdlC,GArCc,CAAAgF,EAAA9C,KAAA,eAAA8C,EAAAvC,OAAA,SAsCPzC,IAtCO,cAAAgF,EAAA9C,KAAA,EAyCHjC,GAEV6D,IAAI,SAAAmB,GAAa,IAAXX,EAAWW,EAAXX,MACGY,EAAS,CACXC,MAAO,CACH,6CACA,iDACFC,OAAO,SAACvW,EAAGwW,GAAJ,SAAAzF,OAAa/Q,EAAb,KAAA+Q,OAAkByF,MAI/B,OAFWf,EAAMC,kBAELe,YAAY1U,MAAM2U,MAAML,KAEvCtU,IAAI,UAtDS,cAyClBoP,GAzCkBgF,EAAAtC,KAAAsC,EAAAvC,OAAA,SAwDXzC,IAxDW,wBAAAgF,EAAAjC,SAAAgC,EAAArU,SAAA,yBAAAoU,EAAA9B,MAAAtS,KAAAuS,YAAA,GA2DhB/J,WA3DgB,eAAAsM,EAAArS,OAAAuO,GAAA,EAAAvO,CAAAwO,GAAA9S,EAAA+S,KAAA,SAAA6D,IAAA,OAAA9D,GAAA9S,EAAAkT,KAAA,SAAA2D,GAAA,cAAAA,EAAAzD,KAAAyD,EAAAxD,MAAA,cAAAwD,EAAAxD,KAAA,EA4DXjC,GA5DW,OAAAyF,EAAAhD,KA4DL4B,MAAMC,kBAAkBe,YAAY1U,MAAMsI,aA5DrC,wBAAAwM,EAAA3C,SAAA0C,EAAA/U,SAAA,yBAAA8U,EAAAxC,MAAAtS,KAAAuS,YAAA,IA+Db0C,GAAgB,CACnBC,QADmB,eAAAC,EAAA1S,OAAAuO,GAAA,EAAAvO,CAAAwO,GAAA9S,EAAA+S,KAAA,SAAAkE,IAAA,IAAAC,EAAAC,EAAAlF,EAAAmF,EAAA,OAAAtE,GAAA9S,EAAAkT,KAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAAhE,MAAA,cAAAgE,EAAAhE,KAAA,EAEDxR,KAAKgU,QAAQjB,WAAW7S,MAFvB,cAAAmV,EAAAG,EAAAxD,KAEhBsD,EAFgBD,EAEhBC,MAFgBE,EAAAjE,KAAA,EAAAiE,EAAAhE,KAAA,EAMC8D,EAAMG,MAAMC,KAAK,CAC/BC,OAAQ,gBACRC,EAAG,qBACHC,OAAQ,6BATK,OAAAN,EAAAC,EAAAxD,KAMf5B,EANemF,EAMfnF,OANeoF,EAAAhE,KAAA,uBAAAgE,EAAAjE,KAAA,GAAAiE,EAAAvD,GAAAuD,EAAA,SAYX,IAAIpD,GAAJoD,EAAAvD,IAZW,eAAAuD,EAAAzD,OAAA,SAed3B,EAAOqF,MAAM,GAAGK,eAfF,yBAAAN,EAAAnD,SAAA+C,EAAApV,KAAA,sCAAAmV,EAAA7C,MAAAtS,KAAAuS,YAAA,GAkBnBwD,SAlBmB,eAAAC,EAAAvT,OAAAuO,GAAA,EAAAvO,CAAAwO,GAAA9S,EAAA+S,KAAA,SAAA+E,EAAAC,GAAA,IAAAC,EAAAC,EAAAC,EAAAf,EAAAgB,EAAAlG,EAAA,OAAAa,GAAA9S,EAAAkT,KAAA,SAAAkF,GAAA,cAAAA,EAAAhF,KAAAgF,EAAA/E,MAAA,cAAA2E,EAAAD,EAkBTE,YAlBS,IAAAD,EAkBF,GAlBEA,EAAAI,EAAA/E,KAAA,EAmBDxR,KAAKgU,QAAQjB,WAAW7S,MAnBvB,cAAAmW,EAAAE,EAAAvE,KAmBhBsD,EAnBgBe,EAmBhBf,MAnBgBiB,EAAAhF,KAAA,EAAAgF,EAAA/E,KAAA,EAsBI8D,EAAMG,MAAMe,OAAO,CACpCC,SAAU,CACN5W,KAAM,cACN6W,SAAU,mBACVC,QAAS,CAAC,iBACVb,cAAeM,KA3BN,cAAAE,EAAAC,EAAAvE,KAsBZ5B,EAtBYkG,EAsBZlG,OAtBYmG,EAAAxE,OAAA,SA8BV3B,GA9BU,cAAAmG,EAAAhF,KAAA,GAAAgF,EAAAtE,GAAAsE,EAAA,SAgCX,IAAInE,GAAJmE,EAAAtE,IAhCW,yBAAAsE,EAAAlE,SAAA4D,EAAAjW,KAAA,6BAAA4W,GAAA,OAAAZ,EAAA1D,MAAAtS,KAAAuS,YAAA,IAoChBsE,GAAe,CAClB5I,YADkB,eAAA6I,EAAArU,OAAAuO,GAAA,EAAAvO,CAAAwO,GAAA9S,EAAA+S,KAAA,SAAA6F,IAAA,IAAAC,EAAAC,EAAAC,EAAA9G,EAAA,OAAAa,GAAA9S,EAAAkT,KAAA,SAAA8F,GAAA,cAAAA,EAAA5F,KAAA4F,EAAA3F,MAAA,cAAA2F,EAAA3F,KAAA,EAECxR,KAAKgU,QAAQjB,WAAW7S,MAFzB,cAAA8W,EAAAG,EAAAnF,KAEfiF,EAFeD,EAEfC,OAFeE,EAAA5F,KAAA,EAAA4F,EAAA3F,KAAA,EAKKyF,EAAOG,aAAaZ,OAAO,GAAI,IALpC,cAAAU,EAAAC,EAAAnF,KAKX5B,EALW8G,EAKX9G,OALW+G,EAAApF,OAAA,SAMT3B,GANS,cAAA+G,EAAA5F,KAAA,GAAA4F,EAAAlF,GAAAkF,EAAA,SAQV,IAAI/E,GAAJ+E,EAAAlF,IARU,yBAAAkF,EAAA9E,SAAA0E,EAAA/W,KAAA,sCAAA8W,EAAAxE,MAAAtS,KAAAuS,YAAA,GAYlB8E,SAZkB,eAAAC,EAAA7U,OAAAuO,GAAA,EAAAvO,CAAAwO,GAAA9S,EAAA+S,KAAA,SAAAqG,EAYT3P,GAZS,IAAA4P,EAAAP,EAAA7G,EAAAqH,EAAAC,EAAA,OAAAzG,GAAA9S,EAAAkT,KAAA,SAAAsG,GAAA,cAAAA,EAAApG,KAAAoG,EAAAnG,MAAA,cAAAmG,EAAAnG,KAAA,EAaCxR,KAAKgU,QAAQjB,WAAW7S,MAbzB,cAAAsX,EAAAG,EAAA3F,KAafiF,EAbeO,EAafP,OAbeU,EAAApG,KAAA,EAAAoG,EAAAnG,KAAA,EAiBEyF,EAAOG,aAAaQ,OAAO1X,IAAI,CAC7C2X,cAAejQ,EACfkQ,MAAO,CAAC,YAnBI,OAAAL,EAAAE,EAAA3F,KAiBd5B,EAjBcqH,EAiBdrH,OAjBcuH,EAAAnG,KAAA,uBAAAmG,EAAApG,KAAA,GAAAoG,EAAA1F,GAAA0F,EAAA,SAsBV,IAAIvF,GAAJuF,EAAA1F,IAtBU,WAyBf7B,EAAOwH,OAzBQ,CAAAD,EAAAnG,KAAA,gBAAAmG,EAAA5F,OAAA,SA0BT,IA1BS,eA6BhB2F,EAAQK,KAAKC,MAAMC,aAAa7H,EAAOwH,QA7BvBD,EAAA5F,OAAA,SA8BbgG,KAAKC,MAAME,cAAcR,IA9BZ,yBAAAC,EAAAtF,SAAAkF,EAAAvX,KAAA,6BAAAmY,GAAA,OAAAb,EAAAhF,MAAAtS,KAAAuS,YAAA,GAiClB6F,WAjCkB,eAAAC,EAAA5V,OAAAuO,GAAA,EAAAvO,CAAAwO,GAAA9S,EAAA+S,KAAA,SAAAoH,EAiCP1Q,EAAItI,GAjCG,IAAAiZ,EAAAC,EAAAvB,EAAAS,EAAAE,EAAAa,EAAArI,EAAAsI,EAAA,OAAAzH,GAAA9S,EAAAkT,KAAA,SAAAsH,GAAA,cAAAA,EAAApH,KAAAoH,EAAAnH,MAAA,cAkCd+G,EAAY,uCAlCEI,EAAAnH,KAAA,EAmCCxR,KAAKgU,QAAQjB,WAAW7S,MAnCzB,cAAAsY,EAAAG,EAAA3G,KAmCfiF,EAnCeuB,EAmCfvB,OAGDS,EAAQK,KAAKC,MAAMY,cAActZ,GACjCsY,EAASG,KAAKC,MAAME,cAAcR,EAAO,CAACmB,OAAQ,IAvClCF,EAAApH,KAAA,EAAAoH,EAAAnH,KAAA,GA0CKyF,EAAOG,aAAaQ,OAAOkB,OAAO,CACnDjB,cAAejQ,EACfkQ,MAAOJ,EAAM,QACbqB,iBAAkB,eAClBC,yBAAyB,GAC1B,CACCC,eAAgB,OAChBrB,WAjDY,eAAAa,EAAAE,EAAA3G,KA0CX5B,EA1CWqI,EA0CXrI,OASDsI,EAAMpZ,EAAKyM,OAAS,EAnDR4M,EAAA5G,OAAA,SAAAtP,OAAAyW,GAAA,EAAAzW,CAAA,GAqDT2N,EArDS,CAuDZhJ,WAAU,GAAA8H,OAAKqJ,EAAL,OAAArJ,OAAoBtH,EAApB,iBAAAsH,OAAsCwJ,EAAtC,KAAAxJ,OAA6CwJ,MAvD3C,cAAAC,EAAApH,KAAA,GAAAoH,EAAA1G,GAAA0G,EAAA,SA0DV,IAAIvG,GAAJuG,EAAA1G,IA1DU,yBAAA0G,EAAAtG,SAAAiG,EAAAtY,KAAA,6BAAAmZ,EAAAC,GAAA,OAAAf,EAAA/F,MAAAtS,KAAAuS,YAAA,GA8DlB8G,OA9DkB,eAAAC,EAAA7W,OAAAuO,GAAA,EAAAvO,CAAAwO,GAAA9S,EAAA+S,KAAA,SAAAqI,EA8DX3R,EAAI4R,EAAMd,GA9DC,IAAAe,EAAAxC,EAAA,OAAAhG,GAAA9S,EAAAkT,KAAA,SAAAqI,GAAA,cAAAA,EAAAnI,KAAAmI,EAAAlI,MAAA,cAAAkI,EAAAlI,KAAA,EA+DCxR,KAAKgU,QAAQjB,WAAW7S,MA/DzB,cAAAuZ,EAAAC,EAAA1H,KA+DfiF,EA/DewC,EA+DfxC,OA/DeyC,EAAA3H,OAAA,SAiEbkF,EAAOG,aAAaQ,OAAO+B,OAAO,CACrC9B,cAAejQ,EACfmR,iBAAkB,eAClBa,iBAAkB,cAClBZ,yBAAyB,GAC1B,CACCC,eAAgB,OAChBrB,OAAQ,CAACc,MAxEO,wBAAAgB,EAAArH,SAAAkH,EAAAvZ,SAAA,gBAAA6Z,EAAAC,EAAAC,GAAA,OAAAT,EAAAhH,MAAAtS,KAAAuS,YAAA,IA8EfyH,GAAY,CACrBA,UADqB,SACX1a,GACN,OAAOA,EAAK6C,IAAI,SAACiO,EAAQ6J,GACrB,IAAIC,EAAa,GAejB,OAdAzX,OAAO0X,KAAK/J,GAAQgK,QAAQ,SAAAlU,GACxB,IACI,GAA2B,kBAAhBkK,EAAOlK,IACd,GAAIkK,EAAOlK,GAEPgU,EADW,KAAOhU,GACCmU,KAAKC,UAAUlK,EAAOlK,SAG7CgU,EAAWhU,GAAOkK,EAAOlK,GAE/B,MAAOiK,GACL,MAAM,IAAIiC,GAAsB6H,EAAG/T,EAAKiK,MAGzC+J,KAIfK,YAtBqB,SAsBTjb,GACR,OAAOA,EAAK6C,IAAI,SAACiO,EAAQ6J,GACrB,IAAIO,EAAe,GAgBnB,OAfA/X,OAAO0X,KAAK/J,GAAQgK,QAAQ,SAAAlU,GACxB,IACI,GAAIA,EAAIuU,WAAW,OACf,GAAIrK,EAAOlK,GAAM,CACb,IAAIwU,EAAOxU,EAAIyU,UAAU,GACzBH,EAAaE,GAAQL,KAAKpR,MAAMmH,EAAOlK,UAG3CsU,EAAatU,GAAOkK,EAAOlK,GAEjC,MAAOiK,GAEL,MAAM,IAAIiC,GAAwB6H,EAAI,EAAG/T,EAAKiK,MAG/CqK,MElRZ,SAAShI,GAATpP,GAAoC,IAAhBrB,EAAgBqB,EAAhBrB,OAAQ9D,EAAQmF,EAARnF,MAC/B,OAAO8D,EAAOyQ,UAAUvU,EAAM2F,SAAU3F,EAAM2c,uDAkB3C,SAAAzJ,EAAAkF,GAAA,IAAAtD,EAAA9U,EAAA,OAAAgT,GAAA9S,EAAAkT,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAyBuB,EAAzBsD,EAAyBtD,WAAY9U,EAArCoY,EAAqCpY,MAArCqT,EAAAS,OAAA,SACIgB,EAAWxO,KAAKtG,IADpB,wBAAAqT,EAAAe,SAAAlB,EAAAnR,+EAGA,SAAAiT,EAAAqD,GAAA,IAAAvD,EAAA,OAAA9B,GAAA9S,EAAAkT,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cAA+BuB,EAA/BuD,EAA+BvD,WAA/BG,EAAAnB,OAAA,SACIgB,EAAWvK,cADf,wBAAA0K,EAAAb,SAAAY,EAAAjT,gCAGA,SAAeiO,GAAtBkK,GAAA,OAAA0C,GAAAvI,MAAAtS,KAAAuS,0DAAO,SAAA8B,EAAA2C,GAAA,IAAAH,EAAAa,EAAA,OAAAzG,GAAA9S,EAAAkT,KAAA,SAAAiD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,cAA4BqF,EAA5BG,EAA4BH,aAA5BvC,EAAA9C,KAAA,EACeqF,EAAa5I,cAD5B,cACCyJ,EADDpD,EAAAtC,KAAAsC,EAAAvC,OAAA,SAEI,CAAC2F,UAFL,wBAAApD,EAAAjC,SAAAgC,EAAArU,+EAQA,SAAAoV,EAAAoC,GAAA,IAAAwC,EAAA/b,EAAA6c,EAAA,OAAA7J,GAAA9S,EAAAkT,KAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAAhE,MAAA,cAAiCwI,EAAjCxC,EAAiCwC,UAAW/b,EAA5CuZ,EAA4CvZ,MAC1C6c,EAAW7c,EAAX6c,QADFtF,EAAAzD,OAAA,SAGI,CAAC+I,QAASd,EAAUA,UAAUc,KAHlC,wBAAAtF,EAAAnD,SAAA+C,EAAApV,+EAKA,SAAAiW,EAAAwB,GAAA,IAAAuC,EAAA/b,EAAA6c,EAAA,OAAA7J,GAAA9S,EAAAkT,KAAA,SAAAkF,GAAA,cAAAA,EAAAhF,KAAAgF,EAAA/E,MAAA,cAAmCwI,EAAnCvC,EAAmCuC,UAAW/b,EAA9CwZ,EAA8CxZ,MAC5C6c,EAAW7c,EAAX6c,QADFvE,EAAAxE,OAAA,SAGI,CAAC+I,QAASd,EAAUO,YAAYO,KAHpC,wBAAAvE,EAAAlE,SAAA4D,EAAAjW,+EAKA,SAAA+W,EAAAyB,GAAA,IAAA3B,EAAA5Y,EAAA8c,EAAAD,EAAA,OAAA7J,GAAA9S,EAAAkT,KAAA,SAAA8F,GAAA,cAAAA,EAAA5F,KAAA4F,EAAA3F,MAAA,cAAgCqF,EAAhC2B,EAAgC3B,aAAc5Y,EAA9Cua,EAA8Cva,MAC5C8c,EAAa9c,EAAb8c,UADF5D,EAAA3F,KAAA,EAGkBqF,EAAaQ,SAAS0D,GAHxC,UAAA5D,EAAAlF,GAAAkF,EAAAnF,KAAAmF,EAAAlF,GAAA,CAAAkF,EAAA3F,KAAA,QAAA2F,EAAAlF,GAGuD,GAHvD,cAGC6I,EAHD3D,EAAAlF,GAAAkF,EAAApF,OAAA,SAKI,CAAC+I,YALL,wBAAA3D,EAAA9E,SAAA0E,EAAA/W,+EAOA,SAAAuX,EAAAkB,GAAA,IAAA5B,EAAA5Y,EAAA6c,EAAAC,EAAA,OAAA9J,GAAA9S,EAAAkT,KAAA,SAAAsG,GAAA,cAAAA,EAAApG,KAAAoG,EAAAnG,MAAA,cAA8BqF,EAA9B4B,EAA8B5B,aAAc5Y,EAA5Cwa,EAA4Cxa,MAC1C6c,EAAsB7c,EAAtB6c,QAASC,EAAa9c,EAAb8c,UADXpD,EAAA5F,OAAA,SAGI8E,EAAauB,WAAW2C,EAAWD,IAHvC,wBAAAnD,EAAAtF,SAAAkF,EAAAvX,+EAMA,SAAAsY,EAAAmB,GAAA,IAAAxE,EAAAhX,EAAAmS,EAAA,OAAAa,GAAA9S,EAAAkT,KAAA,SAAAsH,GAAA,cAAAA,EAAApH,KAAAoH,EAAAnH,MAAA,cAA8ByD,EAA9BwE,EAA8BxE,cAAehX,EAA7Cwb,EAA6Cxb,MAA7C0a,EAAAnH,KAAA,EACgByD,EAAcc,SAAS9X,GADvC,cACCmS,EADDuI,EAAA3G,KAAA2G,EAAA5G,OAAA,SAGI,CAAC3B,WAHL,wBAAAuI,EAAAtG,SAAAiG,EAAAtY,+EAKA,SAAAuZ,EAAAyB,GAAA,IAAA/F,EAAAgG,EAAA3b,EAAA,OAAA2R,GAAA9S,EAAAkT,KAAA,SAAAqI,GAAA,cAAAA,EAAAnI,KAAAmI,EAAAlI,MAAA,cAA4ByD,EAA5B+F,EAA4B/F,cAAegG,EAA3CD,EAA2CC,KAA3CvB,EAAAlI,KAAA,EACcyD,EAAcC,UAD5B,YACC5V,EADDoa,EAAA1H,MAAA,CAAA0H,EAAAlI,KAAA,eAAAkI,EAAA3H,OAAA,SAIQkJ,EAAKC,MAAM,CAAC9E,KAAM9W,KAJ1B,cAAAoa,EAAA3H,OAAA,SAMQkJ,EAAKE,YANb,wBAAAzB,EAAArH,SAAAkH,EAAAvZ,01HChEA,IJESob,GIFH7W,GAAO,CAChB8W,aAAIpd,gBAAAqd,MAActX,oBAAduX,OACJF,aAAIpd,gBAAAud,MAAexX,oBAAfyX,ODoBD,SAAPtH,GAAA,OAAAuH,GAAApJ,MAAAtS,KAAAuS,YClBI,SAAA7Q,GAAA,OAAWxB,EAAXwB,EAAExB,KAAa8D,oBAAA2X,MAAJzb,KAGFkN,GAAqB,CAACiO,aAAI7d,gBAAAoe,OAA6B,IACvD1Q,GAAqB,CAACmQ,aAAI7d,gBAAAqe,OAA6B,IACvDvO,GAAsB,CAAC+N,aAAI7d,gBAAAse,OAA8B,IACzD1Q,GAAsB,CAACiQ,aAAI7d,gBAAAue,OAA8B,IACzD/W,GAAiB,CAACqW,aAAI7d,gBAAAwe,OAAuB,IAC7C9W,GAAiB,CAACmW,aAAI7d,gBAAAye,OAAuB,IAE7CC,GAAgB,CAACb,aAAI7d,gBAAA2e,MAAmBle,gBAAnBme,QACrB5J,GAAY,CAAC6J,IACbjX,GAAgB,CACzBiW,aAAI7d,gBAAA8e,MAAgBre,gBAAhBse,QAEKva,GAAW,CAACqZ,aAAI7d,gBAAAgf,MAAcve,gBAAdwe,QAChBtQ,GAAa,CDRnB,SAAAkJ,GACH,MAAO,CAACtX,MADuBsX,EAATtT,OACA4Q,cCcbrG,GAAiB,CDZvB,SAAAiJ,GACH,MAAO,CAACxX,MAD2BwX,EAATxT,OACJ6Q,kBCkBb8J,GAAiB,CDhBvB,SAAAxG,GAAyC,IAAhBnU,EAAgBmU,EAAhBnU,OAC5B,OAD4CmU,EAARjY,MAC7B,CAAC0e,KAAM5a,EAAO8I,YCgBZ+R,GAAqB,CDrC3B,SAAAlb,GACH,OAD8CA,EAAdmP,YACbC,gBACd5T,KAAK,SAAA0E,GAAA,MAA4B,CAACib,WAAY,CAACC,SAA1Clb,EAAEkb,SAAkDC,UAApDnb,EAAYmb,eCqCtB1B,aAAIpd,gBAAA+e,MAAkBxf,gBAAlByf,OAEJ,SAAArb,GAAA,IAAE3D,EAAF2D,EAAE3D,MAAF,MAAc,CAACif,UAAWjf,EAAMif,UAAUhO,OAAOjR,EAAM4e,cACvDxB,aAAIpd,gBAAAkf,MAAiB,aACrB9B,aAAIpd,gBAAAmf,MAAenf,gBAAfof,OACJhB,IAGSiB,GAAc,CDmBpB,SAAPC,GAAA,OAAAC,GAAAlL,MAAAtS,KAAAuS,YCjBI,CACI2I,MAAO,GACPC,SAAU,CACNkB,GACAhB,aAAIpd,gBAADwf,MAAc,IACjBpC,aAAIpd,gBAADyf,MAAwBzf,gBAAxB0f,ODOR,SAAPC,GAAA,OAAAC,GAAAvL,MAAAtS,KAAAuS,cCHI8I,aAAI7d,gBAADsgB,MAAmB7f,gBAAnB8f,QAIMpQ,GAAQ,CACjB2P,GACAjC,aAAIpd,gBAAD+f,MAAmBxgB,gBAAnBygB,ODhBA,SAAPnE,GAAA,OAAAoE,GAAA5L,MAAAtS,KAAAuS,YALO,SAAPsH,GAAA,OAAAsE,GAAA7L,MAAAtS,KAAAuS,YCwBI8I,aAAI7d,gBAAD4gB,MAAkBngB,gBAAlBogB,OACHhD,aAAI7d,gBAAD8gB,OAAkB,IAGZzQ,GAAS,CAClBwN,aAAI7d,gBAAD+gB,OAAkB,GACrBlD,aAAI7d,gBAADghB,MAAkB,KAGZC,GAAmB,CDjDzB,SAAP7H,GAAA,OAAA8H,GAAApM,MAAAtS,KAAAuS,aCmDatE,GAAc,CAACoO,IACf/T,GAAgB,CACzBqW,aAAKnhB,gBAADohB,OACJ,CACIC,KAAM,GACNC,MAAOnR,IAEXoR,aAAKvhB,gBAADwhB,MAAkBxhB,gBAAlByhB,OACJ5D,aAAIpd,gBAADihB,MAAiB1hB,gBAAjB2hB,ODhDA,SAAP/F,GAAA,OAAAgG,GAAA9M,MAAAtS,KAAAuS,YCkDI8I,aAAIpd,gBAADohB,MAAmB7hB,gBAAnB8hB,ODjCA,SAAPvF,GAAA,OAAAwF,GAAAjN,MAAAtS,KAAAuS,YCmCI8I,aAAI7d,gBAADgiB,MAAoBvhB,gBAApBwhB,OACHpE,aAAI7d,gBAADkiB,OAA2B,IAGrBC,GAAgB,CACzBtE,aAAI7d,gBAADoiB,OAA2B,GAC9B,SAAAxc,GAAA,OAAWlD,EAAXkD,EAAElD,KAAa8D,oBAAD6b,MAAH3f,IACX,kBAAM1D,OAAOC,SAASqjB,WAGbC,GAAmB,CAAC1E,aAAI7d,gBAADwiB,MAAuB/hB,gBAAvBgiB,QCtE9BC,IL1BU9E,GK0BS,CAAC,UAAW,cL1BV,CACvB+E,UAAW,CACPC,WAAY,CACRlgB,IADQ,SACJgG,GACA,OAAOma,KAAGngB,IAAIgG,IAGlBmV,IALQ,SAKJnV,EAAKoa,GACL,OAAOD,KAAGhF,IAAInV,EAAKoa,IAGvBC,MATQ,WAUJ,OAAOF,KAAGE,WAKtB/iB,MAAO,CACHgjB,aAAa,GAGjBxc,UAAW,CACPyc,aAAc,CACV9B,aAAK+B,sBAAAC,OACL,CACI9B,KAAM,SAAAnd,GAAyB,IAAvB0e,EAAuB1e,EAAvB0e,WAAYniB,EAAWyD,EAAXzD,MACXiI,EAAYjI,EAAZiI,IAAKoa,EAAOriB,EAAPqiB,IACV,MAAO,CAACM,QAASR,EAAW/E,IAAInV,EAAKoa,KAEzCxB,MAAO,KAGfyB,MAAO,CACHM,aAAS,cAAezF,GAAMjZ,IAAI,SAAA8Y,GAAI,MAAI,CACtC,SAAArZ,GAAA,MAAmB,CAAC0e,IAApB1e,EAAEwe,WAAkCG,MAAMtF,UAGlD1W,KAAM,CAEFsc,aAAS,YAAazF,GAAMjZ,IAAI,SAAA8Y,GAAI,MAAI,CACpC,SAAA7X,GAAA,MAAmB,CAACkd,IAApBld,EAAEgd,WAAkClgB,IAAI+a,KACxC0D,aAAK1gB,gBAAA6iB,MAAY,SAAAR,GAAG,OAAY,OAARA,IACxB,CACIzB,KAAM,GACNC,MAAO,CACHH,aAAK1gB,gBAAA8iB,MAAY,SAAAT,GAAG,MAAmB,kBAARA,IAC/B,CACIzB,KAAM,CAACmC,aAAMxjB,gBAAAyjB,KAAQhG,GAAQhd,gBAAhBijB,QACbpC,MAAO,CAACzD,aAAI7d,gBAAA2jB,KAAQlG,GAAQhd,gBAAhBmjB,eAK5B/F,aAAIqF,sBAAAW,OAA0B,KAKtCC,UAAWlG,GAAMjZ,IAAI,SAAA8Y,GACjB,IAAIzZ,EAAW+f,mBACX,CACIjB,IAAK9iB,gBAAFgkB,KAAUvG,IAIjB,SAAAtX,GAAgB,IAAd2c,EAAc3c,EAAd2c,IAAKpgB,EAASyD,EAATzD,IACGL,EAAO2B,EAASigB,WAAWC,KAAK,KAEtC,OADiBxhB,EAAI8D,oBAAA2d,KAAY9hB,GAC1B+hB,CAAS,CAAC1b,IAAK+U,EAAMqF,UAGpC,OAAO7d,OAAAmM,EAAA,EAAAnM,CAAA,GAAEwY,EAAOzZ,KACjBkT,OAAO,SAACmN,EAAKrgB,GAAN,OAAmBiB,OAAOG,OAAOif,EAAKrgB,IAAW,MK5ChDhB,GAAA,CACXwD,YACAxG,MAAO,CACHud,UAAW,KACXjW,gBAAgB,EAChBgd,mBAAmB,EACnB7W,sBAAsB,EACtBE,uBAAuB,EACvB4W,WAAY,KACZC,SAAU,GACV/f,MAAO,GACPb,QAAS,EACTF,UAAW,CACP+gB,uBAAuB,EACvBC,qBAAqB,EACrBC,qBAAsB,WACtBC,gBAAiB,iBACjBngB,MAAO,CACH,CACIpC,KAAM,UACNyC,MAAO,UACP+f,SAAU,CACN,CACIxiB,KAAM,UACNyC,MAAO,UACPgH,KAAM,WACNgZ,QAAS,CACL,MACA,WACA,WACA,UACA,WAEJC,aAAc,OAElB,CACI1iB,KAAM,WACNyC,MAAO,oBACPgH,KAAM,OACNkZ,UAAW,iBACXD,aAAcE,YAASC,QAClBC,SAAS,0BAElB,CACIrZ,KAAM,QACN+Y,SAAU,CACN,CAEIxiB,KAAM,YACNyC,MAAO,uBACPgH,KAAM,eACNsZ,WAAY,EACZC,cAAe,EACfC,aAAc,eACdC,gBAAiB,kBACjBC,cAAe,yBACfC,iBAAkB,CACd,CACIpjB,KAAM,WACNyC,MAAO,WACPgH,KAAM,OACN4Z,YAAY,GAEhB,CACIrjB,KAAM,YACNyC,MAAO,YACPgH,KAAM,OACN4Z,YAAY,KAIxB,CACIrjB,KAAM,kBACNyC,MAAO,uBACPgH,KAAM,OACNxF,eAAgB,wBAI5B,CACIjE,KAAM,QACNyC,MAAO,oBACPgH,KAAM,aAIlB,CACIzJ,KAAM,QACNyC,MAAO,QACP6gB,UAAW,qBACXd,SAAU,CACN,CACIxiB,KAAM,SACNyC,MAAO,qBACPgH,KAAM,OACN8Z,YAAa,gBAEjB,CACIvjB,KAAM,YACNyC,MAAO,sBACPgH,KAAM,OACN8Z,YAAa,eAEjB,CACIvjB,KAAM,OACNyC,MAAO,kBACPgH,KAAM,OACN8Z,YAAa,cAEjB,CACIvjB,KAAM,OACNyC,MAAO,OACPgH,KAAM,OACN8Z,YAAa,QAEjB,CACIvjB,KAAK,YACLyC,MAAO,gBACPgH,KAAM,OACN8Z,YAAa,SAEjB,CACIvjB,KAAM,UACNyC,MAAO,UACPgH,KAAM,QACN+Y,SAAU,CACN,CACIxiB,KAAM,iBACNyC,MAAO,sBACPgH,KAAM,OAENxF,eAAgB,qBAEpB,CACIjE,KAAM,cACNyC,MAAO,cACPgH,KAAM,OAEN8Z,YAAa,QAEjB,CACIvjB,KAAM,YACNyC,MAAO,aACPgH,KAAM,OAEN8Z,YAAa,UAEjB,CACIvjB,KAAM,gBACNyC,MAAO,iBACPgH,KAAM,OAEN8Z,YAAa,cAMjC,CACIvjB,KAAM,eACNyC,MAAO,eACP6gB,UAAW,qBACXd,SAAU,CACN,CACIxiB,KAAM,cACNyC,MAAO,gCACP+gB,YAAa,4MACb/Z,KAAM,eACNsZ,WAAY,EACZC,cAAe,EACfC,aAAc,iBACdC,gBAAiB,oBACjBC,cAAe,2BACfC,iBAAkB,CACd,CACIpjB,KAAM,kBACNyC,MAAO,OACPgH,KAAM,OACN4Z,YAAY,EACZE,YAAa,qBAEjB,CACIvjB,KAAM,yBACNyC,MAAO,mCACPgH,KAAM,OACN4Z,YAAY,EACZE,YAAa,UACbE,WAAY,CACR,CACIha,KAAM,QACNia,MAAO,aACP7iB,KAAM,8BAO1B,CACIb,KAAM,WACNyC,MAAO,uBACP+gB,YAAa,iMACb/Z,KAAM,eACNsZ,WAAY,EACZE,aAAc,SACdC,gBAAiB,YACjBC,cAAe,mBACfC,iBAAkB,CACd,CACIpjB,KAAM,gBACNyC,MAAO,OACPgH,KAAM,OACN4Z,YAAY,EACZE,YAAa,gBAMjC,CACIvjB,KAAM,YACNyC,MAAO,aACP6gB,UAAW,qBACXd,SAAU,CACN,CAEIxiB,KAAM,oBACNyC,MAAO,0BACPgH,KAAM,QACN+Y,SAAU,CACN,CACIxiB,KAAM,wBACNyC,MAAO,gCACPgH,KAAM,OACNka,eAAe,GAEnB,CACI3jB,KAAM,iCACNyC,MAAO,yCACPgH,KAAM,OACNka,eAAe,KAI3B,CACI3jB,KAAM,WACNyC,MAAO,qBACPgH,KAAM,OACNxF,eAAgB,sBAEpB,CACIjE,KAAM,iBACNyC,MAAO,OACPgH,KAAM,WACN4Z,YAAY,EACZX,aAAc,aACdkB,UAAU,EACVnB,QAAS,CACL,aACA,cACA,eAGR,CACIziB,KAAM,YACNyC,MAAO,QACPgH,KAAM,WACNoa,oBAAoB,EACpBpB,QAvRb,CACX,CACIqB,KAAM,OACNlkB,MAAO,WACP6J,KAAM,eAmR8BnH,IAAI,SAACsH,EAAGwQ,GAAJ,MAAW,CAC3BvZ,KAAM+I,EAAEka,KAAO,IAAMla,EAAEhK,MACvB4D,MAAOoG,EAAEka,KAAO,IAAMla,EAAEhK,MAExB0jB,UAAS,wBAAAjU,OAA0BzF,EAAEH,KAA5B,SAGjB,CACIzJ,KAAM,iBACNyC,MAAO,OACPgH,KAAM,OACNsa,SAAU,qBAEd,CACI/jB,KAAM,kBACNyC,MAAO,QACPgH,KAAM,OACNsa,SAAU,uBAItB,CACI/jB,KAAM,cACNyC,MAAO,UACP6gB,UAAW,qBACXd,SAAU,CACN,CACIxiB,KAAM,YACNyJ,KAAM,OACNxF,eAAgB,uBAEpB,CACIjE,KAAM,UACNyC,MAAO,UACPgH,KAAM,eACNsZ,WAAY,EACZE,aAAc,aACdC,gBAAiB,gBACjBC,cAAe,uBACfC,iBAAkB,CACd,CACIpjB,KAAM,kBACNgkB,UAAW,OACXvhB,MAAO,OACPgH,KAAM,WACN4Z,YAAY,EACZO,UAAU,EACVnB,QAAS,CACL,MACA,gBACA,gBACA,QACA,YAGR,CACIziB,KAAM,aACNgkB,UAAW,SACXvhB,MAAO,SACPgH,KAAM,WACNoa,oBAAoB,EACpBpB,QAhWpB,CACZ,CACIqB,KAAM,OACNlkB,MAAO,QACP6J,KAAM,OAEV,CACIqa,KAAM,SACNlkB,MAAO,UACP6J,KAAM,kBAuVuCnH,IAAI,SAACsH,EAAGwQ,GAAJ,MAAW,CAC5BvZ,KAAM+I,EAAEka,KAAO,IAAMla,EAAEhK,MACvB4D,MAAOoG,EAAEka,KAAO,IAAMla,EAAEhK,MAExB0jB,UAAS,oBAAAjU,OAAsBzF,EAAEH,KAAxB,SAGjB,CACIzJ,KAAM,kBACNgkB,UAAW,cACXvhB,MAAO,OACPgH,KAAM,OACNsa,SAAU,wBAEd,CACI/jB,KAAM,mBACNgkB,UAAW,QACXvhB,MAAO,QACPgH,KAAM,OACNsa,SAAU,4BAM9B,CACI/jB,KAAM,SACNyC,MAAO,gBACP6gB,UAAW,qBACXd,SAAU,CACN,CACIxiB,KAAM,gBACNyC,MAAO,SACPgH,KAAM,WACN4Z,YAAY,EACZZ,QAAS,CACL,uBACA,gDACA,UAGR,CACIziB,KAAM,eACNyC,MAAO,GACPgH,KAAM,QACN6Z,UAAW,mGACXd,SAAU,CACN,CACIxiB,KAAM,0BACNyC,MAAO,2BACPgH,KAAM,OACNwa,WAAY,sEAEhB,CACIjkB,KAAM,uBACNyC,MAAO,wBACPgH,KAAM,OACNwa,WAAY,sEAEhB,CACIjkB,KAAM,6BACNyC,MAAO,sBACPgH,KAAM,OACNwa,WAAY,wEAIxB,CAEIjkB,KAAM,iBACNyC,MAAO,UACPgH,KAAM,WACN4Z,YAAY,EACZZ,QAAS,CACL,iBACA,8BACA,6BACA,gCACA,2BAGR,CACIziB,KAAM,qBACNyC,MAAO,eACPgH,KAAM,UAIlB,CACIzJ,KAAM,WACNsjB,UAAW,wBACXd,SAAU,CACN,CACIxiB,KAAM,MACNyJ,KAAM,OACNya,KAAM,4BAO9BjmB,MAAO,CACH,CAACkmB,MAAO,SAAAtiB,GAAA,IAAE3D,EAAF2D,EAAE3D,MAAF,OAAaL,QAAQK,MAAMA,MAEvCoiB,YACA8D,QAAS,CACL/D,WC1cFgE,GAAMra,kBAAIrJ,GAAM,CAClB2jB,SACI,KACJC,gBAAgB,EAChBC,WAAW,IAIfH,GAAII,GAAG,oBAAqB,kBAAM5mB,QAAQC,IAAI,WAAaumB,GAAIK,YAAY,OAAhBL,KAE3DhgB,IAASC,OACLjG,EAAAC,EAAAC,cAAComB,EAAA,UAAD,CAAWN,IAAKA,IACZhmB,EAAAC,EAAAC,cAACqmB,GAAD,OAERC,SAASC,eAAe,SdJjB,SAAkB7nB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI6nB,IAAIhc,gBAAwBpM,OAAOC,SAASuL,MACpD6c,SAAWroB,OAAOC,SAASooB,OAIvC,OAGFroB,OAAOgN,iBAAiB,OAAQ,WAC9B,IAAM3M,EAAK,GAAAqS,OAAMtG,gBAAN,sBAEPtM,GAgEV,SAAiCO,EAAOC,GAEtCgoB,MAAMjoB,GACHK,KAAK,SAAA6nB,GAEJ,IAAMC,EAAcD,EAASE,QAAQ/kB,IAAI,gBAEnB,MAApB6kB,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CpoB,UAAUC,cAAcooB,MAAMloB,KAAK,SAAAC,GACjCA,EAAakoB,aAAanoB,KAAK,WAC7BV,OAAOC,SAASqjB,aAKpBljB,EAAgBC,EAAOC,KAG1BgB,MAAM,WACLJ,QAAQC,IACN,mEArFA2nB,CAAwBzoB,EAAOC,GAI/BC,UAAUC,cAAcooB,MAAMloB,KAAK,WACjCQ,QAAQC,IACN,+GAMJf,EAAgBC,EAAOC,MclB3BE","file":"static/js/main.758d27fe.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport {connect} from '@cerebral/react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport QrReader from 'react-qr-reader';\n\nfunction QRDialog(props) {\n    return (\n        <Dialog\n            fullScreen\n            open={props.open}\n        >\n          <AppBar>\n            <Toolbar>\n              <IconButton color='inherit' onClick={props.onClose} aria-label='Close'>\n                <CloseIcon />\n              </IconButton>\n              <Typography variant='h6' color='inherit'>\n                Scan QR code\n              </Typography>\n            </Toolbar>\n          </AppBar>\n            <QrReader\n                style={{width: '100%'}}\n                onScan={data => {\n                    if (!data) {\n                        return;\n                    }\n\n\t\t\t\t\tprops.onData(data);\n                    props.onClose();\n                }}\n            />\n        </Dialog>\n    );\n}\n\nexport default connect({\n}, QRDialog);\n","// TODO: This is probably the wrong way to do stuff, but I don't know cerebral\n// Want a singleton of survey model\nexport default {\n    model: null\n};\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactDOMServer from 'react-dom/server';\n\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport Button from '@material-ui/core/Button';\nimport {withTheme} from '@material-ui/core/styles';\n\nimport * as Survey from 'survey-react';\nimport 'survey-react/survey.css';\n\nimport surveyModel from './surveyModel';\n\nSurvey.JsonObject.metaData.addProperty('question', {\n    name: 'cerebralbutton',\n});\n\nclass Questions extends Component {\n    componentWillMount() {\n        const {get, theme} = this.props;\n\n        // Apply MUI theme to survey\n        const {palette} = theme;\n        let themeColors = Survey.StylesManager.ThemeColors['default'];\n        themeColors[\"$main-color\"] = palette.primary.main;\n        themeColors[\"$main-hover-color\"] = palette.primary.dark;\n        themeColors[\"$text-color\"] = palette.text.primary;\n        themeColors[\"$header-color\"] = palette.secondary.main;\n        themeColors[\"$border-color\"] = palette.divider;\n        themeColors[\"$header-background-color\"] = palette.secondary.main;\n        themeColors[\"$body-background-color\"] = palette.background.paper;\n        themeColors[\"$body-container-background-color\"] = palette.background.paper;\n        themeColors[\"$inputs-background-color\"] = palette.background.default;\n        themeColors[\"$error-color\"] = palette.error.main;\n        themeColors[\"$error-background-color\"] = palette.error.light;\n        Survey.StylesManager.applyTheme('default');\n\n        this.model = new Survey.Model(this.props.questions);\n        surveyModel.model = this.model;\n\n        // TODO: I'm sure this is isn't right with cerebral..\n        let data = get(state`surveyData`);\n        if (data) {\n            this.model.data = data;\n        }\n        let pageNum = get(state`pageNum`);\n        if (pageNum !== undefined) {\n            this.model.currentPageNo = pageNum;\n        }\n\n        this.props.reaction('changePage',\n            {\n                pageNum: state`pageNum`,\n            },\n            ({pageNum}) => this.model.currentPageNo = pageNum\n        );\n        this.props.reaction('changeData',\n            {\n                data: state`surveyData`,\n            },\n            ({data}) => this.model.data = data\n        );\n\n        this.updatePages(this.model);\n        this.props.setData({data: this.model.data});\n    }\n\n    updatePages(survey) {\n        this.props.setPages({\n            pages: survey.visiblePages.map((page) => ({\n                error: page.hasErrors(false, false),\n                name: page.name,\n                title: page.title,\n            }))\n        });\n    }\n\n    render() {\n        let {get, ...props} = this.props;\n        return (\n            <Survey.Survey\n                {...props}\n                model={this.model}\n                onCurrentPageChanged={(survey) => {\n                    if (get(state`pageNum`) !== survey.currentPageNo) {\n                        props.setPage({pageNum: survey.currentPageNo});\n                    }\n                }}\n                onPageVisibleChanged={this.updatePages.bind(this)}\n                onPageAdded={this.updatePages.bind(this)}\n                onValueChanged={(survey, {name, value}) => {\n                    props.setData({data: survey.data});\n                    // No idea why, but cerebral freaks out if I call this\n                    // without the setTimeout...\n                    setTimeout(() => this.updatePages(survey));\n                }}\n                completedHtml={\n                    ReactDOMServer.renderToString(props.completedHtml)\n                }\n                onAfterRenderQuestion={\n                    (survey, {question, htmlElement}) => {\n                        if (!question.cerebralbutton) {\n                            return;\n                        }\n\n                        let seq = get(sequences`${question.cerebralbutton}`);\n                        ReactDOM.render(\n                            <Button onClick={() => seq()}>\n                                {question.title}\n                            </Button>\n                        , htmlElement);\n                    }\n                }\n            />\n        );\n    }\n}\n\nexport default connect(\n    {\n        questions: state`questions`,\n        init: sequences`initSurvey`,\n        data: state`surveyData`,\n        setData: sequences`setSurveyData`,\n        setPage: sequences`setSurveyPage`,\n        setPages: sequences`setPages`,\n    },\n    withTheme()(Questions)\n);\n","import React from 'react';\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport WarningIcon from '@material-ui/icons/Warning';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Drawer from '@material-ui/core/Drawer';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nfunction PagesDrawer(props) {\n    const {classes={}} = props;\n\n    const contents = (\n        <div>\n            <Toolbar>\n                <Typography\n                    variant='h6'\n                    color='primary'\n                    align='center'\n                    className={classes.grow}\n                    noWrap\n                >\n                    Pages\n                </Typography>\n            </Toolbar>\n            <Divider />\n            <List>\n                {props.pages.map(({name, title, error}, pageNum) => (\n                    <ListItem\n                        key={name}\n                        button\n                        selected={pageNum === props.pageNum}\n                        className={error ? 'page-err' : 'page-complete'}\n                        onClick={()=>props.setSurveyPage({pageNum})}>\n                        <ListItemIcon>\n                            {error ? <WarningIcon color='error'/> : <DoneIcon />}\n                        </ListItemIcon>\n                        <ListItemText\n                            primary={title}\n                            secondary={error ? 'Incomplete' : 'Complete'}\n                            secondaryTypographyProps={{\n                                color: error ? 'error' : 'textSecondary',\n                            }}\n                        />\n                    </ListItem>\n                ))}\n            </List>\n        </div>\n    );\n\n    return (\n        <nav className={classes.drawer}>\n            <Hidden {...props.permScreens} implementation='js'>\n                <SwipeableDrawer\n                    open={props.navigationOpen}\n                    onOpen={()=>props.showNavigation()}\n                    onClose={()=>props.hideNavigation()}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    {contents}\n                </SwipeableDrawer>\n            </Hidden>\n            <Hidden {...props.tempScreens} implementation='js'>\n                <Drawer\n                    variant='permanent'\n                    open\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    {contents}\n                </Drawer>\n            </Hidden>\n        </nav>\n    );\n}\n\nexport default connect({\n    navigationOpen: state`navigationOpen`,\n    showNavigation: sequences`showNavigation`,\n    hideNavigation: sequences`hideNavigation`,\n    setSurveyPage: sequences`setSurveyPage`,\n    pages: state`pages`,\n    pageNum: state`pageNum`,\n}, PagesDrawer);\n","import React from 'react';\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Link from '@material-ui/core/Link';\n\nfunction ConfirmSubmitDialog(props) {\n    const handleClose = props.confirm;\n    return (\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            aria-labelledby='alert-dialog-title'\n            aria-describedby='alert-dialog-description'\n        >\n            <DialogTitle id='alert-dialog-title'>\n                Successfully submitted metadata\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText id='alert-dialog-description'>\n                    {'Your metadata have been uploaded '}\n                    <Link href={props.resultsUrl}>\n                        here.\n                    </Link>\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color='primary' autoFocus>\n                    OK\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default connect({\n    open: state`confirmSubmitOpen`,\n    resultsUrl: state`resultsUrl`,\n    confirm: sequences`confirmSubmit`,\n}, ConfirmSubmitDialog);\n","import React from 'react';\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nfunction DebugButton(props) {\n    let button = (\n        <Button\n            aria-owns='debug-menu'\n            aria-haspopup='true'\n            onClick={() => props.setState({open: true})}\n            color='inherit'\n        >\n            {process.env.REACT_APP_GIT}\n        </Button>\n    );\n    return (\n        <div>\n            {button}\n            <Menu\n                id='debug-menu'\n                //anchorEl={button}\n                open={props.open || false}\n                onClose={() => props.setState({open: false})}\n            >\n                <MenuItem onClick={() => props.submitResults()}>\n                    Force Submit\n                </MenuItem>\n                <MenuItem onClick={() => props.disconnect()}>\n                    Disconnect Google\n                </MenuItem>\n            </Menu>\n        </div>\n    );\n}\n\nexport default connect({\n    open: state`debugMenuOpen`,\n    setState: sequences`setDebugMenuOpen`,\n    submitResults: sequences`submitResults`,\n    disconnect: sequences`disconnectGoogle`,\n}, DebugButton);\n","import React, {Component} from 'react';\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport {withStyles} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n//import Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport SendIcon from '@material-ui/icons/Send';\n\nimport queryString from 'query-string';\n\nimport './App.css';\nimport QRDialog from './QRDialog';\nimport Questions from './Questions';\nimport PagesDrawer from './PagesDrawer';\nimport ConfirmSubmitDialog from './ConfirmSubmitDialog';\nimport DebugButton from './DebugButton';\n\nimport {createMuiTheme, MuiThemeProvider} from '@material-ui/core/styles';\nimport gold from '@material-ui/core/colors/amber';\n\n// Parse query string\nconst params = queryString.parse(window.location.search);\n\n// All the following keys are optional.\n// We try our best to provide a great default value.\nconst theme = createMuiTheme({\n    typography: {\n        useNextVariants: true,\n    },\n    palette: {\n        type: params.theme || 'dark',\n        primary: gold,\n    },\n});\n\nconst drawerWidth = 240;\nconst styles = (theme) => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    content: {\n        textAlign: 'center',\n        flexGrow: 1,\n        alignSelf: 'center',\n        maxWidth: 800,\n    },\n    appBar: {\n        top: 0,\n        bottom: 'auto',\n        marginLeft: drawerWidth,\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n        },\n    },\n    toolbar: theme.mixins.toolbar,\n    bottomBar: {\n        bottom: 0,\n        top: 'auto',\n        marginLeft: drawerWidth,\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n        },\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n        [theme.breakpoints.up('sm')]: {\n          display: 'none',\n        },\n    },\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n});\n\nwindow.addEventListener('beforeinstallprompt', (e) => {\n    // Prevent Chrome 67 and earlier from automatically showing the prompt\n    e.preventDefault();\n    // Stash the event so it can be triggered later.\n    //deferredPrompt = e;\n    if (params.install !== undefined) {\n        e.prompt(); // TODO: Don't show prompt immediately?\n    }\n});\n\nclass App extends Component {\n    componentWillMount() {\n        this.props.init();\n    }\n\n    render() {\n        let {props} = this;\n        const {classes} = props;\n\n        return (\n            <MuiThemeProvider theme={theme}>\n            <React.Fragment>\n            <CssBaseline />\n            <div className={classes.root}>\n                <PagesDrawer\n                    classes={classes}\n                    // Screens sizes to show permanent drawer\n                    permScreens={{smUp: true}}\n                    // Screens sizes to show temporary drawer\n                    tempScreens={{xsDown: true}}\n                />\n                <AppBar position='fixed' className={classes.appBar}>\n                    <Toolbar>\n                        {params.debug !== undefined &&\n                            // Super secret debug button\n                            <DebugButton />\n                        }\n                        <IconButton\n                            className={classes.menuButton}\n                            color='inherit'\n                            onClick={() => props.showNavigation()}\n                            aria-label='Pages'>\n                            <MenuIcon\n                            />\n                        </IconButton>\n                        <Button\n                            color='inherit'\n                            disabled={props.pages.some(page => page.error)}\n                            onClick={() => props.submit()}>\n                            Submit\n                            <SendIcon />\n                        </Button>\n                        <div className={classes.grow} />\n                        <div className='g-signin2' data-theme='dark' />\n                    </Toolbar>\n                </AppBar>\n                <QRDialog\n                    open={props.droneQRScannerActive}\n                    onClose={props.hideDroneQRScanner}\n                />\n                <QRDialog\n                    open={props.sensorQRScannerActive}\n                    onClose={props.hideSensorQRScanner}\n                />\n                <ConfirmSubmitDialog />\n                <main className={classes.content}>\n                    <div className={classes.toolbar} />\n                    <Questions\n                        isSinglePage={params.singlePage !== undefined}\n                        completedHtml={\n                            (<div> woo done!</div>)\n                        }\n                        onComplete={({data}) => props.submitResults()}\n                    />\n                    <div className={classes.toolbar} />\n                </main>\n                <AppBar position='fixed' className={classes.bottomBar}>\n                    <MobileStepper\n                        steps={props.pages.length}\n                        position='static'\n                        activeStep={props.pageNum}\n                        className={classes.mobileStepper}\n                        nextButton={\n                            <Button\n                                color='primary'\n                                disabled={props.pageNum === props.pages.length - 1}\n                                onClick={() => props.goNextPage()}>\n                                Next\n                                <NavigateNextIcon />\n                            </Button>\n                        }\n                        backButton={\n                            <Button\n                                color='primary'\n                                disabled={props.pageNum === 0}\n                                onClick={() => props.goPreviousPage()}>\n                                <NavigateBeforeIcon />\n                                Previous\n                            </Button>\n                        }\n                    />\n                </AppBar>\n            </div>\n            </React.Fragment>\n            </MuiThemeProvider>\n        );\n    }\n}\n\nexport default connect({\n    navigationOpen: state`navigationOpen`,\n    showNavigation: sequences`showNavigation`,\n    hideNavigation: sequences`hideNavigation`,\n    setSurveyPage: sequences`setSurveyPage`,\n    pages: state`pages`,\n    pageNum: state`pageNum`,\n    goNextPage: sequences`goNextPage`,\n    goPreviousPage: sequences`goPreviousPage`,\n    submit: sequences`completeSurvey`,\n    questions: state`questions`,\n    droneQRScannerActive: state`droneQRScannerActive`,\n    sensorQRScannerActive: state`sensorQRScannerActive`,\n    showDroneQRScanner: sequences`showDroneQRScanner`,\n    showSensorQRScanner: sequences`showSensorQRScanner`,\n    hideDroneQRScanner: sequences`hideDroneQRScanner`,\n    hideSensorQRScanner: sequences`hideSensorQRScanner`,\n    init: sequences`init`,\n    login: sequences`login`,\n    logout: sequences`logout`,\n    google: state`google`,\n    createSheet: sequences`createSheet`,\n    submitResults: sequences`submitResults`,\n}, withStyles(styles)(App));\n","import {Reaction} from 'cerebral';\nimport {state, moduleState, props, sequences} from 'cerebral/tags'\nimport {set, merge, when, parallel} from 'cerebral/factories';\n\nimport ls from 'local-storage';\n\nexport default (paths) => ({\n    providers: {\n        localstore: {\n            get(key) {\n                return ls.get(key);\n            },\n\n            set(key, val) {\n                return ls.set(key, val);\n            },\n\n            clear() {\n                return ls.clear();\n            },\n        },\n    },\n\n    state: {\n        initialized: false,\n    },\n\n    sequences: {\n        persistState: [\n            when(moduleState`initialized`), // Wait for init?\n            {\n                true: ({localstore, props}) => {\n                    let {key, val} = props;\n                    return {success: localstore.set(key, val)};\n                },\n                false: [],\n            },\n        ],\n        clear: [\n            parallel('clear paths', paths.map(path => [\n                ({localstore}) => ({val: localstore.clear(path)}),\n            ])),\n        ],\n        init: [\n            // Load each path from store and set it in state\n            parallel('get paths', paths.map(path => [\n                ({localstore}) => ({val: localstore.get(path)}),\n                when(props`val`, val => val === null),\n                {\n                    true: [], // Ignore null/unset keys\n                    false: [\n                        when(props`val`, val => typeof val === 'object'),\n                        {\n                            true: [merge(state`${path}`, props`val`)],\n                            false: [set(state`${path}`, props`val`)],\n                        }\n                    ],\n                }\n            ])),\n            set(moduleState`initialized`, true),\n        ],\n    },\n\n    // Generate a reaction for each path in the store\n    reactions: paths.map(path => {\n        let reaction = Reaction(\n            {\n                val: state`${path}`,\n            },\n            // TODO: Why didn't using moduleSequences work??\n            //({val, get}) => get(moduleSequences`persistState`)({key: path, val})\n            ({val, get}) => {\n                const name = reaction.modulePath.join('.');\n                const sequence = get(sequences`${name}.persistState`);\n                return sequence({key: path, val});\n            }\n        );\n        return {[path]: reaction};\n    }).reduce((obj, reaction) => Object.assign(obj, reaction), {}),\n});\n","import Promise from 'bluebird';\n//import {state} from 'cerebral';\nimport googleapi from 'google-client-api';\nimport XLSX from 'xlsx';\n\nimport * as errors from './errors';\nimport model from '../surveyModel';\n\nexport const geolocation = {\n    async getCurrentLoc() {\n        try {\n            return await new Promise((resolve, reject) =>\n                    navigator.geolocation.getCurrentPosition(resolve, reject))\n                .then(pos => pos.coords);\n        } catch (err) {\n            let msg;\n\n            switch (err.code) {\n                case 1: // PERMISSION_DENIED\n                    msg = 'Permission denied';\n                    break;\n                case 2: // POSITION_UNAVAILABLE\n                    msg = 'Position unavailable';\n                    break;\n                case 3: // TIMEOUT\n                    msg = 'Timeout obtaining position';\n                    break;\n                default:\n                    msg = 'Unknown error';\n            }\n\n            throw new errors.GetLocationError(msg);\n        }\n    }\n};\n\nexport const survey = {\n    setAnswer(name, value) {\n        model.model.setValue(name, value);\n    },\n\n    setPage(num) {\n        model.model.currentPageNo = num;\n    },\n\n    nextPage() {\n        return model.model.nextPage();\n    },\n\n    previousPage() {\n        return model.model.prevPage();\n    },\n\n    setData(data) {\n        model.model.data = data;\n    },\n\n    submit() {\n        return model.model.completeLastPage();\n    },\n};\n\nlet client;\nlet gapi;\nexport const gapiClient = {\n    // Do one-time gapi setup not effected by login/logout\n    async init({login, logout}) {\n        gapi = Promise.resolve(googleapi())\n            // Load client library\n            .tap(({load}) => new Promise((resolve, reject) => load('client', {\n                callback: resolve,\n                onerror: reject,\n                timeout: 10000,\n                ontimeout: reject,\n            })))\n            // Initialize client (load sheets and drive APIs)\n            .tap(({client}) => client.init({\n                discoveryDocs: [\n                    'https://www.googleapis.com/discovery/v1/apis/drive/v3/rest',\n                    'https://sheets.googleapis.com/$discovery/rest?version=v4'\n                ],\n            }))\n            // Listen for login/logout\n            .tap(({auth2}) => {\n                let auth = auth2.getAuthInstance();\n                let listener = signedIn => {\n                    if (!signedIn) {\n                        client = undefined;\n                        logout && this.context.get(logout)();\n                    } else {\n                        login && this.context.get(login)();\n                    }\n                };\n\n                auth.isSignedIn.listen(listener);\n                listener(auth.isSignedIn.get());\n            });\n        await gapi;\n    },\n\n    async get() {\n        if (client) {\n            return client;\n        }\n\n        client = await gapi\n            // Request needed scopes from user\n            .tap(({auth2}) => {\n                const grants = {\n                    scope: [\n                        'https://www.googleapis.com/auth/drive.file',\n                        'https://www.googleapis.com/auth/drive.appdata',\n                    ].reduce((a, b) => `${a} ${b}`),\n                };\n                let auth = auth2.getAuthInstance();\n\n                return auth.currentUser.get().grant(grants);\n            })\n            .get('client');\n\n        return client;\n    },\n\n    async disconnect() {\n        (await gapi).auth2.getAuthInstance().currentUser.get().disconnect();\n    },\n}\nexport const googleappdata = {\n    async getData() {\n        let {drive} = await this.context.gapiClient.get();\n\n        let result;\n        try {\n            ({result} = await drive.files.list({\n                spaces: 'appDataFolder',\n                q: \"name='config.json'\",\n                fields: 'files(id, appProperties)',\n            }));\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n\n        return result.files[0].appProperties;\n    },\n\n    async initData({body = {}}) {\n        let {drive} = await this.context.gapiClient.get();\n\n        try {\n            let {result} = await drive.files.create({\n                resource: {\n                    name: 'config.json',\n                    mimeType: 'application/json',\n                    parents: ['appDataFolder'],\n                    appProperties: body,\n                },\n            });\n            return result;\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n    },\n}\nexport const googlesheets = {\n    async createSheet() {\n        let {sheets} = await this.context.gapiClient.get();\n\n        try {\n            let {result} = await sheets.spreadsheets.create({}, {});\n            return result;\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n    },\n\n    async getSheet(id) {\n        let {sheets} = await this.context.gapiClient.get();\n\n        let result;\n        try {\n            ({result} = await sheets.spreadsheets.values.get({\n                spreadsheetId: id,\n                range: ['Sheet1'],\n            }));\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n\n        if (!result.values) {\n            return [];\n        }\n\n        let sheet = XLSX.utils.aoa_to_sheet(result.values);\n        return XLSX.utils.sheet_to_json(sheet);\n    },\n\n    async writeSheet(id, data) {\n        const sheetsURL = 'https://docs.google.com/spreadsheets';\n        let {sheets} = await this.context.gapiClient.get();\n\n        // Format data with spreadsheet lib\n        let sheet = XLSX.utils.json_to_sheet(data);\n        let values = XLSX.utils.sheet_to_json(sheet, {header: 1});\n\n        try {\n            let {result} = await sheets.spreadsheets.values.update({\n                spreadsheetId: id,\n                range: sheet['!ref'],\n                valueInputOption: 'USER_ENTERED', // 'RAW'\n                includeValuesInResponse: false,\n            }, {\n                majorDimension: 'ROWS',\n                values,\n            });\n            let row = data.length + 1;\n            return {\n                ...result,\n                // TODO: How to better handle URL from ID etc.?\n                resultsUrl: `${sheetsURL}/d/${id}#gid=0&range=${row}:${row}`\n            };\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n    },\n\n    async addRow(id, cols, row) {\n        let {sheets} = await this.context.gapiClient.get();\n\n        return sheets.spreadsheets.values.append({\n            spreadsheetId: id,\n            valueInputOption: 'USER_ENTERED', // 'RAW'\n            insertDataOption: 'INSERT_ROWS', // 'OVERWRITE'\n            includeValuesInResponse: false,\n        }, {\n            majorDimension: 'ROWS',\n            values: [row],\n        });\n    },\n};\n\n// TODO: Better way to handle arrays and such in a spreadsheet?\nexport const serialize = {\n    serialize(data) {\n        return data.map((result, i) => {\n            let serialized = {};\n            Object.keys(result).forEach(key => {\n                try {\n                    if (typeof result[key] === 'object') {\n                        if (result[key]) {\n                            let kkey = '$$' + key;\n                            serialized[kkey] = JSON.stringify(result[key]);\n                        }\n                    } else {\n                        serialized[key] = result[key];\n                    }\n                } catch (err) {\n                    throw new errors.SerializeError(i, key, err);\n                }\n            });\n            return serialized;\n        });\n    },\n\n    deserialize(data) {\n        return data.map((result, i) => {\n            let deserialized = {};\n            Object.keys(result).forEach(key => {\n                try {\n                    if (key.startsWith('$$')) {\n                        if (result[key]) {\n                            let kkey = key.substring(2);\n                            deserialized[kkey] = JSON.parse(result[key]);\n                        }\n                    } else {\n                        deserialized[key] = result[key];\n                    }\n                } catch (err) {\n                    // +2 is for header row and 1 vs 0 indexing\n                    throw new errors.DeserializeError(i + 2, key, err);\n                }\n            });\n            return deserialized;\n        });\n    },\n};\n","import {CerebralError} from 'cerebral';\n\nexport class GetLocationError extends CerebralError {\n    constructor(message) {\n        super(message);\n        this.name = 'GetLocationError';\n    }\n}\n\nexport class GAPIError extends CerebralError {\n    constructor(err) {\n        // gapi doesn't always throw the same sorts of things..\n        let error = err;\n        if (err.result && error.result.error) {\n            error = err.result.error;\n        }\n\n        super(error.message);\n        this.name = 'GAPIError';\n        this.result = error;\n    }\n}\n\nexport class SerializeError extends CerebralError {\n    constructor(r, c, err) {\n        super(`Error serializing column \"${c}\" of row ${r}: ${err.message}`);\n        this.name = 'DeserializeError';\n        this.err = err;\n    }\n}\n\nexport class DeserializeError extends CerebralError {\n    constructor(r, c, err) {\n        super(`Error deserializing column \"${c}\" of row ${r}: ${err.message}`);\n        this.name = 'DeserializeError';\n        this.err = err;\n    }\n}\n","//import {state} from 'cerebral';\n\nexport function getCurrentLocation({geolocation}) {\n    return geolocation.getCurrentLoc()\n        .then(({latitude, longitude}) => ({currentLoc: {latitude, longitude}}));\n}\n\nexport function setAnswer({survey, props}) {\n    return survey.setAnswer(props.question, props.answer);\n}\nexport function setSurveyPage({survey, props}) {\n    return survey.setPage(props.pageNum);\n}\nexport function setSurveyData({survey, props}) {\n    return survey.setData(props.data);\n}\nexport function nextPage({survey}) {\n    return {error: survey.nextPage()};\n}\nexport function previousPage({survey}) {\n    return {error: survey.previousPage()};\n}\nexport function completeSurvey({survey, props}) {\n    return {done: survey.submit()};\n}\n\nexport async function initGapi({gapiClient, props}) {\n    return gapiClient.init(props);\n}\nexport async function disconnectGapi({gapiClient}) {\n    return gapiClient.disconnect();\n}\nexport async function createSheet({googlesheets}) {\n    let sheet = await googlesheets.createSheet();\n    return {sheet};\n}\nexport async function initSheet({googlesheets, props}) {\n    let {result} = await googlesheets.createSheet();\n    await googlesheets.addRow(result.spreadsheetId, props.headerRow);\n}\nexport async function serializeResults({serialize, props}) {\n    let {results} = props;\n\n    return {results: serialize.serialize(results)};\n}\nexport async function deserializeResults({serialize, props}) {\n    let {results} = props;\n\n    return {results: serialize.deserialize(results)};\n}\nexport async function loadPastResults({googlesheets, props}) {\n    let {resultsId} = props;\n\n    let results = (await googlesheets.getSheet(resultsId)) || [];\n\n    return {results};\n}\nexport async function uploadResults({googlesheets, props}) {\n    let {results, resultsId} = props;\n\n    return googlesheets.writeSheet(resultsId, results);\n}\n\nexport async function createAppData({googleappdata, props}) {\n    let result = await googleappdata.initData(props);\n\n    return {result};\n}\nexport async function loadAppData({googleappdata, path}) {\n    let data = await googleappdata.getData();\n\n    if (data) {\n        return path.found({body: data});\n    } else {\n        return path.notfound();\n    }\n}\n","import {set, push, when} from 'cerebral/factories';\nimport {state, sequences, props} from 'cerebral/tags';\nimport * as actions from './actions';\n\nexport const init = [\n    set(props`login`, sequences`login`),\n    set(props`logout`, sequences`logout`),\n    actions.initGapi,\n    ({get}) => get(sequences`store.init`)(),\n];\n\nexport const showDroneQRScanner = [set(state`droneQRScannerActive`, true)];\nexport const hideDroneQRScanner = [set(state`droneQRScannerActive`, false)];\nexport const showSensorQRScanner = [set(state`sensorQRScannerActive`, true)];\nexport const hideSensorQRScanner = [set(state`sensorQRScannerActive`, false)];\nexport const showNavigation = [set(state`navigationOpen`, true)];\nexport const hideNavigation = [set(state`navigationOpen`, false)];\n\nexport const setSurveyData = [set(state`surveyData`, props`data`)];\nexport const setAnswer = [actions.setAnswer];\nexport const setSurveyPage = [\n    set(state`pageNum`, props`pageNum`),\n];\nexport const setPages = [set(state`pages`, props`pages`)];\nexport const goNextPage = [\n    actions.nextPage,\n    /*\n    set(props`pageNum`, state`pageNum`, num => num + 1),\n    set(state`pageNum`, props`pageNum`),\n    */\n];\nexport const goPreviousPage = [\n    actions.previousPage,\n    /*\n    set(props`pageNum`, state`pageNum`, num => num - 1),\n    set(state`pageNum`, props`pageNum`),\n    */\n];\nexport const completeSurvey = [actions.completeSurvey];\nexport const setCurrentLocation = [\n    actions.getCurrentLocation,\n    set(props`locations`, state`surveyData.locations`),\n    // Using the push factory seems to break things...\n    ({props}) => ({locations: props.locations.concat(props.currentLoc)}),\n    set(props`question`, 'locations'),\n    set(props`answer`, props`locations`),\n    actions.setAnswer,\n];\n\nexport const loadappdata = [\n    actions.loadAppData,\n    {\n        found: [],\n        notfound: [\n            actions.createSheet,\n            set(props`body`, {}),\n            set(props`body.resultsId`, props`sheet.spreadsheetId`),\n            actions.createAppData,\n        ],\n    },\n    set(state`resultsId`, props`body.resultsId`),\n];\n\n// Run _after_ login\nexport const login = [\n    loadappdata,\n    set(props`resultsId`, state`resultsId`),\n    actions.loadPastResults,\n    actions.deserializeResults,\n    set(state`pastData`, props`results`),\n    set(state`loggedin`, true),\n];\n// Runs _after_ logout\nexport const logout = [\n    set(state`loggedin`, false),\n    set(state`pastData`, []),\n];\n\nexport const disconnectGoogle = [actions.disconnectGapi];\n\nexport const createSheet = [actions.createSheet];\nexport const submitResults = [\n    when(state`loggedin`),\n    {\n        true: [],\n        false: login,\n    },\n    push(state`pastData`, state`surveyData`),\n    set(props`results`, state`pastData`),\n    actions.serializeResults,\n    set(props`resultsId`, state`resultsId`),\n    actions.uploadResults,\n    set(state`resultsUrl`, props`resultsUrl`),\n    set(state`confirmSubmitOpen`, true),\n];\n\nexport const confirmSubmit = [\n    set(state`confirmSubmitOpen`, false),\n    ({get}) => get(sequences`store.clear`)(),\n    () => window.location.reload(),\n];\n\nexport const setDebugMenuOpen = [set(state`debugMenuOpen`, props`open`)];\n","//import { set } from 'cerebral/operators';\n//import { state } from 'cerebral/tags';\n\nimport {DateTime} from 'luxon';\n\nimport localstore from './modules/localstore';\n\nimport * as providers from './providers';\nimport * as sequences from './sequences';\n\n// TODO: Get these from sheets\nconst sensors = [\n    {\n        make: 'Sony',\n        model: 'A6000',\n        type: 'RGB',\n    },\n    {\n        make: 'Parrot',\n        model: 'Sequoia',\n        type: 'Multispectral',\n    },\n];\nconst drones = [\n    {\n        make: 'Test',\n        model: 'testtest',\n        type: 'Fixed wing',\n    },\n];\n\n// Parts of state to keep in localstorage\nconst store = localstore(['pageNum', 'surveyData']);\n\nexport default {\n    sequences,\n    state: {\n        resultsId: null,\n        navigationOpen: true,\n        confirmSubmitOpen: false,\n        droneQRScannerActive: false,\n        sensorQRScannerActive: false,\n        surveyData: null,\n        pastData: [],\n        pages: [],\n        pageNum: 0,\n        questions: {\n            showNavigationButtons: false,\n            goNextPageAutomatic: true,\n            clearInvisibleValues: 'onHidden',\n            checkErrorsMode: 'onValueChanged',\n            pages: [\n                {\n                    name: 'general',\n                    title: 'General',\n                    elements: [\n                        {\n                            name: 'purpose',\n                            title: 'Purpose',\n                            type: 'dropdown',\n                            choices: [\n                                'UAV',\n                                'Planting',\n                                'Spraying',\n                                'Tilling',\n                                'Harvest'\n                            ],\n                            defaultValue: 'UAV' // TODO: remove default later\n                        },\n                        {\n                            name: 'datetime',\n                            title: 'Date/Time of data',\n                            type: 'text',\n                            inputType: 'datetime-local',\n                            defaultValue: DateTime.local()\n                                .toFormat(\"yyyy-MM-dd'T'HH:mm:ss\"),\n                        },\n                        {\n                            type: 'panel',\n                            elements: [\n                                {\n                                    // TODO: Support selecting region on a map\n                                    name: 'locations',\n                                    title: 'Collection locations',\n                                    type: 'paneldynamic',\n                                    panelCount: 1,\n                                    minPanelCount: 1,\n                                    panelAddText: 'Add Location',\n                                    panelRemoveText: 'Remove Location',\n                                    templateTitle: 'Location #{panelIndex}',\n                                    templateElements: [\n                                        {\n                                            name: 'latitude',\n                                            title: 'Latitude',\n                                            type: 'text',\n                                            isRequired: true,\n                                        },\n                                        {\n                                            name: 'longitude',\n                                            title: 'Longitude',\n                                            type: 'text',\n                                            isRequired: true,\n                                        },\n                                    ],\n                                },\n                                {\n                                    name: 'location-button',\n                                    title: 'Add current location',\n                                    type: 'html',\n                                    cerebralbutton: 'setCurrentLocation',\n                                },\n                            ],\n                        },\n                        {\n                            name: 'notes',\n                            title: 'Notes or comments',\n                            type: 'comment'\n                        },\n                    ]\n                },\n                {\n                    name: 'place',\n                    title: 'Place',\n                    visibleIf: '{purpose} == \"UAV\"',\n                    elements: [\n                        {\n                            name: 'client',\n                            title: 'Grower (or Client)',\n                            type: 'text',\n                            placeHolder: 'Farmer Frank',\n                        },\n                        {\n                            name: 'operation',\n                            title: 'Farm (or Operation)',\n                            type: 'text',\n                            placeHolder: 'Frank Farms',\n                        },\n                        {\n                            name: 'site',\n                            title: 'Field (or Site)',\n                            type: 'text',\n                            placeHolder: 'East Field',\n                        },\n                        {\n                            name: 'crop',\n                            title: 'Crop',\n                            type: 'text',\n                            placeHolder: 'corn',\n                        },\n                        {\n                            name:'prev-crop',\n                            title: 'Previous Crop',\n                            type: 'text',\n                            placeHolder: 'beans',\n                        },\n                        {\n                            name: 'weather',\n                            title: 'Weather',\n                            type: 'panel',\n                            elements: [\n                                {\n                                    name: 'weather-button',\n                                    title: 'Get Current Weather',\n                                    type: 'html',\n                                    // TODO: Implement functionality for button\n                                    cerebralbutton: 'setCurrentWeather',\n                                },\n                                {\n                                    name: 'temperature',\n                                    title: 'Temperature',\n                                    type: 'text',\n                                    //inputType: 'number',\n                                    placeHolder: '60 F'\n                                },\n                                {\n                                    name: 'windspeed',\n                                    title: 'Wind Speed',\n                                    type: 'text',\n                                    //inputType: 'number',\n                                    placeHolder: '10 mph',\n                                },\n                                {\n                                    name: 'winddirection',\n                                    title: 'Wind Direction',\n                                    type: 'text',\n                                    //inputType: 'number',\n                                    placeHolder: '35 deg',\n                                },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    name: 'uav-operator',\n                    title: 'UAV Operator',\n                    visibleIf: '{purpose} == \"UAV\"',\n                    elements: [\n                        {\n                            name: 'remote-pics',\n                            title: 'Remote Pilot in Command (PIC)',\n                            description: 'remote PIC - A person who holds a remote pilot certificate with an sUAS rating and has the final authority and responsibility for the operation and safety of an sUAS operation conducted under part 107.',\n                            type: 'paneldynamic',\n                            panelCount: 1,\n                            minPanelCount: 1,\n                            panelAddText: 'Add Remote PIC',\n                            panelRemoveText: 'Remove Remote PIC',\n                            templateTitle: 'Remote PIC #{panelIndex}',\n                            templateElements: [\n                                {\n                                    name: 'remote-pic-name',\n                                    title: 'Name',\n                                    type: 'text',\n                                    isRequired: true,\n                                    placeHolder: 'Rusty Shackleford'\n                                },\n                                {\n                                    name: 'remote-pic-certificate',\n                                    title: 'Certificate Number or equivalent',\n                                    type: 'text',\n                                    isRequired: true,\n                                    placeHolder: '1234567',\n                                    validators: [\n                                        {\n                                            type: 'regex',\n                                            regex: /^[0-9]{7}$/,\n                                            text: 'Invalid license number'\n                                        }\n                                    ]\n                                },\n\n                            ],\n                        },\n                        {\n                            name: 'observer',\n                            title: 'Visual Observer (VO)',\n                            description: 'VO - A person acting as a flightcrew member who assists the small UA remote PIC and the person manipulating the controls to see and avoid other air traffic or objects aloft or on the ground.',\n                            type: 'paneldynamic',\n                            panelCount: 0,\n                            panelAddText: 'Add VO',\n                            panelRemoveText: 'Remove VO',\n                            templateTitle: 'VO #{panelIndex}',\n                            templateElements: [\n                                {\n                                    name: 'observer-name',\n                                    title: 'Name',\n                                    type: 'text',\n                                    isRequired: true,\n                                    placeHolder: 'John Doe'\n                                },\n                            ],\n                        },\n                    ]\n                },\n                {\n                    name: 'uav-drone',\n                    title: 'Drone Info',\n                    visibleIf: '{purpose} == \"UAV\"',\n                    elements: [\n                        {\n                            // TODO: make required for submission only\n                            name: 'drone-screenshots',\n                            title: 'DroneDeploy Screenshots',\n                            type: 'panel',\n                            elements: [\n                                {\n                                    name: 'drone-flight-planning',\n                                    title: 'Screenshot of Flight Planning',\n                                    type: 'file',\n                                    allowMultiple: false,\n                                },\n                                {\n                                    name: 'drone-advanced-flight-planning',\n                                    title: 'Screenshot of Advanced Flight Planning',\n                                    type: 'file',\n                                    allowMultiple: false,\n                                },\n                            ],\n                        },\n                        {\n                            name: 'drone-qr',\n                            title: 'Scan drone QR code',\n                            type: 'html',\n                            cerebralbutton: 'showDroneQRScanner',\n                        },\n                        {\n                            name: 'uav-drone-type',\n                            title: 'Type',\n                            type: 'dropdown',\n                            isRequired: true,\n                            defaultValue: 'Fixed wing',\n                            hasOther: true,\n                            choices: [\n                                'Fixed wing',\n                                'Multi-rotor',\n                                'Helicopter',\n                            ],\n                        },\n                        {\n                            name: 'uav-drone',\n                            title: 'Drone',\n                            type: 'dropdown',\n                            hideIfChoicesEmpty: true,\n                            choices: drones.map((e, i) => ({\n                                text: e.make + ' ' + e.model,\n                                value: e.make + ' ' + e.model,\n                                //value: i,\n                                visibleIf: `{uav-drone-type} == \"${e.type}\"`,\n                            })),\n                        },\n                        {\n                            name: 'uav-drone-make',\n                            title: 'Make',\n                            type: 'text',\n                            enableIf: '{uav-drone} empty'\n                        },\n                        {\n                            name: 'uav-drone-model',\n                            title: 'Model',\n                            type: 'text',\n                            enableIf: '{uav-drone} empty'\n                        },\n                    ]\n                },\n                {\n                    name: 'uav-sensors',\n                    title: 'Sensors',\n                    visibleIf: '{purpose} == \"UAV\"',\n                    elements: [\n                        {\n                            name: 'sensor-qr',\n                            type: 'html',\n                            cerebralbutton: 'showSensorQRScanner',\n                        },\n                        {\n                            name: 'sensors',\n                            title: 'Sensors',\n                            type: 'paneldynamic',\n                            panelCount: 0,\n                            panelAddText: 'Add Sensor',\n                            panelRemoveText: 'Remove Sensor',\n                            templateTitle: 'Sensor #{panelIndex}',\n                            templateElements: [\n                                {\n                                    name: 'uav-sensor-type',\n                                    valueName: 'type',\n                                    title: 'Type',\n                                    type: 'dropdown',\n                                    isRequired: true,\n                                    hasOther: true,\n                                    choices: [\n                                        'RGB',\n                                        'Multispectral',\n                                        'Hyperspectral',\n                                        'LiDAR',\n                                        'Thermal',\n                                    ],\n                                },\n                                {\n                                    name: 'uav-sensor',\n                                    valueName: 'sensor',\n                                    title: 'Sensor',\n                                    type: 'dropdown',\n                                    hideIfChoicesEmpty: true,\n                                    choices: sensors.map((e, i) => ({\n                                        text: e.make + ' ' + e.model,\n                                        value: e.make + ' ' + e.model,\n                                        //value: i,\n                                        visibleIf: `{panel.type} == \"${e.type}\"`,\n                                    })),\n                                },\n                                {\n                                    name: 'uav-sensor-make',\n                                    valueName: 'sensor.make',\n                                    title: 'Make',\n                                    type: 'text',\n                                    enableIf: '{panel.sensor} empty'\n                                },\n                                {\n                                    name: 'uav-sensor-model',\n                                    valueName: 'model',\n                                    title: 'Model',\n                                    type: 'text',\n                                    enableIf: '{panel.sensor} empty'\n                                },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    name: 'b4ufly',\n                    title: 'B4UFLY Status',\n                    visibleIf: '{purpose} == \"UAV\"',\n                    elements: [\n                        {\n                            name: 'b4ufly-status',\n                            title: 'Status',\n                            type: 'dropdown',\n                            isRequired: true,\n                            choices: [\n                                'proceed with caution',\n                                'flying in controlled airspace (class B/C/D/E)',\n                                'other',\n                            ],\n                        },\n                        {\n                            name: 'b4ufly-extra',\n                            title: '',\n                            type: 'panel',\n                            visibleIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\" or {b4ufly-status} == \"other\"',\n                            elements: [\n                                {\n                                    name: 'b4ufly-airport-operator',\n                                    title: 'Airport Operator Contact',\n                                    type: 'text',\n                                    requiredIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\n                                },\n                                {\n                                    name: 'b4ufly-control-tower',\n                                    title: 'Control Tower Contact',\n                                    type: 'text',\n                                    requiredIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\n                                },\n                                {\n                                    name: 'b4ufly-prior-authorization',\n                                    title: 'Prior Authorization',\n                                    type: 'text',\n                                    requiredIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\n                                },\n                            ],\n                        },\n                        {\n                            // TODO: What the heck even is this?\n                            name: 'b4ufly-options',\n                            title: 'Options',\n                            type: 'checkbox',\n                            isRequired: true,\n                            choices: [\n                                'checked NOTAMS',\n                                'checked flight restrictions',\n                                'checked local restrictions',\n                                'checked upcoming restrictions',\n                                'checked national parks',\n                            ],\n                        },\n                        {\n                            name: 'b4ufly-certificate',\n                            title: 'COW or COA #',\n                            type: 'text',\n                        },\n                    ],\n                },\n                {\n                    name: 'planting',\n                    visibleIf: '!({purpose} == \"UAV\")',\n                    elements: [\n                        {\n                            name: 'nyi',\n                            type: 'html',\n                            html: 'Not yet implemented'\n                        }\n                    ]\n                },\n            ]\n        },\n    },\n    catch: [\n        [Error, ({error}) => console.error(error)],\n    ],\n    providers,\n    modules: {\n        store,\n        //storage,\n    },\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from 'cerebral';\nimport {Container} from '@cerebral/react';\nimport Devtools from 'cerebral/devtools';\n\nimport AppComponent from './App';\nimport main from './main';\n\nconst app = App(main, {\n    devtools: process.env.NODE_ENV === 'production' ?\n        null : Devtools({host: 'localhost:8000', reconnect: true}),\n    throwToConsole: true,\n    noRethrow: false,\n});\n\n// Run init sequence\napp.on('initialized:model', () => console.log('sadsad') && app.getSequence('init')());\n\nReactDOM.render(\n    <Container app={app}>\n        <AppComponent />\n    </Container>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nif (process.env.NODE_ENV === 'production') {\n    serviceWorker.register();\n} else {\n    serviceWorker.unregister();\n}\n"],"sourceRoot":""}