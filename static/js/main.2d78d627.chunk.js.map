{"version":3,"sources":["serviceWorker.js","QRDialog.js","surveyModel.js","Questions.js","App.js","module/errors.js","module/providers.js","module/actions.js","module/sequences.js","module/index.js","index.js"],"names":["Boolean","window","location","hostname","match","connect","props","react_default","a","createElement","Dialog_default","fullScreen","open","AppBar_default","Toolbar_default","IconButton_default","color","onClick","onClose","aria-label","Close_default","Typography_default","variant","lib_default","style","width","onScan","data","onData","surveyModel","model","Survey","metaData","addProperty","name","Questions","_this","this","get","questions","state","_templateObject","pageNum","_templateObject2","undefined","currentPageNo","reaction","_templateObject3","_ref","updatePages","survey","setPages","pages","visiblePages","map","page","error","hasErrors","title","_this2","_this$props","Object","objectWithoutProperties","survey_react","assign","onCurrentPageChanged","_templateObject4","setPage","onPageVisibleChanged","bind","onPageAdded","onValueChanged","_ref2","value","setData","setTimeout","completedHtml","ReactDOMServer","renderToString","onAfterRenderQuestion","_ref3","question","htmlElement","cerebralbutton","ReactDOM","render","Button_default","sequences","_templateObject5","Component","_templateObject6","init","_templateObject7","_templateObject8","_templateObject9","_templateObject10","App","Fragment","CssBaseline_default","className","position","showNavigation","Menu_default","disabled","goPreviousPage","NavigateBefore_default","length","goNextPage","NavigateNext_default","some","submit","Send_default","SwipeableDrawer_default","navigationOpen","onOpen","hideNavigation","List_default","ListItem_default","key","button","selected","setSurveyPage","ListItemIcon_default","Warning_default","Done_default","ListItemText_default","primary","src_QRDialog","droneQRScannerActive","hideDroneQRScanner","sensorQRScannerActive","hideSensorQRScanner","src_Questions","isSinglePage","onComplete","console","log","JSON","stringify","App_templateObject","App_templateObject2","App_templateObject3","App_templateObject4","App_templateObject5","App_templateObject6","App_templateObject7","App_templateObject8","App_templateObject9","App_templateObject10","_templateObject11","_templateObject12","showDroneQRScanner","_templateObject13","showSensorQRScanner","_templateObject14","_templateObject15","_templateObject16","_templateObject17","GetLocationError","_CerebralError","message","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","inherits","CerebralError","geolocation","getCurrentLoc","_getCurrentLoc","asyncToGenerator","regenerator_default","mark","_callee","msg","wrap","_context","prev","next","Promise","resolve","reject","navigator","getCurrentPosition","then","pos","coords","abrupt","sent","t0","t1","code","stop","apply","arguments","setAnswer","setValue","num","nextPage","previousPage","prevPage","completeLastPage","answer","set","sequences_templateObject","sequences_templateObject2","sequences_templateObject3","sequences_templateObject4","sequences_templateObject5","sequences_templateObject6","setSurveyData","sequences_templateObject7","sequences_templateObject8","actions","sequences_templateObject9","sequences_templateObject10","sequences_templateObject11","sequences_templateObject12","_ref6","_ref7","completeSurvey","_ref8","done","setCurrentLocation","currentLoc","latitude","longitude","sequences_templateObject13","sequences_templateObject14","sequences_templateObject15","sequences_templateObject16","sequences_templateObject17","_templateObject18","cssType","applyTheme","Date","toLocaleString","toISOString","split","src_module","surveyData","showNavigationButtons","goNextPageAutomatic","clearInvisibleValues","checkErrorsMode","elements","type","choices","defaultValue","date","time","items","inputType","isRequired","visibleIf","placeHolder","validators","regex","text","allowMultiple","hasOther","hideIfChoicesEmpty","make","e","i","concat","enableIf","panelCount","panelAddText","panelRemoveText","templateTitle","templateElements","valueName","requiredIf","html","providers","app","main","devtools","_cerebral_react","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2d78d627.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport {connect} from '@cerebral/react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport QrReader from 'react-qr-reader';\n\nfunction QRDialog(props) {\n    return (\n        <Dialog\n            fullScreen\n            open={props.open}\n        >\n          <AppBar>\n            <Toolbar>\n              <IconButton color='inherit' onClick={props.onClose} aria-label='Close'>\n                <CloseIcon />\n              </IconButton>\n              <Typography variant='h6' color='inherit'>\n                Scan QR code\n              </Typography>\n            </Toolbar>\n          </AppBar>\n            <QrReader\n                style={{width: '100%'}}\n                onScan={data => {\n                    if (!data) {\n                        return;\n                    }\n\n\t\t\t\t\tprops.onData(data);\n                    props.onClose();\n                }}\n            />\n        </Dialog>\n    );\n}\n\nexport default connect({\n}, QRDialog);\n","// TODO: This is probably the wrong way to do stuff, but I don't know cerebral\n// Want a singleton of survey model\nexport default {\n    model: null\n};\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactDOMServer from 'react-dom/server';\n\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport Button from '@material-ui/core/Button';\n\nimport * as Survey from 'survey-react';\nimport 'survey-react/survey.css';\n\nimport surveyModel from './surveyModel';\n\nSurvey.JsonObject.metaData.addProperty('question', {\n    name: 'cerebralbutton',\n});\n\nclass Questions extends Component {\n    componentWillMount() {\n        let get = this.props.get;\n\n        this.model = new Survey.Model(this.props.questions);\n        surveyModel.model = this.model;\n\n        // TODO: I'm sure this is isn't right with cerebral..\n        let data = get(state`surveyData`);\n        if (data) {\n            this.model.data = data;\n        }\n        let pageNum = get(state`pageNum`);\n        if (pageNum !== undefined) {\n            this.model.currentPageNo = pageNum;\n        }\n\n        this.props.reaction('changePage',\n            {\n                pageNum: state`pageNum`,\n            },\n            ({pageNum}) => this.model.currentPageNo = pageNum\n        );\n        /*\n        this.props.reaction('changeData',\n            {\n                data: state`surveyData`,\n            },\n            ({data}) => this.model.data = data\n        );\n        */\n\n        this.updatePages(this.model);\n    }\n\n    updatePages(survey) {\n        this.props.setPages({\n            pages: survey.visiblePages.map((page) => ({\n                error: page.hasErrors(false, false),\n                name: page.name,\n                title: page.title,\n            }))\n        });\n    }\n\n    render() {\n        let {get, ...props} = this.props;\n        return (\n            <Survey.Survey\n                {...props}\n                model={this.model}\n                onCurrentPageChanged={(survey) => {\n                    if (get(state`pageNum`) !== survey.currentPageNo) {\n                        props.setPage({pageNum: survey.currentPageNo});\n                    }\n                }}\n                onPageVisibleChanged={this.updatePages.bind(this)}\n                onPageAdded={this.updatePages.bind(this)}\n                onValueChanged={(survey, {name, value}) => {\n                    props.setData({data: survey.data});\n                    // No idea why, but cerebral freaks out if I call this\n                    // without the setTimeout...\n                    setTimeout(() => this.updatePages(survey));\n                }}\n                completedHtml={\n                    ReactDOMServer.renderToString(props.completedHtml)\n                }\n                onAfterRenderQuestion={\n                    (survey, {question, htmlElement}) => {\n                        if (!question.cerebralbutton) {\n                            return;\n                        }\n\n                        ReactDOM.render(\n                            <Button\n                                onClick={get(sequences`${question.cerebralbutton}`)}>\n                                {question.title}\n                            </Button>\n                        , htmlElement);\n                    }\n                }\n            />\n        );\n    }\n}\n\nexport default connect(\n    {\n        questions: state`questions`,\n        init: sequences`initSurvey`,\n        setData: sequences`setSurveyData`,\n        setPage: sequences`setSurveyPage`,\n        setPages: sequences`setPages`,\n    },\n    Questions\n);\n","import React, {Component} from 'react';\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport SendIcon from '@material-ui/icons/Send';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Drawer from '@material-ui/core/SwipeableDrawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport './App.css';\nimport QRDialog from './QRDialog';\nimport Questions from './Questions';\n\nclass App extends Component {\n\n    componentWillMount() {\n        this.props.init();\n    }\n\n    render() {\n        let props = this.props;\n        return (\n            <React.Fragment>\n            <CssBaseline />\n            <div className='App'>\n                <AppBar position='static'>\n                    <Toolbar>\n                        <IconButton\n                            onClick={() => props.showNavigation()}\n                            aria-label='Menu'>\n                            <MenuIcon\n                            />\n                        </IconButton>\n                        <Button\n                            disabled={props.pageNum === 0}\n                            onClick={() => props.goPreviousPage()}>\n                            <NavigateBeforeIcon />\n                            Previous\n                        </Button>\n                        <Button\n                            disabled={props.pageNum === props.pages.length - 1}\n                            onClick={() => props.goNextPage()}>\n                            Next\n                            <NavigateNextIcon />\n                        </Button>\n                        <Button\n                            disabled={props.pages.some(page => page.error)}\n                            onClick={() => props.submit()}>\n                            Submit\n                            <SendIcon />\n                        </Button>\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                  open={props.navigationOpen}\n                  onOpen={()=>props.showNavigation()}\n                  onClose={()=>props.hideNavigation()}\n                >\n                    <List>\n                        {props.pages.map(({name, title, error}, pageNum) => (\n                            <ListItem\n                                key={name}\n                                button\n                                selected={pageNum === props.pageNum}\n                                className={error ? 'page-err' : 'page-complete'}\n                                onClick={()=>props.setSurveyPage({pageNum})}>\n                                <ListItemIcon>\n                                    {error ? <WarningIcon /> : <DoneIcon />}\n                                </ListItemIcon>\n                                <ListItemText primary={title} />\n                            </ListItem>\n                        ))}\n                    </List>\n                </Drawer>\n                <QRDialog\n                    open={props.droneQRScannerActive}\n                    onClose={props.hideDroneQRScanner}\n                />\n                <QRDialog\n                    open={props.sensorQRScannerActive}\n                    onClose={props.hideSensorQRScanner}\n                />\n                <Questions\n                    isSinglePage={false}\n                    completedHtml={\n                        (<div> woo done!</div>)\n                    }\n                    onComplete={({data}) => console.log(JSON.stringify(data))}\n                />\n            </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default connect({\n    navigationOpen: state`navigationOpen`,\n    showNavigation: sequences`showNavigation`,\n    hideNavigation: sequences`hideNavigation`,\n    setSurveyPage: sequences`setSurveyPage`,\n    pages: state`pages`,\n    pageNum: state`pageNum`,\n    goNextPage: sequences`goNextPage`,\n    goPreviousPage: sequences`goPreviousPage`,\n    submit: sequences`completeSurvey`,\n    questions: state`questions`,\n    droneQRScannerActive: state`droneQRScannerActive`,\n    sensorQRScannerActive: state`sensorQRScannerActive`,\n    showDroneQRScanner: sequences`showDroneQRScanner`,\n    showSensorQRScanner: sequences`showSensorQRScanner`,\n    hideDroneQRScanner: sequences`hideDroneQRScanner`,\n    hideSensorQRScanner: sequences`hideSensorQRScanner`,\n    init: sequences`init`,\n}, App);\n","import {CerebralError} from 'cerebral';\n\nexport class GetLocationError extends CerebralError {\n    constructor(message) {\n        super(message);\n        this.name = 'GetLocationError';\n    }\n}\n","//import Promise from 'bluebird';\n//import {state} from 'cerebral';\nimport {GetLocationError} from './errors';\nimport model from '../surveyModel';\n\nexport const geolocation = {\n    async getCurrentLoc() {\n        try {\n            return await new Promise((resolve, reject) =>\n                    navigator.geolocation.getCurrentPosition(resolve, reject))\n                .then(pos => pos.coords);\n        } catch (err) {\n            let msg;\n\n            switch (err.code) {\n                case 1: // PERMISSION_DENIED\n                    msg = 'Permission denied';\n                    break;\n                case 2: // POSITION_UNAVAILABLE\n                    msg = 'Position unavailable';\n                    break;\n                case 3: // TIMEOUT\n                    msg = 'Timeout obtaining position';\n                    break;\n                default:\n                    msg = 'Unknown error';\n            }\n\n            throw new GetLocationError(msg);\n        }\n    }\n};\n\nexport const survey = {\n    setAnswer(name, value) {\n        model.model.setValue(name, value);\n    },\n\n    setPage(num) {\n        model.model.currentPageNo = num;\n    },\n\n    nextPage() {\n        return model.model.nextPage();\n    },\n\n    previousPage() {\n        return model.model.prevPage();\n    },\n\n    setData(data) {\n        model.model.data = data;\n    },\n\n    submit() {\n        return model.model.completeLastPage();\n    },\n};\n","//import {state} from 'cerebral';\n\nexport function getCurrentLocation({geolocation}) {\n    return geolocation.getCurrentLoc()\n        .then(({latitude, longitude}) => ({currentLoc: {latitude, longitude}}));\n}\n\nexport function setAnswer({survey, props}) {\n    return survey.setAnswer(props.question, props.answer);\n}\nexport function setSurveyPage({survey, props}) {\n    return survey.setPage(props.pageNum);\n}\nexport function setSurveyData({survey, props}) {\n    return survey.setData(props.data);\n}\nexport function nextPage({survey}) {\n    return {error: survey.nextPage()};\n}\nexport function previousPage({survey}) {\n    return {error: survey.previousPage()};\n}\nexport function completeSurvey({survey, props}) {\n    return {done: survey.submit()};\n}\n","import {set, merge} from 'cerebral/factories';\nimport {state, props} from 'cerebral/tags';\nimport * as actions from './actions';\nimport {sequence, parallel} from 'cerebral';\n\nexport const init = [];\n\nexport const showDroneQRScanner = [set(state`droneQRScannerActive`, true)];\nexport const hideDroneQRScanner = [set(state`droneQRScannerActive`, false)];\nexport const showSensorQRScanner = [set(state`sensorQRScannerActive`, true)];\nexport const hideSensorQRScanner = [set(state`sensorQRScannerActive`, false)];\nexport const showNavigation = [set(state`navigationOpen`, true)];\nexport const hideNavigation = [set(state`navigationOpen`, false)];\n\nexport const setSurveyData = [set(state`surveyData`, props`data`)];\nexport const setAnswer = [actions.setAnswer];\nexport const setSurveyPage = [\n    set(state`pageNum`, props`pageNum`),\n];\nexport const setPages = [set(state`pages`, props`pages`)];\nexport const goNextPage = [\n    actions.nextPage,\n    /*\n    set(props`pageNum`, state`pageNum`, num => num + 1),\n    set(state`pageNum`, props`pageNum`),\n    */\n];\nexport const goPreviousPage = [\n    actions.previousPage,\n    /*\n    set(props`pageNum`, state`pageNum`, num => num - 1),\n    set(state`pageNum`, props`pageNum`),\n    */\n];\nexport const completeSurvey = [actions.completeSurvey];\nexport const setCurrentLocation = [\n    actions.getCurrentLocation,\n    set(props`question`, 'latitude'),\n    set(props`answer`, props`currentLoc.latitude`),\n    actions.setAnswer,\n    set(props`question`, 'longitude'),\n    set(props`answer`, props`currentLoc.longitude`),\n    actions.setAnswer,\n];\n","//import { set } from 'cerebral/operators';\n//import { state } from 'cerebral/tags';\n//\nimport * as Survey from 'survey-react';\n\nimport * as providers from './providers';\nimport * as sequences from './sequences';\n\nSurvey.Survey.cssType = 'material';\nSurvey.StylesManager.applyTheme('darkblue');\n\n// TODO: Get current date/time better\nvar [date, time] = (new Date((new Date()).toLocaleString() + ' UTC'))\n        .toISOString().split(/[TZ]/);\n\n// TODO: Get these from sheets\nconst sensors = [\n    {\n        make: 'Sony',\n        model: 'A6000',\n        type: 'RGB',\n    },\n    {\n        make: 'Parrot',\n        model: 'Sequoia',\n        type: 'Multispectral',\n    },\n];\nconst drones = [\n    {\n        make: 'Test',\n        model: 'testtest',\n        type: 'Fixed wing',\n    },\n];\n\nexport default {\n    sequences,\n    state: {\n        navigationOpen: true,\n        droneQRScannerActive: false,\n        sensorQRScannerActive: false,\n        surveyData: null,\n        pages: [],\n        pageNum: 0,\n        questions: {\n            showNavigationButtons: false,\n            goNextPageAutomatic: true,\n            clearInvisibleValues: 'onHidden',\n            checkErrorsMode: 'onValueChanged',\n            pages: [\n                {\n                    name: 'general',\n                    title: 'General',\n                    elements: [\n                        {\n                            name: 'purpose',\n                            title: 'Purpose',\n                            type: 'dropdown',\n                            choices: [\n                                'UAV',\n                                'Planting',\n                                'Spraying',\n                                'Tilling',\n                                'Harvest'\n                            ],\n                            defaultValue: 'UAV' // TODO: remove default later\n                        },\n                        {\n                            name: 'datetime',\n                            title: 'Date/Time of data',\n                            type: 'multipletext',\n                            defaultValue: {\n                                date: date,\n                                time: time,\n                            },\n                            items: [\n                                {\n                                    name: 'date',\n                                    title: 'Date',\n                                    inputType: 'date',\n                                },\n                                {\n                                    name: 'time',\n                                    title: 'Time',\n                                    inputType: 'time',\n                                },\n                            ]\n                        },\n                        {\n                            // TODO: Support selecting region on a map\n                            name: 'location',\n                            title: 'Collection location',\n                            type: 'panel',\n                            elements: [\n                                {\n                                    name: 'location-button',\n                                    title: 'Get current location',\n                                    type: 'html',\n                                    cerebralbutton: 'setCurrentLocation',\n                                },\n                                {\n                                    name: 'latitude',\n                                    title: 'Latitude',\n                                    type: 'text',\n                                    isRequired: true,\n                                },\n                                {\n                                    name: 'longitude',\n                                    title: 'Longitude',\n                                    type: 'text',\n                                    isRequired: true,\n                                },\n                            ],\n                        },\n                        {\n                            name: 'notes',\n                            title: 'Notes or comments',\n                            type: 'comment'\n                        },\n                    ]\n                },\n                {\n                    name: 'uav-operator',\n                    title: 'UAV Operator',\n                    visibleIf: '{purpose} == \"UAV\"',\n                    elements: [\n                        {\n                            name: 'license',\n                            title: 'Operator License',\n                            type: 'text',\n                            isRequired: true,\n                            placeHolder: '1234567',\n                            validators: [\n                                {\n                                    type: 'regex',\n                                    regex: /^[0-9]{7}$/,\n                                    text: 'Invalid license number'\n                                }\n                            ]\n                        },\n                        {\n                            name: 'operator',\n                            title: 'Operator',\n                            type: 'text',\n                            isRequired: true,\n                            placeHolder: 'Rusty Shackleford'\n                        },\n                        {\n                            name: 'observer',\n                            title: 'Observer',\n                            type: 'text',\n                            placeHolder: 'John Doe'\n                        },\n                    ]\n                },\n                {\n                    name: 'uav-drone',\n                    title: 'Drone Info',\n                    visibleIf: '{purpose} == \"UAV\"',\n                    elements: [\n                        {\n                            name: 'drone-screenshot',\n                            title: 'Screenshot of DroneDeploy',\n                            type: 'file',\n                            allowMultiple: false,\n                        },\n                        {\n                            name: 'drone-qr',\n                            title: 'Scan drone QR code',\n                            type: 'html',\n                            cerebralbutton: 'showDroneQRScanner',\n                        },\n                        {\n                            name: 'uav-drone-type',\n                            title: 'Type',\n                            type: 'dropdown',\n                            isRequired: true,\n                            defaultValue: 'Fixed wing',\n                            hasOther: true,\n                            choices: [\n                                'Fixed wing',\n                                'Multi-rotor',\n                                'Helicopter',\n                            ],\n                        },\n                        {\n                            name: 'uav-drone',\n                            title: 'Drone',\n                            type: 'dropdown',\n                            hideIfChoicesEmpty: true,\n                            choices: drones.map((e, i) => ({\n                                text: e.make + ' ' + e.model,\n                                value: e.make + ' ' + e.model,\n                                //value: i,\n                                visibleIf: `{uav-drone-type} == \"${e.type}\"`,\n                            })),\n                        },\n                        {\n                            name: 'uav-drone-make',\n                            title: 'Make',\n                            type: 'text',\n                            enableIf: '{uav-drone} empty'\n                        },\n                        {\n                            name: 'uav-drone-model',\n                            title: 'Model',\n                            type: 'text',\n                            enableIf: '{uav-drone} empty'\n                        },\n                    ]\n                },\n                {\n                    name: 'uav-sensors',\n                    title: 'Sensors',\n                    visibleIf: '{purpose} == \"UAV\"',\n                    elements: [\n                        {\n                            name: 'sensor-qr',\n                            type: 'html',\n                            cerebralbutton: 'showSensorQRScanner',\n                        },\n                        {\n                            name: 'sensors',\n                            title: 'Sensors',\n                            type: 'paneldynamic',\n                            panelCount: 1,\n                            panelAddText: 'Add Sensor',\n                            panelRemoveText: 'Remove Sensor',\n                            templateTitle: 'Sensor #{panelIndex}',\n                            templateElements: [\n                                {\n                                    name: 'uav-sensor-type',\n                                    valueName: 'type',\n                                    title: 'Type',\n                                    type: 'dropdown',\n                                    isRequired: true,\n                                    hasOther: true,\n                                    choices: [\n                                        'RGB',\n                                        'Multispectral',\n                                        'Hyperspectral',\n                                        'LiDAR',\n                                        'Thermal',\n                                    ],\n                                },\n                                {\n                                    name: 'uav-sensor',\n                                    valueName: 'sensor',\n                                    title: 'Sensor',\n                                    type: 'dropdown',\n                                    hideIfChoicesEmpty: true,\n                                    choices: sensors.map((e, i) => ({\n                                        text: e.make + ' ' + e.model,\n                                        value: e.make + ' ' + e.model,\n                                        //value: i,\n                                        visibleIf: `{panel.type} == \"${e.type}\"`,\n                                    })),\n                                },\n                                {\n                                    name: 'uav-sensor-make',\n                                    valueName: 'sensor.make',\n                                    title: 'Make',\n                                    type: 'text',\n                                    enableIf: '{panel.sensor} empty'\n                                },\n                                {\n                                    name: 'uav-sensor-model',\n                                    valueName: 'model',\n                                    title: 'Model',\n                                    type: 'text',\n                                    enableIf: '{panel.sensor} empty'\n                                },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    name: 'b4ufly',\n                    title: 'B4UFLY Status',\n                    visibleIf: '{purpose} == \"UAV\"',\n                    elements: [\n                        {\n                            name: 'b4ufly-status',\n                            title: 'Status',\n                            type: 'dropdown',\n                            isRequired: true,\n                            choices: [\n                                'proceed with caution',\n                                'flying in controlled airspace (class B/C/D/E)',\n                                'other',\n                            ],\n                        },\n                        {\n                            name: 'b4ufly-extra',\n                            title: '',\n                            type: 'panel',\n                            visibleIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\" or {b4ufly-status} == \"other\"',\n                            elements: [\n                                {\n                                    name: 'b4ufly-airport-operator',\n                                    title: 'Airport Operator Contact',\n                                    type: 'text',\n                                    requiredIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\n                                },\n                                {\n                                    name: 'b4ufly-control-tower',\n                                    title: 'Control Tower Contact',\n                                    type: 'text',\n                                    requiredIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\n                                },\n                                {\n                                    name: 'b4ufly-prior-authorization',\n                                    title: 'Prior Authorization',\n                                    type: 'text',\n                                    requiredIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\n                                },\n                            ],\n                        },\n                        {\n                            // TODO: What the heck even is this?\n                            name: 'b4ufly-options',\n                            title: 'Options',\n                            type: 'checkbox',\n                            isRequired: true,\n                            choices: [\n                                'checked NOTAMS',\n                                'checked flight restrictions',\n                                'checked local restrictions',\n                                'checked upcoming restrictions',\n                                'checked national parks',\n                            ],\n                        },\n                    ],\n                },\n                {\n                    name: 'planting',\n                    visibleIf: '!({purpose} == \"UAV\")',\n                    elements: [\n                        {\n                            name: 'nyi',\n                            type: 'html',\n                            html: 'Not yet implemented'\n                        }\n                    ]\n                },\n            ]\n        },\n    },\n    providers,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from 'cerebral';\nimport { Container } from '@cerebral/react';\nimport Devtools from 'cerebral/devtools';\n\nimport AppComponent from './App';\nimport main from './module';\n\nconst app = App(main, {\n    devtools: process.env.NODE_ENV === 'production' ?\n        null : Devtools({host: 'localhost:8000', reconnect: true})\n});\n\nReactDOM.render(\n    <Container app={app}>\n\t\t<AppComponent />\n\t</Container>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}