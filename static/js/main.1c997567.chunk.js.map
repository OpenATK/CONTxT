{"version":3,"sources":["serviceWorker.js","QRDialog.js","surveyModel.js","autocompleteWidget.js","tagboxWidget.js","Questions.js","PagesDrawer.js","ConfirmSubmitDialog.js","DebugButton.js","ErrorDisplay.js","styles.js","googleScopes.js","describe.js","describe-loader.js","App.js","main/modules/localstore/index.js","main/providers.js","main/errors.js","main/actions.js","main/sequences.js","main/computeds.js","pages/0-general.js","pages/1-place.js","pages/machinery.js","pages/planting/seed.js","pages/uav/b4ufly.js","pages/uav/drone.js","pages/uav/operator.js","pages/uav/sensors.js","pages-loader.js","pages.js","main/index.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","connect","props","react_default","a","createElement","Dialog","fullScreen","open","AppBar","Toolbar","IconButton","color","onClick","onClose","aria-label","Close_default","Typography","variant","react_qr_reader_lib_default","style","width","onScan","data","onData","surveyModel","model","require","$","autocompleteWidget","name","widgetIsLoaded","ui","autocomplete","render","question","isDefaultRender","isFit","activatedByChanged","activatedBy","Survey","metaData","findProperty","addProperty","default","className","onGetValue","obj","choicesByUrl","getData","onSetValue","value","setData","afterRender","el","is","find","appendTo","classes","ui-autocomplete","source","choices","map","it","text","willUnMount","tagboxWidget","title","iconName","fn","select2","defaultJSON","htmlTemplate","getType","addClass","visible","tagbox","properties","fixStyles","e","parentElement","querySelector","border","self","this","settings","select2Config","$el","tags","disabled","isReadOnly","placeholder","placeHolder","theme","updateValueHandler","forEach","concat","length","option","Option","append","trigger","val","updateChoices","empty","ajax","visibleChoices","choice","id","readOnlyChangedCallback","prop","registerFunctionOnPropertyValueChanged","valueChangedCallback","setValue","on","willUnmount","off","Instance","addCustomWidget","acwidget","tbwidget","Pica","info","debug","bind","loggers","logCB","_arguments","Array","prototype","slice","call","arguments","rest","logger","extend","apply","Object","toConsumableArray","Questions","_this","_this$props","get","palette","themeColors","ThemeColors","primary","main","dark","secondary","divider","background","paper","light","applyTheme","questions","_templateObject","pageNum","_templateObject2","undefined","currentPageNo","reaction","_templateObject3","_ref","_templateObject4","_ref2","_templateObject5","_ref3","updatePages","survey","setPages","pages","visiblePages","page","hasErrors","_this2","_this$props2","_this$props2$classes","objectWithoutProperties","survey_react","assign","onCurrentPageChanged","_templateObject6","setPage","onUpdateQuestionCssClasses","_ref4","cssClasses","preview","classNames","ssPreview","onPageVisibleChanged","onPageAdded","onUploadFiles","_ref6","asyncToGenerator","regenerator_default","mark","_callee","_ref5","files","callback","file","res","wrap","_context","prev","next","upload","sent","content","url","stop","_x","_x2","onValueChanging","_ref7","onValueChanged","_ref8","setTimeout","completedHtml","ReactDOMServer","renderToString","onQuestionAdded","options","onAfterRenderQuestion","_ref10","_callee2","_ref9","htmlElement","autofill","seq","_seq","_context2","isEmpty","every","answer","cerebralbutton","sequences","_templateObject7","ReactDOM","Button","_x3","_x4","Component","_templateObject8","init","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","withTheme","navigationOpen","PagesDrawer_templateObject","showNavigation","PagesDrawer_templateObject2","hideNavigation","PagesDrawer_templateObject3","setSurveyPage","PagesDrawer_templateObject4","PagesDrawer_templateObject5","PagesDrawer_templateObject6","_props$classes","contents","align","grow","noWrap","Divider","List","ListItem","key","button","selected","ListItemIcon","Warning_default","Done_default","ListItemText","secondaryTypographyProps","readme","Fragment","component","Link","target","href","drawer","Hidden","permScreens","implementation","SwipeableDrawer","onOpen","drawerPaper","tempScreens","Drawer","ConfirmSubmitDialog_templateObject","resultsUrl","ConfirmSubmitDialog_templateObject2","confirm","ConfirmSubmitDialog_templateObject3","handleClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","DebugButton_templateObject","setState","DebugButton_templateObject2","submitResults","DebugButton_templateObject3","disconnect","DebugButton_templateObject4","aria-owns","aria-haspopup","process","REACT_APP_GIT","Menu_Menu","MenuItem","ErrorDisplay_templateObject","close","ErrorDisplay_templateObject2","_ref$classes","Snackbar","anchorOrigin","vertical","horizontal","SnackbarContent","message","root","Error_default","iconVariant","icon","action","styles","display","alignItems","justifyContent","textAlign","flexGrow","alignSelf","maxWidth","appBar","defineProperty","top","bottom","marginLeft","breakpoints","up","toolbar","mixins","bottomBar","menuButton","marginRight","flexShrink","fontSize","opacity","spacing","backgroundColor","googleScopes","join","describe","dirty","raw","hash","distance","tag","semver","loose","includePrerelease","major","minor","patch","prerelease","build","version","suffix","semverString","meta","ui-version","params","queryString","parse","search","createMuiTheme","typography","useNextVariants","type","gold","addEventListener","preventDefault","install","prompt","App","lib_default","MuiThemeProvider","dist_default","CssBaseline","src_PagesDrawer","smUp","xsDown","position","src_DebugButton","Menu_default","canSubmit","submit","Send_default","data-theme","data-scope","scope","src_QRDialog","droneQRScannerActive","hideDroneQRScanner","sensorQRScannerActive","hideSensorQRScanner","src_ConfirmSubmitDialog","initialized","loggedin","src_Questions","isSinglePage","singlePage","Box","p","CircularProgress","size","onComplete","src_ErrorDisplay","MobileStepper","steps","activeStep","mobileStepper","nextButton","canNext","goNextPage","NavigateNext_default","backButton","canPrev","goPreviousPage","NavigateBefore_default","App_templateObject","App_templateObject2","App_templateObject3","App_templateObject4","App_templateObject5","App_templateObject6","App_templateObject7","App_templateObject8","App_templateObject9","App_templateObject10","App_templateObject11","App_templateObject12","App_templateObject13","showDroneQRScanner","App_templateObject14","showSensorQRScanner","App_templateObject15","App_templateObject16","_templateObject17","_templateObject18","_templateObject19","login","_templateObject20","logout","_templateObject21","google","_templateObject22","createSheet","_templateObject23","_templateObject24","_templateObject25","_templateObject26","_templateObject27","withStyles","gapi","GetLocationError","_CerebralError","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","CerebralError","GAPIError","_CerebralError2","err","result","SerializeError","_CerebralError3","r","c","_this3","DeserializeError","_CerebralError4","_this4","geolocation","getCurrentLoc","_getCurrentLoc","msg","Promise","resolve","reject","getCurrentPosition","pos","coords","abrupt","t0","t1","code","errors","setAnswer","num","nextPage","previousPage","prevPage","completeLastPage","gapiClient","_init","googleapi","tap","load","onerror","timeout","ontimeout","client","discoveryDocs","auth","auth2","getAuthInstance","listener","signedIn","user","currentUser","getBasicProfile","context","getName","isSignedIn","listen","_get","_callee3","_context3","hasGrantedScopes","grant","_disconnect","_callee4","_context4","appdataScope","googleappdata","_getData","_callee5","drive","_context5","list","spaces","q","fields","appProperties","initData","_initData","_callee6","_ref8$body","body","_context6","create","resource","mimeType","parents","updateData","_updateData","_callee7","_ref11","_ref11$body","_ref12","_ref13","_context7","update","fileId","sheetsScope","sheetVer","googlesheets","_createSheet","_callee8","_ref14","sheets","ver","_ref15","_context8","getVersion","spreadsheets","getSheet","_getSheet","_callee9","_ref16","_ref17","sheet","_context9","values","spreadsheetId","range","XLSX","utils","aoa_to_sheet","sheet_to_json","writeSheet","_writeSheet","_callee10","sheetsURL","_ref18","_ref19","row","_context10","json_to_sheet","header","valueInputOption","includeValuesInResponse","majorDimension","objectSpread","_x5","_x6","addRow","_addRow","_callee11","cols","_ref20","_context11","insertDataOption","_x7","_x8","_x9","googledrive","_upload","_callee12","_ref21","_ref22","token","_context12","getToken","fetch","method","headers","Headers","Authorization","Content-Type","_x10","fileResult","ducky","validate","compile","serialize","i","serialized","keys","execute","JSON","stringify","deserialize","deserialized","startsWith","kkey","substring","apixu","Apixu","apikey","weather","current","_current","_callee13","query","_context13","_x11","getCurrentLocation","currentLoc","latitude","longitude","main_actions_createSheet","results","path","resultsId","found","notfound","_ref26","set","sequences_templateObject","sequences_templateObject2","sequences_templateObject3","sequences_templateObject4","_initGapi","sequences_templateObject5","sequences_templateObject6","sequences_templateObject7","sequences_templateObject8","sequences_templateObject9","sequences_templateObject10","sequences_templateObject11","sequences_templateObject12","setSurveyData","sequences_templateObject13","sequences_templateObject14","actions","sequences_templateObject15","sequences_templateObject16","sequences_templateObject17","sequences_templateObject18","completeSurvey","done","setCurrentLocation","sequences_templateObject19","sequences_templateObject20","locations","sequences_templateObject21","sequences_templateObject22","sequences_templateObject23","createSheetWithAppData","sequences_templateObject24","sequences_templateObject25","sequences_templateObject26","loadappdata","_loadAppData","_createAppData","sequences_templateObject27","_templateObject28","_templateObject29","_templateObject30","uploadScreenshot","_x12","_uploadScreenshot","when","_templateObject31","true","false","_templateObject32","_templateObject33","_templateObject34","_loadPastResults","_deserializeResults","_templateObject35","_templateObject36","_templateObject37","_templateObject38","_updateAppData","_ref24","store","actions_templateObject2","actions_templateObject3","forIn","findKeys","filter","merge","actions_templateObject4","_templateObject39","_templateObject40","_templateObject41","_templateObject42","disconnectGoogle","_disconnectGapi","_templateObject43","_templateObject44","push","_templateObject45","_templateObject46","_templateObject47","_templateObject48","_serializeResults","_templateObject49","_templateObject50","_uploadResults","_templateObject51","_templateObject52","_templateObject53","_templateObject54","confirmSubmit","_templateObject55","reload","setDebugMenuOpen","_templateObject56","_templateObject57","getCurrentLocationWeather","_templateObject58","_templateObject59","_templateObject60","_templateObject61","_x13","_getCurrentWeather","_templateObject62","_templateObject63","d","equals","_templateObject64","person","_templateObject65","_templateObject66","_templateObject67","_templateObject68","_templateObject69","_templateObject70","_templateObject71","_templateObject72","temperature","_templateObject73","_templateObject74","windspeed","_templateObject75","_templateObject76","winddirection","_templateObject77","_templateObject78","lastused","_ref23","actions_templateObject","otherwise","displayError","_templateObject79","_templateObject80","clearError","unset","_templateObject81","computeds_templateObject","computeds_templateObject2","computeds_templateObject3","computeds_templateObject4","some","computeds_templateObject5","computeds_templateObject6","computeds_templateObject7","_0_general","elements","isRequired","inputType","defaultValue","DateTime","local","toFormat","panelCount","minPanelCount","panelAddText","panelRemoveText","templateTitle","templateElements","_1_place","machinery","visibleIf","description","enableIf","hideIfChoicesEmpty","hasOther","storeOthersAsComment","otherText","otherErrorText","make","seed","tokenSeparators","b4ufly","requiredIf","drone","storeDataAsText","acceptedTypes","allowMultiple","operator","validators","regex","uav_sensors","valueName","pages_loader","_0_general_namespaceObject","_1_place_namespaceObject","machinery_namespaceObject","seed_namespaceObject","b4ufly_namespaceObject","drone_namespaceObject","operator_namespaceObject","sensors_namespaceObject","html","paths","providers","localstore","ls","clear","persistState","moduleState","localstore_templateObject","success","parallel","localstore_templateObject2","localstore_templateObject3","localstore_templateObject4","localstore_templateObject5","localstore_templateObject6","localstore_templateObject7","localstore_templateObject8","reactions","Reaction","localstore_templateObject9","modulePath","localstore_templateObject10","sequence","reduce","computeds","appdataId","submitting","confirmSubmitOpen","surveyData","pastData","showNavigationButtons","goNextPageAutomatic","clearInvisibleValues","checkErrorsMode","Error","modules","app","devtools","throwToConsole","noRethrow","returnSequencePromise","getSequence","_cerebral_react","src_App_0","document","getElementById","URL","origin","response","contentType","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1c997567.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport {connect} from '@cerebral/react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport QrReader from 'react-qr-reader';\n\nfunction QRDialog(props) {\n    return (\n        <Dialog\n            fullScreen\n            open={props.open}\n        >\n          <AppBar>\n            <Toolbar>\n              <IconButton color='inherit' onClick={props.onClose} aria-label='Close'>\n                <CloseIcon />\n              </IconButton>\n              <Typography variant='h6' color='inherit'>\n                Scan QR code\n              </Typography>\n            </Toolbar>\n          </AppBar>\n            <QrReader\n                style={{width: '100%'}}\n                onScan={data => {\n                    if (!data) {\n                        return;\n                    }\n\n\t\t\t\t\tprops.onData(data);\n                    props.onClose();\n                }}\n            />\n        </Dialog>\n    );\n}\n\nexport default connect({\n}, QRDialog);\n","// TODO: This is probably the wrong way to do stuff, but I don't know cerebral\n// Want a singleton of survey model\nexport default {\n    model: null\n};\n","import * as Survey from 'survey-react';\n\nrequire('jquery-ui/themes/base/core.css');\nrequire('jquery-ui/themes/base/menu.css');\nrequire('jquery-ui/themes/base/autocomplete.css');\nrequire('jquery-ui/themes/base/theme.css');\n\nlet $ = require('jquery');\nrequire('jquery-ui/ui/widgets/autocomplete');\n\nexport default {\n    name: 'autocomplete',\n\n    widgetIsLoaded() {\n        return !!$.ui.autocomplete;\n    },\n\n    // Doesn't let you type unles this is here...\n    render(question) {\n    },\n\n    isDefaultRender: true,\n\n    isFit(question) {\n        return !!question.autocomplete;\n    },\n\n    activatedByChanged(activatedBy) {\n        if (Survey.JsonObject.metaData.findProperty('text', 'autofill')) {\n            return;\n        }\n\n        Survey.JsonObject.metaData.addProperty('question', {\n            name: 'autocomplete',\n            default: false,\n        });\n        Survey.JsonObject.metaData.addProperty('text', 'choices:itemvalues');\n        Survey.JsonObject.metaData.addProperty('text', {\n            name: 'choicesByUrl:restfull',\n            className: 'ChoicesRestfull',\n            onGetValue(obj) {\n                return obj && obj.choicesByUrl && obj.choicesByUrl.getData();\n            },\n            onSetValue(obj, value) {\n                if (!obj.choicesByUrl) {\n                    obj.choicesByUrl = new Survey.ChoicesRestfull();\n                }\n                obj.choicesByUrl.setData(value);\n            }\n        });\n    },\n\n    afterRender(question, el) {\n        let $el = $(el).is('input') ? $(el) : $(el).find('input');\n\n        $el.autocomplete({\n            appendTo: $('.sv_main'),\n            classes: {\n                'ui-autocomplete': 'sv_q_text_root',\n            },\n            source: (question.choices || []).map(it => it.text),\n        });\n    },\n\n    willUnMount(question, el) {\n        let $el = $(el).is('input') ? $(el) : $(el).find('input');\n\n        $el.autocomplete('destroy');\n    },\n}\n","import * as Survey from 'survey-react';\n\nimport $ from 'jquery';\nimport 'select2';\nimport 'select2/dist/css/select2.min.css';\n\nexport default {\n    name: 'tagbox',\n    title: 'Tag box',\n    iconName: 'icon-tagbox',\n    widgetIsLoaded: function() {\n        return typeof $ == 'function' && !!$.fn.select2;\n    },\n    defaultJSON: {\n        choices: ['Item 1', 'Item 2', 'Item 3']\n    },\n    htmlTemplate: '<select multiple=\"multiple\" style=\"width: 100%;\"></select>',\n    isFit: function(question) {\n        return question.getType() === 'tagbox';\n    },\n    activatedByChanged: function(activatedBy) {\n        Survey.JsonObject.metaData.addClass(\n            'tagbox',\n            [\n                {\n                    name: 'hasOther',\n                    visible: false\n                }\n            ],\n            null,\n            'checkbox'\n        );\n        Survey.JsonObject.metaData.addProperty('tagbox', {\n            name: 'select2Config',\n            default: null\n        });\n        Survey.matrixDropdownColumnTypes.tagbox = {\n            properties: [\n                'choices',\n                'choicesOrder',\n                'choicesByUrl',\n                'optionsCaption',\n                'otherText',\n                'choicesVisibleIf'\n            ]\n        };\n    },\n    fixStyles: function(el) {\n        let e = el.parentElement.querySelector('.select2-search__field');\n        if (e) {\n            e.style.border = 'none';\n        }\n    },\n    afterRender: function(question, el) {\n        var self = this;\n        var settings = question.select2Config;\n        var $el = $(el).is('select') ? $(el) : $(el).find('select');\n        $el.select2({\n            tags: true,\n            disabled: question.isReadOnly,\n            placeholder: question.placeHolder,\n            theme: 'classic'\n        });\n\n        self.fixStyles(el);\n\n        var updateValueHandler = function() {\n            (question.value || []).forEach(it => {\n                if ($el.find(`option[value=\"${it}\"]`).length === 0) {\n                    let option = new Option(it, it, true, true);\n                    $el.append(option).trigger('change');\n                }\n            });\n            $el.val(question.value).trigger('change');\n            self.fixStyles(el);\n        };\n        var updateChoices = function() {\n            $el.select2().empty();\n\n            if (settings) {\n                if (settings.ajax) {\n                    $el.select2(settings);\n                } else {\n                    settings.data = question.visibleChoices.map(function(choice) {\n                        return {\n                            id: choice.value,\n                            text: choice.text\n                        };\n                    });\n                    $el.select2(settings);\n                }\n            } else {\n                $el.select2({\n                    data: question.visibleChoices.map(function(choice) {\n                        return {\n                            id: choice.value,\n                            text: choice.text\n                        };\n                    })\n                });\n            }\n\n            updateValueHandler();\n        };\n\n        question.readOnlyChangedCallback = function() {\n            $el.prop('disabled', question.isReadOnly);\n        };\n        question.registerFunctionOnPropertyValueChanged(\n            'visibleChoices',\n            function() {\n                updateChoices();\n            }\n        );\n        question.valueChangedCallback = updateValueHandler;\n        let setValue = function() {\n            question.value = $el.select2('data').map(it => it.id);\n        };\n        $el.on('select2:select', setValue);\n        $el.on('select2:unselect', setValue);\n        updateChoices();\n    },\n    willUnmount: function(question, el) {\n        $(el)\n            .find('select')\n            .off('select2:select')\n            .select2('destroy');\n        question.readOnlyChangedCallback = null;\n    }\n};\n\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactDOMServer from 'react-dom/server';\n\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport Button from '@material-ui/core/Button';\nimport {withTheme} from '@material-ui/core/styles';\n\nimport debug from 'debug';\n\nimport * as Survey from 'survey-react';\nimport 'survey-react/survey.css';\n\nimport classNames from 'classnames';\nimport isEmpty from 'lodash.isempty';\nimport Pica from 'pica';\n\nimport surveyModel from './surveyModel';\n\nimport acwidget from './autocompleteWidget';\nimport tbwidget from './tagboxWidget';\n\nSurvey.CustomWidgetCollection.Instance.addCustomWidget(acwidget, 'property');\nSurvey.CustomWidgetCollection.Instance.addCustomWidget(tbwidget, 'customtype');\n\nSurvey.JsonObject.metaData.addProperty('question', {\n    name: 'cerebralbutton',\n});\n\nSurvey.JsonObject.metaData.addProperty('question', {\n    name: 'autofill',\n    default: false,\n});\n\n// Override imageWidth for file questions\nSurvey.JsonObject.metaData.addProperty('file', {\n    name: 'imageWidth',\n    default: '100%',\n});\n\nlet pica = new Pica();\n\nfunction unanswered(value) {\n    if (typeof value === 'object') {\n        return isEmpty(value) || (value.every && value.every(isEmpty));\n    } else {\n        return value === undefined;\n    }\n}\n\nconst info = debug('contxt:survey');\ninfo.log = console.info.bind(console);\n\nlet loggers = {};\nfunction logCB() {\n    let [name, ...rest] = arguments;\n\n    let logger = loggers[name] || info.extend(name);\n    loggers[name] = logger;\n\n    return logger(...rest);\n}\n\nclass Questions extends Component {\n    componentWillMount() {\n        const {get, theme} = this.props;\n\n        // Apply MUI theme to survey\n        const {palette} = theme;\n        let themeColors = Survey.StylesManager.ThemeColors['default'];\n        themeColors['$main-color'] = palette.primary.main;\n        themeColors['$main-hover-color'] = palette.primary.dark;\n        themeColors['$text-color'] = palette.text.primary;\n        themeColors['$header-color'] = palette.secondary.main;\n        themeColors['$border-color'] = palette.divider;\n        themeColors['$header-background-color'] = palette.secondary.main;\n        themeColors['$body-background-color'] = palette.background.paper;\n        themeColors['$body-container-background-color'] = palette.background.paper;\n        themeColors['$inputs-background-color'] = palette.background.default;\n        themeColors['$error-color'] = palette.error.main;\n        themeColors['$error-background-color'] = palette.error.light;\n        Survey.StylesManager.applyTheme('default');\n\n        this.model = new Survey.Model(this.props.questions);\n        surveyModel.model = this.model;\n\n        // TODO: I'm sure this is isn't right with cerebral..\n        let data = get(state`surveyData`);\n        if (data) {\n            this.model.data = data;\n        }\n        let pageNum = get(state`pageNum`);\n        if (pageNum !== undefined) {\n            this.model.currentPageNo = pageNum;\n        }\n\n        this.props.reaction('changePage',\n            {\n                pageNum: state`pageNum`,\n            },\n            ({pageNum}) => this.model.currentPageNo = pageNum\n        );\n        this.props.reaction('changeData',\n            {\n                data: state`surveyData`,\n            },\n            ({data}) => this.model.data = data\n        );\n        this.props.reaction('changeQuestions',\n            {\n                questions: state`questions`,\n            },\n            ({questions}) => {\n                this.model = new Survey.Model(questions);\n                surveyModel.model = this.model;\n            }\n        );\n\n        this.updatePages(this.model);\n        this.props.setData({data: this.model.data});\n    }\n\n    updatePages(survey) {\n        this.props.setPages({\n            pages: survey.visiblePages.map((page) => ({\n                error: page.hasErrors(false, false),\n                name: page.name,\n                title: page.title,\n            }))\n        });\n    }\n\n    render() {\n        const {get, classes={}, ...props} = this.props;\n        return (\n            <Survey.Survey\n                {...props}\n                model={this.model}\n                onCurrentPageChanged={(survey) => {\n                    logCB('onCurrentPageChanged', `${survey.currentPageNo}`);\n\n                    if (get(state`pageNum`) !== survey.currentPageNo) {\n                        props.setPage({pageNum: survey.currentPageNo});\n                    }\n                }}\n                onUpdateQuestionCssClasses={\n                    (survey, {question, cssClasses}) => {\n                        logCB('onUpdateQuestionCssClasses',\n                                `${question.name}=%o`, cssClasses);\n\n                        // TODO: Support more CSS stuff?\n                        cssClasses.preview =\n                            classNames(cssClasses.preview, classes.ssPreview);\n                    }\n                }\n                onPageVisibleChanged={this.updatePages.bind(this)}\n                onPageAdded={this.updatePages.bind(this)}\n                onUploadFiles={async (survey, {files, callback}) => {\n                    logCB('onUploadFiles', `%o`, files);\n\n                    // TODO: Support multiple files?\n                    let file = files[0];\n\n                    let res = await props.upload({file});\n\n                    callback('success', [{\n                        file,\n                        content: res.url,\n                    }]);\n                }}\n                onValueChanging={(survey, {question, name, value}) => {\n                    logCB('onValueChanging', `${name}=%o`, value);\n\n                    return;\n                    if (question instanceof Survey.QuestionFileModel) {\n                        (value || []).forEach((file, i) => {\n                            if (!(file && file.content) || file.converted) {\n                                return;\n                            }\n\n                            let img = new Image();\n                            img.src = file.content;\n                            let canvas = document.createElement('canvas');\n                            // TODO: Too small, need to upload to photos etc...\n                            canvas.width = 150;\n                            // Maintain aspect ratio\n                            canvas.height =\n                                img.height * canvas.width / img.width;\n\n                            const options = {\n                                unsharpAmount: 80,\n                                unsharpRadius: 0.6,\n                                unsharpThreshold: 2,\n                            };\n                            pica.resize(img, canvas, options).then(() => {\n                                let resized = {\n                                    name: file.name,\n                                    content: canvas.toDataURL(),\n                                    type: 'image/png',\n                                    converted: true\n                                };\n\n                                // You have to reassign question.value\n                                // Stuff breaks if you assign question.value[i]\n                                let value = question.value;\n                                question.value = [];\n                                value[i] = resized;\n                                question.value = value;\n                            });\n                        });\n                    }\n                }}\n                onValueChanged={(survey, {name, value, question}) => {\n                    logCB('onValueChanged', `%o=%o`, question, value);\n\n                    props.setData({data: survey.data});\n                    // No idea why, but cerebral freaks out if I call this\n                    // without the setTimeout...\n                    setTimeout(() => this.updatePages(survey));\n                }}\n                completedHtml={\n                    ReactDOMServer.renderToString(props.completedHtml)\n                }\n                onQuestionAdded={(survey, options) => {\n                        logCB('onQuestionAdded', '%o', options);\n                }}\n                onAfterRenderQuestion={\n                    async (survey, {question, htmlElement}) => {\n                        logCB('onAfterRenderQuestion', '%o', question);\n\n                        /*\n                        if (question.autocomplete) {\n                            question.choices = [\n                                new Survey.ItemValue('foo'),\n                                new Survey.ItemValue('bar'),\n                            ];\n                        }*/\n\n                        let {autofill} = question;\n                        // Try to autofill if unanswered\n                        if (unanswered(question.value) && autofill) {\n                            if (typeof autofill === 'function') {\n                                question.value = await autofill(question);\n                            } else {\n                                let seq = await props.autofill({\n                                    // TODO: How to handle dynamic questions?\n                                    question: question.name,\n                                    autofill,\n                                });\n                                question.value = seq && seq.answer;\n                            }\n                        }\n\n                        if (question.cerebralbutton) {\n                            let seq = get(sequences`${question.cerebralbutton}`);\n                            ReactDOM.render(\n                                <Button onClick={() => seq()}>\n                                    {question.title}\n                                </Button>\n                            , htmlElement);\n                        }\n                    }\n                }\n            />\n        );\n    }\n}\n\nexport default connect(\n    {\n        questions: state`questions`,\n        init: sequences`initSurvey`,\n        data: state`surveyData`,\n        setData: sequences`setSurveyData`,\n        setPage: sequences`setSurveyPage`,\n        currentPageNo: state`pageNum`,\n        setPages: sequences`setPages`,\n        autofill: sequences`autofill`,\n        upload: sequences`uploadScreenshot`,\n    },\n    withTheme(Questions)\n);\n\n","import React from 'react';\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport WarningIcon from '@material-ui/icons/Warning';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Drawer from '@material-ui/core/Drawer';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nfunction PagesDrawer(props) {\n    const {classes={}} = props;\n\n    const contents = (\n        <div>\n            <Toolbar>\n                <Typography\n                    variant='h6'\n                    color='primary'\n                    align='center'\n                    className={classes.grow}\n                    noWrap\n                >\n                    Pages\n                </Typography>\n            </Toolbar>\n            <Divider />\n            <List>\n                {props.pages.map(({name, title, error}, pageNum) => (\n                    <ListItem\n                        key={name}\n                        button\n                        selected={pageNum === props.pageNum}\n                        className={error ? 'page-err' : 'page-complete'}\n                        onClick={()=>props.setSurveyPage({pageNum})}>\n                        <ListItemIcon>\n                            {error ? <WarningIcon color='error'/> : <DoneIcon />}\n                        </ListItemIcon>\n                        <ListItemText\n                            primary={title}\n                            secondary={error ? 'Incomplete' : 'Complete'}\n                            secondaryTypographyProps={{\n                                color: error ? 'error' : 'textSecondary',\n                            }}\n                        />\n                    </ListItem>\n                ))}\n            {props.readme && <>\n                <Divider />\n                <ListItem\n                    component={Link}\n                    target='_blank'\n                    href={props.readme}\n                >\n                <ListItemText\n                    primary='Readme'\n                />\n                </ListItem>\n            </>}\n            </List>\n        </div>\n    );\n\n    return (\n        <nav className={classes.drawer}>\n            <Hidden {...props.permScreens} implementation='js'>\n                <SwipeableDrawer\n                    open={props.navigationOpen}\n                    onOpen={()=>props.showNavigation()}\n                    onClose={()=>props.hideNavigation()}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    {contents}\n                </SwipeableDrawer>\n            </Hidden>\n            <Hidden {...props.tempScreens} implementation='js'>\n                <Drawer\n                    variant='permanent'\n                    open\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    {contents}\n                </Drawer>\n            </Hidden>\n        </nav>\n    );\n}\n\nexport default connect({\n    navigationOpen: state`navigationOpen`,\n    showNavigation: sequences`showNavigation`,\n    hideNavigation: sequences`hideNavigation`,\n    setSurveyPage: sequences`setSurveyPage`,\n    pages: state`pages`,\n    pageNum: state`pageNum`,\n}, PagesDrawer);\n","import React from 'react';\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Link from '@material-ui/core/Link';\n\nfunction ConfirmSubmitDialog(props) {\n    const handleClose = props.confirm;\n    return (\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            aria-labelledby='alert-dialog-title'\n            aria-describedby='alert-dialog-description'\n        >\n            <DialogTitle id='alert-dialog-title'>\n                Successfully submitted metadata\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText id='alert-dialog-description'>\n                    {'Your metadata have been uploaded '}\n                    <Link target='_blank' href={props.resultsUrl}>\n                        here.\n                    </Link>\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color='primary' autoFocus>\n                    OK\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default connect({\n    open: state`confirmSubmitOpen`,\n    resultsUrl: state`resultsUrl`,\n    confirm: sequences`confirmSubmit`,\n}, ConfirmSubmitDialog);\n","import React from 'react';\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nfunction DebugButton(props) {\n    let button = (\n        <Button\n            aria-owns='debug-menu'\n            aria-haspopup='true'\n            onClick={() => props.setState({open: true})}\n            color='inherit'\n        >\n            {process.env.REACT_APP_GIT}\n        </Button>\n    );\n    return (\n        <div>\n            {button}\n            <Menu\n                id='debug-menu'\n                //anchorEl={button}\n                open={props.open || false}\n                onClose={() => props.setState({open: false})}\n            >\n                <MenuItem onClick={() => props.submitResults()}>\n                    Force Submit\n                </MenuItem>\n                <MenuItem onClick={() => props.disconnect()}>\n                    Disconnect Google\n                </MenuItem>\n            </Menu>\n        </div>\n    );\n}\n\nexport default connect({\n    open: state`debugMenuOpen`,\n    setState: sequences`setDebugMenuOpen`,\n    submitResults: sequences`submitResults`,\n    disconnect: sequences`disconnectGoogle`,\n}, DebugButton);\n","import React from 'react';\nimport classNames from 'classnames';\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport CloseIcon from '@material-ui/icons/Close';\n\nfunction ErrorDisplay({classes={}, error, close}) {\n    return (\n        <Snackbar\n            open={!!error}\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n            }}>\n            <SnackbarContent\n                className={classes.error}\n                aria-describedby='client-snackbar'\n                message={\n                    <span id='client-snackbar' className={classes.root}>\n                        <ErrorIcon\n                            className={\n                                classNames(classes.iconVariant, classes.icon)\n                            }\n                        />\n                        {error && (error.name + ': ' + error.message)}\n                    </span>\n                }\n                action={[\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        onClick={close}\n                                        >\n                        <CloseIcon className={classes.icon}/>\n                    </IconButton>,\n                ]}\n            />\n        </Snackbar>\n    );\n}\n\nexport default connect({\n    error: state`error`,\n    close: sequences`clearError`,\n}, ErrorDisplay);\n","// MUI styles for all the things\n// TODO: Is this a good way to do this stuff??\n\nconst drawerWidth = 240;\n\nconst styles = (theme) => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    content: {\n        textAlign: 'center',\n        flexGrow: 1,\n        alignSelf: 'center',\n        maxWidth: 800,\n    },\n    appBar: {\n        top: 0,\n        bottom: 'auto',\n        marginLeft: drawerWidth,\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n        },\n    },\n    toolbar: theme.mixins.toolbar,\n    bottomBar: {\n        bottom: 0,\n        top: 'auto',\n        marginLeft: drawerWidth,\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n        },\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n        [theme.breakpoints.up('sm')]: {\n          display: 'none',\n        },\n    },\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    icon: {\n        fontSize: 20,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    ssPreview: {\n        width: '95%',\n    },\n});\n\nexport default styles;\n","export default [\n    'https://www.googleapis.com/auth/drive.appdata',\n    'https://www.googleapis.com/auth/drive.file',\n].join(' ');\n","/* eslint import/no-webpack-loader-syntax: off */\nimport describe from 'aot-loader!./describe-loader';\n\nexport default describe;\n","export default {\"dirty\":false,\"raw\":\"v0.3.0-15-g57cc4eb\",\"hash\":\"g57cc4eb\",\"distance\":15,\"tag\":\"v0.3.0\",\"semver\":{\"options\":{\"loose\":false,\"includePrerelease\":false},\"loose\":false,\"raw\":\"v0.3.0\",\"major\":0,\"minor\":3,\"patch\":0,\"prerelease\":[],\"build\":[],\"version\":\"0.3.0\"},\"suffix\":\"15-g57cc4eb\",\"semverString\":\"0.3.0+15.g57cc4eb\"}","import React, {Component} from 'react';\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport {withStyles} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport SendIcon from '@material-ui/icons/Send';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {createMuiTheme, MuiThemeProvider} from '@material-ui/core/styles';\nimport gold from '@material-ui/core/colors/amber';\n\n// Has to be last mui import\nimport Box from '@material-ui/core/Box';\n\nimport DocumentMeta from 'react-document-meta';\nimport HttpsRedirect from 'react-https-redirect';\nimport queryString from 'query-string';\n\nimport './App.css';\nimport QRDialog from './QRDialog';\nimport Questions from './Questions';\nimport PagesDrawer from './PagesDrawer';\nimport ConfirmSubmitDialog from './ConfirmSubmitDialog';\nimport DebugButton from './DebugButton';\nimport ErrorDisplay from './ErrorDisplay';\n\nimport styles from './styles';\nimport scope from './googleScopes';\nimport describe from './describe';\n\nconst version = describe.semverString;\nconst meta = {\n    title: `${process.env.REACT_APP_NAME} ${version}`,\n    meta: {\n        'ui-version': version,\n    },\n};\n\n// Parse query string\nconst params = queryString.parse(window.location.search);\n\n// All the following keys are optional.\n// We try our best to provide a great default value.\nconst theme = createMuiTheme({\n    typography: {\n        useNextVariants: true,\n    },\n    palette: {\n        type: params.theme || 'dark',\n        primary: gold,\n    },\n});\n\nconst README_URL = 'https://docs.google.com/document/d/' +\n        '1wkG-bEYFyqxV-SmYoQmgLTJ1m1pvPvXlnTTnjh60ZFY/edit?usp=sharing';\n\nwindow.addEventListener('beforeinstallprompt', (e) => {\n    // Prevent Chrome 67 and earlier from automatically showing the prompt\n    e.preventDefault();\n    // Stash the event so it can be triggered later.\n    //deferredPrompt = e;\n    if (params.install !== undefined) {\n        e.prompt(); // TODO: Don't show prompt immediately?\n    }\n});\n\nclass App extends Component {\n    componentWillMount() {\n        this.props.init();\n    }\n\n    render() {\n        let {props} = this;\n        const {classes} = props;\n\n        return (\n            <HttpsRedirect>\n            <MuiThemeProvider theme={theme}>\n            <DocumentMeta {...meta} />\n            <React.Fragment>\n            <CssBaseline />\n            <div className={classes.root}>\n                <PagesDrawer\n                    classes={classes}\n                    // Screens sizes to show permanent drawer\n                    permScreens={{smUp: true}}\n                    // Screens sizes to show temporary drawer\n                    tempScreens={{xsDown: true}}\n                    readme={README_URL}\n                />\n                <AppBar position='fixed' className={classes.appBar}>\n                    <Toolbar>\n                        {params.debug !== undefined &&\n                            // Super secret debug button\n                            <DebugButton />\n                        }\n                        <IconButton\n                            className={classes.menuButton}\n                            color='inherit'\n                            onClick={() => props.showNavigation()}\n                            aria-label='Pages'>\n                            <MenuIcon\n                            />\n                        </IconButton>\n                        <Button\n                            color='inherit'\n                            disabled={!props.canSubmit}\n                            onClick={() => props.submit()}>\n                            Submit\n                            <SendIcon />\n                        </Button>\n                        <div className={classes.grow} />\n                        <div className='g-signin2'\n                            data-theme='dark'\n                            data-scope={scope}\n                        />\n                    </Toolbar>\n                </AppBar>\n                <QRDialog\n                    open={props.droneQRScannerActive}\n                    onClose={props.hideDroneQRScanner}\n                />\n                <QRDialog\n                    open={props.sensorQRScannerActive}\n                    onClose={props.hideSensorQRScanner}\n                />\n                <ConfirmSubmitDialog classes={classes} />\n                <main className={classes.content}>\n                    <div className={classes.toolbar} />\n                    { props.initialized && (props.loggedin ?\n                        <Questions\n                            classes={classes}\n                            isSinglePage={params.singlePage !== undefined}\n                            completedHtml={(\n                                <div>\n                                    <Typography color='inherit' >\n                                        Submitting Metadata\n                                    </Typography>\n                                    <Box p={4} >\n                                        <CircularProgress size={100} />\n                                    </Box>\n                                </div>\n                            )}\n                            onComplete={({data}) => props.submitResults()}\n                        />\n                        :\n                        <Box p={4} >\n                            <Typography color='inherit' >\n                                Please sign in to continue.\n                            </Typography>\n                        </Box>\n                    )}\n                    <div className={classes.toolbar} />\n                </main>\n                <ErrorDisplay classes={classes} />\n                <AppBar position='fixed' className={classes.bottomBar}>\n                    <MobileStepper\n                        steps={props.pages.length}\n                        position='static'\n                        activeStep={props.pageNum}\n                        className={classes.mobileStepper}\n                        nextButton={\n                            props.pageNum === props.pages.length - 1 ?\n                                <Button\n                                    color='primary'\n                                    disabled={!props.canSubmit}\n                                    onClick={() => props.submit()}>\n                                    Sumbit\n                                    <SendIcon />\n                                </Button>\n                                :\n                                <Button\n                                    color='primary'\n                                    disabled={!props.canNext}\n                                    onClick={() => props.goNextPage()}>\n                                    Next\n                                    <NavigateNextIcon />\n                                </Button>\n                        }\n                        backButton={\n                            <Button\n                                color='primary'\n                                disabled={!props.canPrev}\n                                onClick={() => props.goPreviousPage()}>\n                                <NavigateBeforeIcon />\n                                Previous\n                            </Button>\n                        }\n                    />\n                </AppBar>\n            </div>\n            </React.Fragment>\n            </MuiThemeProvider>\n            </HttpsRedirect>\n        );\n    }\n}\n\nexport default connect({\n    initialized: state`initialized`,\n    navigationOpen: state`navigationOpen`,\n    showNavigation: sequences`showNavigation`,\n    hideNavigation: sequences`hideNavigation`,\n    setSurveyPage: sequences`setSurveyPage`,\n    pages: state`pages`,\n    pageNum: state`pageNum`,\n    goNextPage: sequences`goNextPage`,\n    goPreviousPage: sequences`goPreviousPage`,\n    submit: sequences`completeSurvey`,\n    questions: state`questions`,\n    droneQRScannerActive: state`droneQRScannerActive`,\n    sensorQRScannerActive: state`sensorQRScannerActive`,\n    showDroneQRScanner: sequences`showDroneQRScanner`,\n    showSensorQRScanner: sequences`showSensorQRScanner`,\n    hideDroneQRScanner: sequences`hideDroneQRScanner`,\n    hideSensorQRScanner: sequences`hideSensorQRScanner`,\n    init: sequences`init`,\n    loggedin: state`loggedin`,\n    login: sequences`login`,\n    logout: sequences`logout`,\n    google: state`google`,\n    createSheet: sequences`createSheet`,\n    submitResults: sequences`submitResults`,\n    canSubmit: state`canSubmit`,\n    canNext: state`canNext`,\n    canPrev: state`canPrev`,\n}, withStyles(styles)(App));\n","import {Reaction} from 'cerebral';\nimport {state, moduleState, props, sequences} from 'cerebral/tags'\nimport {set, merge, when, parallel} from 'cerebral/factories';\n\nimport ls from 'local-storage';\n\nexport default (paths) => ({\n    providers: {\n        localstore: {\n            get(key) {\n                return ls.get(key);\n            },\n\n            set(key, val) {\n                return ls.set(key, val);\n            },\n\n            clear() {\n                return ls.clear();\n            },\n        },\n    },\n\n    state: {\n        initialized: false,\n    },\n\n    sequences: {\n        persistState: [\n            when(moduleState`initialized`), // Wait for init?\n            {\n                true: ({localstore, props}) => {\n                    let {key, val} = props;\n                    return {success: localstore.set(key, val)};\n                },\n                false: [],\n            },\n        ],\n        clear: [\n            parallel('clear paths', paths.map(path => [\n                ({localstore}) => ({val: localstore.clear(path)}),\n            ])),\n        ],\n        init: [\n            // Load each path from store and set it in state\n            parallel('get paths', paths.map(path => [\n                ({localstore}) => ({val: localstore.get(path)}),\n                when(props`val`, val => val === null),\n                {\n                    true: [], // Ignore null/unset keys\n                    false: [\n                        when(props`val`, val => typeof val === 'object'),\n                        {\n                            true: [merge(state`${path}`, props`val`)],\n                            false: [set(state`${path}`, props`val`)],\n                        }\n                    ],\n                }\n            ])),\n            set(moduleState`initialized`, true),\n        ],\n    },\n\n    // Generate a reaction for each path in the store\n    reactions: paths.map(path => {\n        let reaction = Reaction(\n            {\n                val: state`${path}`,\n            },\n            // TODO: Why didn't using moduleSequences work??\n            //({val, get}) => get(moduleSequences`persistState`)({key: path, val})\n            ({val, get}) => {\n                const name = reaction.modulePath.join('.');\n                const sequence = get(sequences`${name}.persistState`);\n                return sequence({key: path, val});\n            }\n        );\n        return {[path]: reaction};\n    }).reduce((obj, reaction) => Object.assign(obj, reaction), {}),\n});\n","import Promise from 'bluebird';\n//import {state} from 'cerebral';\nimport googleapi from 'google-client-api';\nimport XLSX from 'xlsx';\nimport {Apixu} from 'apixu';\nimport ducky from 'ducky';\n\nimport * as errors from './errors';\nimport model from '../surveyModel';\nimport scope from '../googleScopes';\n\nimport describe from '../describe';\n\nexport const geolocation = {\n    async getCurrentLoc() {\n        try {\n            return await new Promise((resolve, reject) =>\n                    navigator.geolocation.getCurrentPosition(resolve, reject))\n                .then(pos => pos.coords);\n        } catch (err) {\n            let msg;\n\n            switch (err.code) {\n                case 1: // PERMISSION_DENIED\n                    msg = 'Permission denied';\n                    break;\n                case 2: // POSITION_UNAVAILABLE\n                    msg = 'Position unavailable';\n                    break;\n                case 3: // TIMEOUT\n                    msg = 'Timeout obtaining position';\n                    break;\n                default:\n                    msg = 'Unknown error';\n            }\n\n            throw new errors.GetLocationError(msg);\n        }\n    }\n};\n\nexport const survey = {\n    setAnswer(name, value) {\n        model.model.setValue(name, value);\n    },\n\n    setPage(num) {\n        model.model.currentPageNo = num;\n    },\n\n    nextPage() {\n        return model.model.nextPage();\n    },\n\n    previousPage() {\n        return model.model.prevPage();\n    },\n\n    setData(data) {\n        model.model.data = data;\n    },\n\n    submit() {\n        return model.model.completeLastPage();\n    },\n};\n\nlet gapi;\nexport const gapiClient = {\n    // Do one-time gapi setup not effected by login/logout\n    async init({login, logout}) {\n        gapi = Promise.resolve(googleapi())\n            // Load client library\n            .tap(({load}) => new Promise((resolve, reject) => load('client', {\n                callback: resolve,\n                onerror: reject,\n                timeout: 10000,\n                ontimeout: reject,\n            })))\n            // Initialize client (load sheets and drive APIs)\n            .tap(({client}) => client.init({\n                discoveryDocs: [\n                    'https://www.googleapis.com/discovery/v1/apis/drive/v3/rest',\n                    'https://sheets.googleapis.com/$discovery/rest?version=v4'\n                ],\n                scope,\n            }))\n            // Listen for login/logout\n            .tap(({auth2}) => {\n                let auth = auth2.getAuthInstance();\n                let listener = signedIn => {\n                    if (!signedIn) {\n                        logout && this.context.get(logout)();\n                    } else {\n                        let user = auth.currentUser.get().getBasicProfile();\n                        login && this.context.get(login)({\n                            name: user.getName(),\n                        });\n                    }\n                };\n\n                auth.isSignedIn.listen(listener);\n                listener(auth.isSignedIn.get());\n            });\n        await gapi;\n    },\n\n    async get(/*scope*/) { // TODO: Fix/remove code for incremental scopes?\n        return gapi\n            .tap(({auth2}) => {\n                let user = auth2.getAuthInstance().currentUser.get();\n\n                // Request needed scopes from user\n                if (!user.hasGrantedScopes(scope)) {\n                    return user.grant({scope});\n                }\n            })\n            .get('client');\n    },\n\n    async disconnect() {\n        (await gapi).auth2.getAuthInstance().currentUser.get().disconnect();\n    },\n};\nconst appdataScope = [\n    'https://www.googleapis.com/auth/drive.appdata',\n    //'https://www.googleapis.com/auth/drive.file',\n].join(' ');\nexport const googleappdata = {\n    async getData() {\n        let {drive} = await this.context.gapiClient.get(appdataScope);\n\n        let result;\n        try {\n            ({result} = await drive.files.list({\n                spaces: 'appDataFolder',\n                q: \"name='config.json'\",\n                fields: 'files(id, appProperties)',\n            }));\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n\n        let file = result.files[0] || {};\n        return {\n            data: file.appProperties,\n            id: file.id,\n        };\n    },\n\n    async initData({body = {}}) {\n        let {drive} = await this.context.gapiClient.get(appdataScope);\n\n        try {\n            let {result} = await drive.files.create({\n                resource: {\n                    name: 'config.json',\n                    mimeType: 'application/json',\n                    parents: ['appDataFolder'],\n                    appProperties: body,\n                fields: 'id',\n                },\n            });\n            return result.id;\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n    },\n\n    async updateData({body = {}, id}) {\n        let {drive} = await this.context.gapiClient.get(appdataScope);\n\n        try {\n            let {result} = await drive.files.update({\n                fileId: id,\n                resource: {\n                    name: 'config.json',\n                    mimeType: 'application/json',\n                    appProperties: body,\n                },\n            });\n            return result;\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n    },\n};\nconst sheetsScope = 'https://www.googleapis.com/auth/drive.file';\n// Decide sheet version based on semver\nconst {semver} = describe;\nconst sheetVer = semver.major || semver.minor / 10;\nexport const googlesheets = {\n    async createSheet() {\n        let {sheets} = await this.context.gapiClient.get(sheetsScope);\n\n        const ver = googlesheets.getVersion();\n        const properties = {\n            title: `${process.env.REACT_APP_NAME} metadata uploads v${ver}`,\n        };\n        try {\n            let {result} = await sheets.spreadsheets.create({properties});\n            return result;\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n    },\n\n    getVersion() {\n        return sheetVer;\n    },\n\n    async getSheet(id) {\n        let {sheets} = await this.context.gapiClient.get(sheetsScope);\n\n        let result;\n        try {\n            ({result} = await sheets.spreadsheets.values.get({\n                spreadsheetId: id,\n                range: ['Sheet1'],\n            }));\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n\n        if (!result.values) {\n            return [];\n        }\n\n        let sheet = XLSX.utils.aoa_to_sheet(result.values);\n        return XLSX.utils.sheet_to_json(sheet);\n    },\n\n    async writeSheet(id, data) {\n        const sheetsURL = 'https://docs.google.com/spreadsheets';\n        let {sheets} = await this.context.gapiClient.get(sheetsScope);\n\n        // Format data with spreadsheet lib\n        let sheet = XLSX.utils.json_to_sheet(data);\n        let values = XLSX.utils.sheet_to_json(sheet, {header: 1});\n\n        try {\n            let {result} = await sheets.spreadsheets.values.update({\n                spreadsheetId: id,\n                range: sheet['!ref'],\n                valueInputOption: 'USER_ENTERED', // 'RAW'\n                includeValuesInResponse: false,\n            }, {\n                majorDimension: 'ROWS',\n                values,\n            });\n            let row = data.length + 1;\n            return {\n                ...result,\n                // TODO: How to better handle URL from ID etc.?\n                resultsUrl: `${sheetsURL}/d/${id}#gid=0&range=${row}:${row}`\n            };\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n    },\n\n    async addRow(id, cols, row) {\n        let {sheets} = await this.context.gapiClient.get(sheetsScope);\n\n        return sheets.spreadsheets.values.append({\n            spreadsheetId: id,\n            valueInputOption: 'USER_ENTERED', // 'RAW'\n            insertDataOption: 'INSERT_ROWS', // 'OVERWRITE'\n            includeValuesInResponse: false,\n        }, {\n            majorDimension: 'ROWS',\n            values: [row],\n        });\n    },\n};\nconst driveFilesUrl = 'https://www.googleapis.com/upload/drive/v3/files/';\nexport const googledrive = {\n    async upload(file) {\n        let {drive} = await this.context.gapiClient.get();\n\n        try {\n            let {result} = await drive.files.create({\n                resource: {\n                    name: file.name,\n                    mimeType: file.type,\n                },\n                fields: 'id',\n            })\n\n            // TODO: You really can't sent the body with gapi??? wtf\n            let token = (await this.context.gapiClient.get()).getToken();\n            await fetch(driveFilesUrl + result.id, {\n                method: 'PATCH',\n                headers: new Headers({\n                    'Authorization': `Bearer ${token['access_token']}`,\n                    'Content-Type': file.type,\n                }),\n                body: file,\n            });\n\n            return `https://docs.google.com/uc?export=download&id=${result.id}`;\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n    },\n};\n\n// TODO: Better way to handle arrays and such in a spreadsheet?\nconst fileResult = ducky.validate\n        .compile('[ { content: string, name: string, type: string } ]');\nexport const serialize = {\n    serialize(data) {\n        return data.map((result, i) => {\n            let serialized = {};\n            Object.keys(result).forEach(key => {\n                try {\n                    if (typeof result[key] === 'object') {\n                        if (ducky.validate.execute(result[key], fileResult)) {\n                            /* TODO: Make IMAGE work in google sheets?\n                            serialized[key] =\n                                    `=IMAGE(\"${result[key][0].content}\",3)`;\n                            */\n                            serialized[key] = result[key][0].content;\n                        } else if (result[key]) {\n                            let kkey = '$$' + key;\n                            serialized[kkey] = JSON.stringify(result[key]);\n                        }\n                    } else {\n                        serialized[key] = result[key];\n                    }\n                } catch (err) {\n                    throw new errors.SerializeError(i, key, err);\n                }\n            });\n            return serialized;\n        });\n    },\n\n    deserialize(data) {\n        return data.map((result, i) => {\n            let deserialized = {};\n            Object.keys(result).forEach(key => {\n                try {\n                    if (key.startsWith('$$')) {\n                        if (result[key]) {\n                            let kkey = key.substring(2);\n                            deserialized[kkey] = JSON.parse(result[key]);\n                        }\n                    } else {\n                        deserialized[key] = result[key];\n                    }\n                } catch (err) {\n                    // +2 is for header row and 1 vs 0 indexing\n                    throw new errors.DeserializeError(i + 2, key, err);\n                }\n            });\n            return deserialized;\n        });\n    },\n};\n\nconst apixu = new Apixu({apikey: '5a942f64c1a041238c602818190802'});\nexport const weather = {\n    async current(query) {\n        return (await apixu.current(query)).current;\n    },\n};\n","import {CerebralError} from 'cerebral';\n\nexport class GetLocationError extends CerebralError {\n    constructor(message) {\n        super(message);\n        this.name = 'GetLocationError';\n    }\n}\n\nexport class GAPIError extends CerebralError {\n    constructor(err) {\n        // gapi doesn't always throw the same sorts of things..\n        let error = err;\n        if (err.result && error.result.error) {\n            error = err.result.error;\n        }\n\n        super(error.message);\n        this.name = 'GAPIError';\n        this.result = error;\n    }\n}\n\nexport class SerializeError extends CerebralError {\n    constructor(r, c, err) {\n        super(`Error serializing column \"${c}\" of row ${r}: ${err.message}`);\n        this.name = 'DeserializeError';\n        this.err = err;\n    }\n}\n\nexport class DeserializeError extends CerebralError {\n    constructor(r, c, err) {\n        super(`Error deserializing column \"${c}\" of row ${r}: ${err.message}`);\n        this.name = 'DeserializeError';\n        this.err = err;\n    }\n}\n","import forIn from 'lodash.forin';\n\nimport {state} from 'cerebral/tags';\n\nexport function getCurrentLocation({geolocation}) {\n    return geolocation.getCurrentLoc()\n        .then(({latitude, longitude}) => ({currentLoc: {latitude, longitude}}));\n}\n\nexport function setAnswer({survey, props}) {\n    return survey.setAnswer(props.question, props.answer);\n}\nexport function setSurveyPage({survey, props}) {\n    return survey.setPage(props.pageNum);\n}\nexport function setSurveyData({survey, props}) {\n    return survey.setData(props.data);\n}\nexport function nextPage({survey}) {\n    return {error: survey.nextPage()};\n}\nexport function previousPage({survey}) {\n    return {error: survey.previousPage()};\n}\nexport function completeSurvey({survey, props}) {\n    return {done: survey.submit()};\n}\n\nexport async function initGapi({gapiClient, props}) {\n    return gapiClient.init(props);\n}\nexport async function disconnectGapi({gapiClient}) {\n    return gapiClient.disconnect();\n}\nexport async function createSheet({googlesheets}) {\n    let sheet = await googlesheets.createSheet();\n    return {sheet};\n}\nexport function getSheetVersion({googlesheets}){\n    let version = googlesheets.getVersion();\n    return {version};\n}\nexport async function initSheet({googlesheets, props}) {\n    let {result} = await googlesheets.createSheet();\n    await googlesheets.addRow(result.spreadsheetId, props.headerRow);\n}\nexport async function serializeResults({serialize, props}) {\n    let {results} = props;\n\n    return {results: serialize.serialize(results)};\n}\nexport async function deserializeResults({serialize, props}) {\n    let {results} = props;\n\n    return {results: serialize.deserialize(results)};\n}\nexport async function loadPastResults({googlesheets, path, props}) {\n    let {resultsId} = props;\n\n    try {\n        let results = (await googlesheets.getSheet(resultsId)) || [];\n\n        return path.found({results});\n    } catch (err) {\n        return path.notfound();\n    }\n}\nexport async function uploadResults({googlesheets, props}) {\n    let {results, resultsId} = props;\n\n    return googlesheets.writeSheet(resultsId, results);\n}\n\nexport async function createAppData({googleappdata, props}) {\n    let id = await googleappdata.initData(props);\n\n    return {id};\n}\nexport async function updateAppData({googleappdata, props}) {\n    let result = await googleappdata.updateData(props);\n\n    return {result};\n}\nexport async function loadAppData({googleappdata, path}) {\n    let {data, id} = await googleappdata.getData();\n\n    if (data) {\n        return path.found({body: data, id});\n    } else {\n        return path.notfound();\n    }\n}\n\nexport async function uploadScreenshot({googledrive, props}) {\n    let url = await googledrive.upload(props.file);\n\n    return {url};\n}\n\nexport async function getCurrentWeather({weather, props}) {\n    let query = props.latitude + ',' + props.longitude;\n    return await weather.current(query);\n}\n\nexport function getLastAnswer({get, props}) {\n    let {question} = props;\n\n    try {\n        let data = get(state`pastData`);\n\n        return {answer: data[data.length - 1][question]};\n    } catch (err) {\n        return {};\n    }\n}\n\nexport function initPages({get, store}) {\n    let pages = get(state`questions.pages`);\n    let data = get(state`pastData`);\n\n    pages.forEach(page => {\n        forIn(page, function findKeys(val, key, obj) {\n            switch (key) {\n                case 'autocomplete':\n                    switch (val) {\n                        case 'previous':\n                            let {name} = obj;\n                            obj.choices = data.map(row => row[name])\n                                    .filter(it => !!it);\n                            break;\n                        default:\n                    }\n                    break;\n                default:\n                    if (typeof val === 'object') {\n                        forIn(val, findKeys);\n                    }\n            }\n        });\n    });\n\n    store.merge(state`questions`, {pages});\n}\n","import {set, unset, push, concat, when, equals} from 'cerebral/factories';\nimport {state, sequences, props} from 'cerebral/tags';\nimport * as actions from './actions';\n\nexport const init = [\n    set(props`login`, sequences`login`),\n    set(props`logout`, sequences`logout`),\n    actions.initGapi,\n    ({get}) => get(sequences`store.init`)(),\n    set(state`initialized`, true),\n];\n\nexport const showDroneQRScanner = [set(state`droneQRScannerActive`, true)];\nexport const hideDroneQRScanner = [set(state`droneQRScannerActive`, false)];\nexport const showSensorQRScanner = [set(state`sensorQRScannerActive`, true)];\nexport const hideSensorQRScanner = [set(state`sensorQRScannerActive`, false)];\nexport const showNavigation = [set(state`navigationOpen`, true)];\nexport const hideNavigation = [set(state`navigationOpen`, false)];\n\nexport const setSurveyData = [set(state`surveyData`, props`data`)];\nexport const setAnswer = [actions.setAnswer];\nexport const setSurveyPage = [\n    set(state`pageNum`, props`pageNum`),\n];\nexport const setPages = [set(state`pages`, props`pages`)];\nexport const goNextPage = [\n    actions.nextPage,\n    /*\n    set(props`pageNum`, state`pageNum`, num => num + 1),\n    set(state`pageNum`, props`pageNum`),\n    */\n];\nexport const goPreviousPage = [\n    actions.previousPage,\n    /*\n    set(props`pageNum`, state`pageNum`, num => num - 1),\n    set(state`pageNum`, props`pageNum`),\n    */\n];\nexport const completeSurvey = [actions.completeSurvey];\nexport const setCurrentLocation = [\n    actions.getCurrentLocation,\n    set(props`locations`, state`surveyData.locations`),\n    // Using the push factory seems to break things...\n    ({props}) => ({locations: props.locations.concat(props.currentLoc)}),\n    set(props`question`, 'locations'),\n    set(props`answer`, props`locations`),\n    actions.setAnswer,\n];\n\n// Create a sheet and put corresponding appdata in props...\nconst createSheetWithAppData = [\n    actions.createSheet,\n    set(props`body`, {}),\n    set(props`body.resultsId`, props`sheet.spreadsheetId`),\n    // Only load results for the right version\n    // TODO: Support migrating sheets to higher versions?\n    ({props}) => ({\n        body: {[`resultsId-v${props.version}`]: props.body.resultsId}\n    }),\n];\n\nexport const loadappdata = [\n    actions.getSheetVersion,\n    actions.loadAppData,\n    {\n        found: [],\n        notfound: [\n            createSheetWithAppData,\n            actions.createAppData,\n        ],\n    },\n    ({props}) => ({\n        body: {resultsId: props.body[`resultsId-v${props.version}`]}\n    }),\n    set(state`resultsId`, props`body.resultsId`, id => id || ''),\n    set(state`appdataId`, props`id`),\n];\n\nexport const uploadScreenshot = [\n    actions.uploadScreenshot,\n];\n\n// Run _after_ login\nexport const login = [\n    when(state`loggedin`),\n    {\n        true: [], // Don't login multiple times?\n        false: [\n            set(state`loggedin`, true),\n            loadappdata,\n            set(props`resultsId`, state`resultsId`),\n            actions.loadPastResults,\n            {\n                found: [\n                    actions.deserializeResults,\n                    set(state`pastData`, props`results`),\n                ],\n                notfound: [\n                    createSheetWithAppData,\n                    set(state`resultsId`, props`sheet.spreadsheetId`),\n                    actions.updateAppData,\n                ],\n            },\n            actions.initPages,\n            set(state`loggedin`, props`name`, name => ({name})),\n        ],\n    },\n];\n// Runs _after_ logout\nexport const logout = [\n    set(state`loggedin`, false),\n    set(state`pastData`, []),\n];\n\nexport const disconnectGoogle = [actions.disconnectGapi];\n\nexport const createSheet = [actions.createSheet];\nexport const submitResults = [\n    set(state`submitting`, true),\n    when(state`loggedin`),\n    {\n        true: [],\n        false: login,\n    },\n    push(state`pastData`, state`surveyData`),\n    set(props`results`, state`pastData`),\n    actions.serializeResults,\n    set(props`resultsId`, state`resultsId`),\n    actions.uploadResults,\n    set(state`resultsUrl`, props`resultsUrl`),\n    set(state`confirmSubmitOpen`, true),\n    ({get}) => get(sequences`store.clear`)(),\n];\n\nexport const confirmSubmit = [\n    set(state`confirmSubmitOpen`, false),\n    () => window.location.reload(),\n];\n\nexport const setDebugMenuOpen = [set(state`debugMenuOpen`, props`open`)];\n\nexport const getCurrentLocationWeather = [\n    actions.getCurrentLocation,\n    set(props`latitude`, props`currentLoc.latitude`),\n    set(props`longitude`, props`currentLoc.longitude`),\n    actions.getCurrentWeather,\n];\n\nexport const autofill = [\n    when(\n        props`question`,\n        state`surveyData`,\n        (q, d) => d[q] !== null && d[q] !== undefined,\n    ),\n    {\n        true: [], // Don't autofill if already answered\n        false: [\n            equals(props`autofill`),\n            {\n                person: [set(props`answer`, state`loggedin.name`)],\n                // TODO: Combine lat/lon into one autofill?\n                latitude: [\n                    actions.getCurrentLocation,\n                    set(props`answer`, props`currentLoc.latitude`),\n                ],\n                longitude: [\n                    actions.getCurrentLocation,\n                    set(props`answer`, props`currentLoc.longitude`),\n                ],\n                location: [\n                    actions.getCurrentLocation,\n                    set(props`answer`, props`currentLoc`,\n                        ({latitude, longitude}) =>\n                            `${latitude},${longitude}`),\n                ],\n                // TODO: Combine weather autofills?\n                temperature: [\n                    getCurrentLocationWeather,\n                    set(props`answer`, props`temp_f`),\n                ],\n                windspeed: [\n                    getCurrentLocationWeather,\n                    set(props`answer`, props`wind_mph`),\n                ],\n                winddirection: [\n                    getCurrentLocationWeather,\n                    set(props`answer`, props`wind_dir`),\n                ],\n                lastused: [\n                    actions.getLastAnswer,\n                ],\n                otherwise: [],\n            },\n        ],\n    },\n];\n\nexport const displayError = [\n    ({error}) => console.error(error),\n    set(state`error`, props`error`),\n];\nexport const clearError =[unset(state`error`)];\n","import {state} from 'cerebral/tags';\n\nexport const canSubmit = get =>\n        get(state`initialized`) &&\n        get(state`loggedin`) &&\n        !get(state`submitting`) &&\n        !get(state`pages`).some(page => page.error);\n\nexport const canNext = get => {\n    let page = get(state`pageNum`);\n    let pages = get(state`pages`);\n\n    return page < (pages.length - 1) && !pages[page].error;\n}\n\nexport const canPrev = get => {\n    let page = get(state`pageNum`);\n\n    return page > 0;\n}\n","import {DateTime} from 'luxon';\n\nexport default {\n    name: 'general',\n    title: 'General',\n    elements: [\n        {\n            name: 'jobname',\n            title: 'Job/Project name',\n            type: 'text',\n            autocomplete: 'previous',\n            choices: [\n                'Bob Ross',\n                'Rusty Shackleford',\n            ],\n        },\n        {\n            name: 'purpose',\n            title: 'Operation/Purpose',\n            type: 'dropdown',\n            choices: [\n                'UAV',\n                'Planting',\n                {\n                    value: 'Spraying',\n                    text: 'Spraying/Spreading',\n                },\n                'Tillage',\n                'Harvest'\n            ],\n            isRequired: true,\n            autofill: 'lastused',\n        },\n        {\n            name: 'datetime',\n            title: 'Date/Time of data',\n            type: 'text',\n            inputType: 'datetime-local',\n            defaultValue: DateTime.local().toFormat(\"yyyy-MM-dd'T'HH:mm:ss\"),\n        },\n        {\n            type: 'panel',\n            elements: [\n                {\n                    // TODO: Support selecting region on a map\n                    name: 'locations',\n                    title: 'Collection locations',\n                    type: 'paneldynamic',\n                    panelCount: 1,\n                    minPanelCount: 1,\n                    panelAddText: 'Add Location',\n                    panelRemoveText: 'Remove Location',\n                    templateTitle: 'Location #{panelIndex}',\n                    templateElements: [\n                        {\n                            name: 'location',\n                            title: 'Lat/Lon or Label',\n                            type: 'text',\n                            autofill: 'location',\n                            isRequired: true,\n                        },\n                    ],\n                },\n                /*\n                {\n                    name: 'location-button',\n                    title: 'Add current location',\n                    type: 'html',\n                    cerebralbutton: 'setCurrentLocation',\n                },\n                */\n            ],\n        },\n    ]\n};\n","export default {\n    name: 'place',\n    title: 'Place',\n    elements: [\n        {\n            name: 'client',\n            title: 'Grower (or Client)',\n            type: 'text',\n            placeHolder: 'Farmer Frank',\n            autofill: 'lastused',\n            autocomplete: 'previous',\n        },\n        {\n            name: 'operation',\n            title: 'Farm (or Operation)',\n            type: 'text',\n            placeHolder: 'Frank Farms',\n            autocomplete: 'previous',\n        },\n        {\n            name: 'site',\n            title: 'Field (or Site)',\n            type: 'text',\n            placeHolder: 'East Field',\n            autocomplete: 'previous',\n        },\n        {\n            name: 'crop',\n            title: 'Crop',\n            type: 'text',\n            placeHolder: 'corn',\n            autocomplete: 'previous',\n        },\n        {\n            name: 'prev-crop',\n            title: 'Previous Crop',\n            type: 'text',\n            placeHolder: 'beans',\n            autocomplete: 'previous',\n        },\n        {\n            name: 'weather',\n            title: 'Weather',\n            type: 'panel',\n            elements: [\n                {\n                    name: 'weather-button',\n                    title: 'Get Current Weather',\n                    type: 'html',\n                    visible: false,\n                    // TODO: Implement functionality for button\n                    cerebralbutton: 'setCurrentWeather',\n                },\n                {\n                    name: 'temperature',\n                    title: 'Temperature (℉)',\n                    type: 'text',\n                    autofill: 'temperature',\n                    //inputType: 'number',\n                    placeHolder: '60 F'\n                },\n                {\n                    name: 'windspeed',\n                    title: 'Wind Speed (mph)',\n                    type: 'text',\n                    autofill: 'windspeed',\n                    //inputType: 'number',\n                    placeHolder: '10 mph',\n                },\n                {\n                    name: 'winddirection',\n                    title: 'Wind Direction',\n                    type: 'text',\n                    autofill: 'winddirection',\n                    //inputType: 'number',\n                    placeHolder: 'ENE',\n                },\n            ],\n        },\n    ],\n};\n","// TODO: Get these from sheets\nconst implements_ = [\n    {\n        make: 'Sony',\n        model: 'A6000',\n        type: 'RGB',\n    },\n    {\n        make: 'Parrot',\n        model: 'Sequoia',\n        type: 'Multispectral',\n    },\n];\n\nexport default {\n    name: 'planting-machinery',\n    title: 'Machinery',\n    visibleIf:\n        '[\"Planting\", \"Spraying\", \"Tillage\", \"Harvest\"] contains {purpose}',\n    elements: [\n        {\n            name: 'machinery-operator',\n            title: 'Operator',\n            type: 'text',\n            isRequired: true,\n            autocomplete: 'previous',\n            autofill: 'lastused',\n        },\n        {\n            name: 'machinery-spray-or-spread',\n            visibleIf: '{purpose} == \"Spraying\"',\n            title: 'Spray or Spread',\n            type: 'text',\n            description: 'TODO: ASk Buckmaster what this is supposed to be',\n            enableIf: 'false',\n            isRequired: true,\n        },\n        {\n            name: 'machinery-pull-type',\n            visibleIf: '{purpose} == \"Spraying\"',\n            title: 'Pull Type',\n            type: 'text',\n            description: 'TODO: ASk Buckmaster what this is supposed to be',\n            enableIf: 'false',\n            isRequired: true,\n        },\n        {\n            name: 'machinery-makemodel',\n            // TODO: change title based on operation?\n            title: 'Machine Make and Model',\n            type: 'dropdown',\n            hideIfChoicesEmpty: false,\n            isRequired: true,\n            hasOther: true,\n            storeOthersAsComment: false,\n            otherText: 'Add new make and model',\n            otherErrorText:\n                'Please enter the new make and model',\n            autocomplete: 'previous',\n            autofill: 'lastused',\n            choices: [\n                // TODO: Have default choices from a secondary sheet?\n            ],\n        },\n        {\n            name: 'planter-makemodel',\n            visibleIf: '{purpose} == \"Planting\"',\n            title: 'Planter Make and Model',\n            type: 'dropdown',\n            hideIfChoicesEmpty: false,\n            isRequired: true,\n            hasOther: true,\n            storeOthersAsComment: false,\n            otherText: 'Add new make and model',\n            otherErrorText:\n                'Please enter the new make and model',\n            autocomplete: 'previous',\n            autofill: 'lastused',\n            choices: [\n                // TODO: Have default choices from a secondary sheet?\n            ],\n        },\n        {\n            name: 'planter-num-rows',\n            visibleIf: '{purpose} == \"Planting\"',\n            title: 'Number of Planter Rows',\n            type: 'text',\n            isRequired: true,\n            inputType: 'number',\n            autofill: 'lastused',\n        },\n        {\n            name: 'machinery-implement',\n            title: 'Implement',\n            type: 'panel',\n            visibleIf: '{purpose} == \"Tillage\"',\n            elements: [\n                {\n                    name: 'machinery-implement-type',\n                    title: 'Type',\n                    type: 'dropdown',\n                    isRequired: true,\n                    hasOther: true,\n                    storeOthersAsComment: false,\n                    otherText: 'Add new type',\n                    otherErrorText: 'Please enter the new type',\n                    choices: [\n                    ],\n                },\n                {\n                    name: 'machinery-implement-makemodel',\n                    title: 'Make and Model',\n                    type: 'dropdown',\n                    hideIfChoicesEmpty: false,\n                    isRequired: true,\n                    hasOther: true,\n                    storeOthersAsComment: false,\n                    otherText: 'Add new make and model',\n                    otherErrorText:\n                        'Please enter the new make and model',\n                    choices: implements_.map((e, i) => ({\n                        text: e.make + ' ' + e.model,\n                        value: e.make + ' ' + e.model,\n                        //value: i,\n                        visibleIf: `{machinery-implement-type} == \"${e.type}\"`,\n                    })),\n                },\n            ],\n        },\n        {\n            name: 'machinery-calibration-report',\n            visibleIf: '{purpose} == \"Planting\"',\n            title: 'Calibration Report',\n            type: 'text',\n            isRequired: true,\n        },\n        {\n            name: 'machinery-row-width',\n            visibleIf: '{purpose} == \"Planting\"',\n            title: 'Row Width (ft)',\n            type: 'text',\n            inputType: 'number',\n            placeHolder: '3 ft',\n            isRequired: true,\n            autofill: 'lastused',\n        },\n        {\n            name: 'machinery-width',\n            visibleIf: '[\"Spraying\", \"Tillage\"] contains {purpose}',\n            title: 'Width (ft)',\n            type: 'text',\n            inputType: 'number',\n            placeHolder: '30 ft',\n            isRequired: true,\n            autofill: 'lastused',\n        },\n        {\n            name: 'machinery-hearder-width',\n            visibleIf: '{purpose} == \"Harvest\"',\n            title: 'Header Width (ft or rows)',\n            type: 'text',\n            inputType: 'number',\n            placeHolder: '30 ft',\n            isRequired: true,\n            autofill: 'lastused',\n        },\n        {\n            name: 'machinery-sprayer-type',\n            visibleIf: '{purpose} == \"Spraying\"',\n            title: 'Type',\n            type: 'dropdown',\n            isRequired: true,\n            autofill: 'lastused',\n            choices: [\n                'Nozzles',\n                'Drop Tube',\n                'Spinner',\n            ],\n        },\n        {\n            name: 'machinery-rate',\n            visibleIf: '{purpose} == \"Spraying\"',\n            title: 'Rate',\n            type: 'text',\n            isRequired: true,\n        },\n        {\n            name: 'machinery-speed',\n            title: 'Speed (mph)',\n            type: 'text',\n            isRequired: true,\n            inputType: 'number',\n            placeHolder: '15 mph',\n        },\n        {\n            name: 'machinery-depth',\n            visibleIf: '[\"Planting\", \"Tillage\"] contains {purpose}',\n            title: 'Depth (in)',\n            type: 'text',\n            isRequired: true,\n            inputType: 'number',\n            placeHolder: '1.5 in',\n        },\n        {\n            name: 'machinery-yield-mapped',\n            visibleIf: '{purpose} == \"Harvest\"',\n            title: 'Yield Mapped?',\n            type: 'boolean',\n            isRequired: true,\n        },\n        {\n            name: 'machinery-yield-calibrated',\n            visibleIf: '{purpose} == \"Harvest\"',\n            title: 'Yield Monitor Calibrated?',\n            type: 'boolean',\n            isRequired: true,\n        },\n        {\n            name: 'machinery-controller-makemodel',\n            visibleIf: '[\"Planting\", \"Spraying\"] contains {purpose}',\n            title: 'Controller Make and Model',\n            type: 'dropdown',\n            hideIfChoicesEmpty: false,\n            isRequired: false,\n            hasOther: true,\n            storeOthersAsComment: false,\n            otherText: 'Add new make and model',\n            otherErrorText:\n                'Please enter the new make and model',\n            autocomplete: 'previous',\n            autofill: 'lastused',\n            choices: [\n                // TODO: Have default choices from a secondary sheet?\n            ],\n        },\n        {\n            name: 'machinery-variable-rate',\n            visibleIf: '{purpose} == \"Spraying\"',\n            title: 'Variable Rate?',\n            type: 'boolean',\n            isRequired: true,\n        },\n        {\n            name: 'machinery-variable-rate-source',\n            visibleIf:\n                '{purpose} == \"Spraying\" and {machinery-variable-rate} == true',\n            title: 'Variable Rate Source',\n            type: 'text',\n            isRequired: true,\n            autocomplete: 'previous',\n        },\n    ],\n};\n","export default {\n    name: 'planting-seed',\n    title: 'Seed',\n    visibleIf: '{purpose} == \"Planting\"',\n    elements: [\n        {\n            name: 'seed-brand',\n            title: 'Brand',\n            type: 'text',\n            autofill: 'lastused',\n            autocomplete: 'previous',\n            isRequired: true,\n        },\n        {\n            name: 'seed-variety',\n            title: 'Variety',\n            type: 'text',\n            autofill: 'lastused',\n            autocomplete: 'previous',\n            isRequired: true,\n        },\n        {\n            name: 'seed-treatments',\n            title: 'Treatments',\n            type: 'tagbox',\n            select2Config: {\n                tags: true,\n                theme: 'default',\n                placeholder: 'add treatments',\n                //allowClear: true,\n                tokenSeparators: [','],\n                //containerCssClass: 'sv_q_text_root',\n            },\n            //autofill: 'lastused',\n            //autocomplete: 'previous',\n            isRequired: true,\n            placeHolder: 'Choose Treatments',\n            choices: [\n                'a',\n                'b',\n            ],\n        },\n        {\n            name: 'seed-population',\n            title: 'Population',\n            type: 'text',\n            inputType: 'number',\n            autofill: 'lastused',\n            isRequired: true,\n        },\n    ],\n};\n","export default {\n    name: 'b4ufly',\n    title: 'B4UFLY Status',\n    visible: false, // Get rid of B4UFLY page for now\n    elements: [\n        {\n            name: 'b4ufly-status',\n            title: 'Status',\n            type: 'dropdown',\n            isRequired: true,\n            choices: [\n                'proceed with caution',\n                'flying in controlled airspace (class B/C/D/E)',\n                'other',\n            ],\n        },\n        {\n            name: 'b4ufly-extra',\n            title: '',\n            type: 'panel',\n            visibleIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\" or {b4ufly-status} == \"other\"',\n            elements: [\n                {\n                    name: 'b4ufly-airport-operator',\n                    title: 'Airport Operator Contact',\n                    type: 'text',\n                    requiredIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\n                },\n                {\n                    name: 'b4ufly-control-tower',\n                    title: 'Control Tower Contact',\n                    type: 'text',\n                    requiredIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\n                },\n                {\n                    name: 'b4ufly-prior-authorization',\n                    title: 'Prior Authorization',\n                    type: 'text',\n                    requiredIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\n                },\n            ],\n        },\n        {\n            // TODO: What the heck even is this?\n            name: 'b4ufly-options',\n            title: 'Options',\n            type: 'checkbox',\n            isRequired: true,\n            choices: [\n                'checked NOTAMS',\n                'checked flight restrictions',\n                'checked local restrictions',\n                'checked upcoming restrictions',\n                'checked national parks',\n            ],\n        },\n        {\n            name: 'b4ufly-certificate',\n            title: 'COW or COA #',\n            type: 'text',\n        },\n    ],\n};\n","// TODO: Get these from sheets\nconst drones = [\n    {\n        make: 'Test',\n        model: 'testtest',\n        type: 'Fixed wing',\n    },\n];\n\nexport default {\n    name: 'uav-drone',\n    title: 'UAV Info',\n    visibleIf: '{purpose} == \"UAV\"',\n    elements: [\n        {\n            // TODO: make required for submission only\n            name: 'drone-screenshots',\n            title: 'Flight Planning Screenshots',\n            type: 'panel',\n            elements: [\n                {\n                    name: 'drone-flight-planning',\n                    title: 'Screenshot of Flight Planning',\n                    type: 'file',\n                    storeDataAsText: false,\n                    acceptedTypes: 'image/*',\n                    allowMultiple: false,\n                },\n                {\n                    name: 'drone-advanced-flight-planning',\n                    title: 'Screenshot of Advanced Flight Planning',\n                    type: 'file',\n                    storeDataAsText: false,\n                    acceptedTypes: 'image/*',\n                    allowMultiple: false,\n                },\n            ],\n        },\n        {\n            name: 'drone-qr',\n            title: 'Scan drone QR code',\n            type: 'html',\n            cerebralbutton: 'showDroneQRScanner',\n            visible: false,\n        },\n        {\n            name: 'uav-drone-type',\n            title: 'Type',\n            type: 'dropdown',\n            isRequired: true,\n            defaultValue: 'Fixed wing',\n            hasOther: true,\n            choices: [\n                'Fixed wing',\n                'Multi-rotor',\n                'Helicopter',\n            ],\n        },\n        {\n            name: 'uav-drone-makemodel',\n            title: 'Make and Model',\n            type: 'dropdown',\n            autofill: 'lastused',\n            hideIfChoicesEmpty: false,\n            hasOther: true,\n            storeOthersAsComment: false,\n            otherText: 'Add new make and model',\n            otherErrorText: 'Please enter the new make and model',\n            choices: drones.map((e, i) => ({\n                text: e.make + ' ' + e.model,\n                value: e.make + ' ' + e.model,\n                //value: i,\n                visibleIf: `{uav-drone-type} == \"${e.type}\"`,\n            })),\n        },\n    ]\n};\n","export default {\n    name: 'uav-operator',\n    title: 'UAV Operator',\n    visibleIf: '{purpose} == \"UAV\"',\n    elements: [\n        {\n            name: 'remote-pics',\n            title: 'Remote Pilot in Command (PIC)',\n            description: 'remote PIC - A person who holds a remote pilot certificate with an sUAS rating and has the final authority and responsibility for the operation and safety of an sUAS operation conducted under part 107.',\n            type: 'paneldynamic',\n            panelCount: 1,\n            minPanelCount: 1,\n            panelAddText: 'Add Remote PIC',\n            panelRemoveText: 'Remove Remote PIC',\n            autofill: 'lastused',\n            templateTitle: 'Remote PIC #{panelIndex}',\n            templateElements: [\n                {\n                    name: 'remote-pic-name',\n                    title: 'Name',\n                    type: 'text',\n                    autocomplete: 'previous',\n                    //autofill: 'person',\n                    isRequired: true,\n                    placeHolder: 'Rusty Shackleford',\n                },\n                {\n                    name: 'remote-pic-certificate',\n                    title: 'Certificate Number or equivalent',\n                    type: 'text',\n                    inputType: 'number',\n                    isRequired: true,\n                    placeHolder: '1234567',\n                    validators: [\n                        {\n                            type: 'regex',\n                            regex: /^[0-9]{7}$/,\n                            text: 'License number must be 7 digits'\n                        }\n                    ]\n                },\n\n            ],\n        },\n        {\n            name: 'observer',\n            title: 'Visual Observer (VO)',\n            description: 'VO - A person acting as a flightcrew member who assists the small UA remote PIC and the person manipulating the controls to see and avoid other air traffic or objects aloft or on the ground.',\n            type: 'paneldynamic',\n            panelCount: 0,\n            panelAddText: 'Add VO',\n            panelRemoveText: 'Remove VO',\n            templateTitle: 'VO #{panelIndex}',\n            templateElements: [\n                {\n                    name: 'observer-name',\n                    title: 'Name',\n                    type: 'text',\n                    isRequired: true,\n                    placeHolder: 'John Doe'\n                },\n            ],\n        },\n    ]\n};\n","// TODO: Get these from sheets\nconst sensors = [\n    {\n        make: 'Sony',\n        model: 'A6000',\n        type: 'RGB',\n    },\n    {\n        make: 'Parrot',\n        model: 'Sequoia',\n        type: 'Multispectral',\n    },\n];\n\nexport default {\n    name: 'uav-sensors',\n    title: 'Sensors',\n    visibleIf: '{purpose} == \"UAV\"',\n    elements: [\n        {\n            name: 'sensor-qr',\n            type: 'html',\n            cerebralbutton: 'showSensorQRScanner',\n            visible: false,\n        },\n        {\n            name: 'sensors',\n            title: 'Sensors',\n            type: 'paneldynamic',\n            panelCount: 0,\n            panelAddText: 'Add Sensor',\n            panelRemoveText: 'Remove Sensor',\n            autofill: 'lastused',\n            templateTitle: 'Sensor #{panelIndex}',\n            templateElements: [\n                {\n                    name: 'uav-sensor-type',\n                    valueName: 'type',\n                    title: 'Type',\n                    type: 'dropdown',\n                    isRequired: true,\n                    hasOther: true,\n                    storeOthersAsComment: false,\n                    otherText: 'Add new type',\n                    otherErrorText: 'Please enter the new type',\n                    choices: [\n                        'RGB',\n                        'Multispectral',\n                        'Hyperspectral',\n                        'LiDAR',\n                        'Thermal',\n                    ],\n                },\n                {\n                    name: 'uav-sensor-makemodel',\n                    title: 'Make and Model',\n                    type: 'dropdown',\n                    hideIfChoicesEmpty: false,\n                    isRequired: true,\n                    hasOther: true,\n                    storeOthersAsComment: false,\n                    otherText: 'Add new make and model',\n                    otherErrorText:\n                        'Please enter the new make and model',\n                    choices: sensors.map((e, i) => ({\n                        text: e.make + ' ' + e.model,\n                        value: e.make + ' ' + e.model,\n                        //value: i,\n                        visibleIf: `{panel.type} == \"${e.type}\"`,\n                    })),\n                },\n            ],\n        },\n    ],\n};\n","import * as pages0 from './pages/0-general.js'; import * as pages1 from './pages/1-place.js'; import * as pages2 from './pages/machinery.js'; import * as pages3 from './pages/planting/seed.js'; import * as pages4 from './pages/uav/b4ufly.js'; import * as pages5 from './pages/uav/drone.js'; import * as pages6 from './pages/uav/operator.js'; import * as pages7 from './pages/uav/sensors.js'; let pages = [pages0, pages1, pages2, pages3, pages4, pages5, pages6, pages7];\n\n// Load the default export of all pages\nexport default pages.map(page => page.default);\n","/* eslint import/no-webpack-loader-syntax: off */\nimport pages from '!import-glob!./pages-loader';\n\npages.forEach(page => {\n    // Add a footer to each page\n    page.elements.push(\n        {\n            name: `notes-${page.name}`,\n            title: 'Notes or comments',\n            type: 'comment',\n        },\n        {\n            type: 'html',\n            html: '* Indicates required field',\n        },\n    );\n});\n\nexport default pages;\n","import localstore from './modules/localstore';\n\nimport * as providers from './providers';\nimport * as sequences from './sequences';\nimport * as computeds from './computeds';\nimport * as errors from './errors';\n\n// TODO: Should this be here??\nimport pages from '../pages';\n\n// Parts of state to keep in localstorage\nconst store = localstore(['pageNum', 'surveyData']);\n\nexport default {\n    sequences,\n    state: {\n        ...computeds,\n        initialized: false,\n        loggedin: null,\n        appdataId: null,\n        resultsId: null,\n        submitting: false,\n        navigationOpen: false,\n        confirmSubmitOpen: false,\n        droneQRScannerActive: false,\n        sensorQRScannerActive: false,\n        surveyData: null,\n        pastData: [],\n        pages: [],\n        pageNum: 0,\n        questions: {\n            showNavigationButtons: false,\n            goNextPageAutomatic: true,\n            clearInvisibleValues: 'onHidden',\n            checkErrorsMode: 'onValueChanged',\n            pages,\n        },\n    },\n    catch: [\n        // TODO: Pop up toast or something about giving permission?\n        //[errors.GetLocationError, ({error}) => console.error(error)],\n        //[Error, ({error}) => console.error(error)],\n        [Error, sequences.displayError],\n    ],\n    providers,\n    modules: {\n        store,\n        //storage,\n    },\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from 'cerebral';\nimport {Container} from '@cerebral/react';\nimport Devtools from 'cerebral/devtools';\n\nimport AppComponent from './App';\nimport main from './main';\n\nconst app = App(main, {\n    devtools: process.env.NODE_ENV === 'production' ?\n        null : Devtools({host: 'localhost:8000', reconnect: true}),\n    throwToConsole: true,\n    noRethrow: false,\n    returnSequencePromise: true,\n});\n\n// Run init sequence\napp.on('initialized:model', () => console.log('sadsad') && app.getSequence('init')());\n\nReactDOM.render(\n    <Container app={app}>\n        <AppComponent />\n    </Container>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nif (process.env.NODE_ENV === 'production') {\n    serviceWorker.register();\n} else {\n    serviceWorker.unregister();\n}\n"],"sourceRoot":""}