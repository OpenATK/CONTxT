{"version":3,"sources":["serviceWorker.js","QRDialog.js","surveyModel.js","Questions.js","PagesDrawer.js","ConfirmSubmitDialog.js","DebugButton.js","App.js","main/modules/localstore/index.js","main/providers.js","main/errors.js","main/actions.js","main/sequences.js","main/index.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","connect","props","react_default","a","createElement","Dialog_default","fullScreen","open","AppBar_default","Toolbar_default","IconButton_default","color","onClick","onClose","aria-label","Close_default","Typography_default","variant","react_qr_reader_lib_default","style","width","onScan","data","onData","surveyModel","model","Survey","metaData","addProperty","name","default","Questions","_this","this","_this$props","get","palette","theme","themeColors","ThemeColors","primary","main","dark","text","secondary","divider","background","paper","light","applyTheme","questions","_templateObject","pageNum","_templateObject2","undefined","currentPageNo","reaction","_templateObject3","_ref","_templateObject4","_ref2","updatePages","setData","survey","setPages","pages","visiblePages","map","page","hasErrors","title","_this2","_this$props2","Object","objectWithoutProperties","survey_react","assign","onCurrentPageChanged","_templateObject5","setPage","onPageVisibleChanged","bind","onPageAdded","onValueChanged","_ref3","value","setTimeout","completedHtml","ReactDOMServer","renderToString","onAfterRenderQuestion","_ref5","asyncToGenerator","regenerator_default","mark","_callee","_ref4","question","htmlElement","autofill","seq","wrap","_context","prev","next","sent","cerebralbutton","abrupt","sequences","_templateObject6","ReactDOM","render","Button_default","stop","_x","_x2","apply","arguments","Component","_templateObject7","init","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","withTheme","navigationOpen","PagesDrawer_templateObject","showNavigation","PagesDrawer_templateObject2","hideNavigation","PagesDrawer_templateObject3","setSurveyPage","PagesDrawer_templateObject4","PagesDrawer_templateObject5","PagesDrawer_templateObject6","_props$classes","classes","contents","align","className","grow","noWrap","Divider_default","List_default","ListItem_default","key","button","selected","ListItemIcon_default","Warning_default","Done_default","ListItemText_default","secondaryTypographyProps","drawer","Hidden_default","permScreens","implementation","SwipeableDrawer_default","onOpen","drawerPaper","tempScreens","Drawer_default","ConfirmSubmitDialog_templateObject","resultsUrl","ConfirmSubmitDialog_templateObject2","confirm","ConfirmSubmitDialog_templateObject3","handleClose","aria-labelledby","aria-describedby","DialogTitle_default","id","DialogContent_default","DialogContentText_default","Link_default","href","DialogActions_default","autoFocus","DebugButton_templateObject","setState","DebugButton_templateObject2","submitResults","DebugButton_templateObject3","disconnect","DebugButton_templateObject4","aria-owns","aria-haspopup","process","core_Menu_default","MenuItem_default","params","queryString","parse","search","createMuiTheme","typography","useNextVariants","type","gold","addEventListener","e","preventDefault","install","prompt","App","lib_default","core_styles","Fragment","CssBaseline_default","root","src_PagesDrawer","smUp","xsDown","position","appBar","debug","src_DebugButton","menuButton","Menu_default","disabled","some","submit","Send_default","data-theme","src_QRDialog","droneQRScannerActive","hideDroneQRScanner","sensorQRScannerActive","hideSensorQRScanner","src_ConfirmSubmitDialog","content","toolbar","src_Questions","isSinglePage","singlePage","onComplete","bottomBar","MobileStepper_default","steps","length","activeStep","mobileStepper","nextButton","goNextPage","NavigateNext_default","backButton","goPreviousPage","NavigateBefore_default","App_templateObject","App_templateObject2","App_templateObject3","App_templateObject4","App_templateObject5","App_templateObject6","App_templateObject7","App_templateObject8","App_templateObject9","App_templateObject10","App_templateObject11","App_templateObject12","showDroneQRScanner","App_templateObject13","showSensorQRScanner","_templateObject14","_templateObject15","_templateObject16","_templateObject17","login","_templateObject18","logout","_templateObject19","google","_templateObject20","createSheet","_templateObject21","_templateObject22","withStyles","display","alignItems","justifyContent","textAlign","flexGrow","alignSelf","maxWidth","defineProperty","top","bottom","marginLeft","breakpoints","up","concat","mixins","marginRight","flexShrink","client","gapi","GetLocationError","_CerebralError","message","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","inherits","CerebralError","GAPIError","_CerebralError2","err","result","SerializeError","_CerebralError3","r","c","_this3","DeserializeError","_CerebralError4","_this4","geolocation","getCurrentLoc","_getCurrentLoc","msg","Promise","resolve","reject","getCurrentPosition","pos","coords","t0","t1","code","errors","setAnswer","setValue","num","nextPage","previousPage","prevPage","completeLastPage","gapiClient","_init","_callee2","_context2","googleapi","tap","load","callback","onerror","timeout","ontimeout","discoveryDocs","auth","auth2","getAuthInstance","listener","signedIn","user","currentUser","getBasicProfile","context","getName","isSignedIn","listen","_get","_callee3","_context3","grants","scope","reduce","b","grant","_disconnect","_callee4","_context4","googleappdata","getData","_getData","_callee5","_ref6","drive","_ref7","_context5","files","list","spaces","q","fields","appProperties","initData","_initData","_callee6","_ref8","_ref8$body","body","_ref9","_ref10","_context6","create","resource","mimeType","parents","googlesheets","_createSheet","_callee7","_ref11","sheets","_ref12","_context7","spreadsheets","getSheet","_getSheet","_callee8","_ref13","_ref14","sheet","_context8","values","spreadsheetId","range","XLSX","utils","aoa_to_sheet","sheet_to_json","_x3","writeSheet","_writeSheet","_callee9","sheetsURL","_ref15","_ref16","row","_context9","json_to_sheet","header","update","valueInputOption","includeValuesInResponse","majorDimension","objectSpread","_x4","_x5","addRow","_addRow","_callee10","cols","_ref17","_context10","append","insertDataOption","_x6","_x7","_x8","serialize","i","serialized","keys","forEach","JSON","stringify","deserialize","deserialized","startsWith","kkey","substring","answer","main_actions_createSheet","results","resultsId","_ref18","path","found","notfound","paths","set","sequences_templateObject","sequences_templateObject2","sequences_templateObject3","sequences_templateObject4","_initGapi","sequences_templateObject5","sequences_templateObject6","sequences_templateObject7","sequences_templateObject8","sequences_templateObject9","sequences_templateObject10","sequences_templateObject11","setSurveyData","sequences_templateObject12","sequences_templateObject13","actions","sequences_templateObject14","sequences_templateObject15","sequences_templateObject16","sequences_templateObject17","completeSurvey","done","setCurrentLocation","currentLoc","latitude","longitude","sequences_templateObject18","sequences_templateObject19","locations","sequences_templateObject20","sequences_templateObject21","sequences_templateObject22","loadappdata","_x10","_loadAppData","_templateObject23","_templateObject24","_templateObject25","_x9","_createAppData","_templateObject26","_templateObject27","_templateObject28","_templateObject29","_loadPastResults","_deserializeResults","_templateObject30","_templateObject31","_templateObject32","_templateObject33","_templateObject34","_templateObject35","disconnectGoogle","_disconnectGapi","when","_templateObject36","true","false","push","_templateObject37","_templateObject38","_templateObject39","_templateObject40","_serializeResults","_templateObject41","_templateObject42","_uploadResults","_templateObject43","_templateObject44","_templateObject45","confirmSubmit","_templateObject46","_templateObject47","reload","setDebugMenuOpen","_templateObject48","_templateObject49","equals","_templateObject50","person","_templateObject51","_templateObject52","otherwise","store","providers","localstore","ls","val","clear","initialized","persistState","moduleState","localstore_templateObject","success","parallel","localstore_templateObject2","localstore_templateObject3","merge","localstore_templateObject4","localstore_templateObject5","localstore_templateObject6","localstore_templateObject7","localstore_templateObject8","reactions","Reaction","localstore_templateObject9","modulePath","join","localstore_templateObject10","sequence","obj","confirmSubmitOpen","surveyData","pastData","showNavigationButtons","goNextPageAutomatic","clearInvisibleValues","checkErrorsMode","elements","choices","defaultValue","inputType","DateTime","local","toFormat","panelCount","minPanelCount","panelAddText","panelRemoveText","templateTitle","templateElements","isRequired","visibleIf","placeHolder","description","validators","regex","allowMultiple","hasOther","hideIfChoicesEmpty","make","enableIf","valueName","requiredIf","html","Error","modules","app","devtools","throwToConsole","noRethrow","on","getSequence","_cerebral_react","src_App_0","document","getElementById","URL","origin","fetch","response","contentType","headers","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.68046daf.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport {connect} from '@cerebral/react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport QrReader from 'react-qr-reader';\n\nfunction QRDialog(props) {\n    return (\n        <Dialog\n            fullScreen\n            open={props.open}\n        >\n          <AppBar>\n            <Toolbar>\n              <IconButton color='inherit' onClick={props.onClose} aria-label='Close'>\n                <CloseIcon />\n              </IconButton>\n              <Typography variant='h6' color='inherit'>\n                Scan QR code\n              </Typography>\n            </Toolbar>\n          </AppBar>\n            <QrReader\n                style={{width: '100%'}}\n                onScan={data => {\n                    if (!data) {\n                        return;\n                    }\n\n\t\t\t\t\tprops.onData(data);\n                    props.onClose();\n                }}\n            />\n        </Dialog>\n    );\n}\n\nexport default connect({\n}, QRDialog);\n","// TODO: This is probably the wrong way to do stuff, but I don't know cerebral\n// Want a singleton of survey model\nexport default {\n    model: null\n};\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactDOMServer from 'react-dom/server';\n\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport Button from '@material-ui/core/Button';\nimport {withTheme} from '@material-ui/core/styles';\n\nimport * as Survey from 'survey-react';\nimport 'survey-react/survey.css';\n\nimport surveyModel from './surveyModel';\n\nSurvey.JsonObject.metaData.addProperty('question', {\n    name: 'cerebralbutton',\n});\n\nSurvey.JsonObject.metaData.addProperty('question', {\n    name: 'autofill',\n    default: false,\n});\n\nclass Questions extends Component {\n    componentWillMount() {\n        const {get, theme} = this.props;\n\n        // Apply MUI theme to survey\n        const {palette} = theme;\n        let themeColors = Survey.StylesManager.ThemeColors['default'];\n        themeColors['$main-color'] = palette.primary.main;\n        themeColors['$main-hover-color'] = palette.primary.dark;\n        themeColors['$text-color'] = palette.text.primary;\n        themeColors['$header-color'] = palette.secondary.main;\n        themeColors['$border-color'] = palette.divider;\n        themeColors['$header-background-color'] = palette.secondary.main;\n        themeColors['$body-background-color'] = palette.background.paper;\n        themeColors['$body-container-background-color'] = palette.background.paper;\n        themeColors['$inputs-background-color'] = palette.background.default;\n        themeColors['$error-color'] = palette.error.main;\n        themeColors['$error-background-color'] = palette.error.light;\n        Survey.StylesManager.applyTheme('default');\n\n        this.model = new Survey.Model(this.props.questions);\n        surveyModel.model = this.model;\n\n        // TODO: I'm sure this is isn't right with cerebral..\n        let data = get(state`surveyData`);\n        if (data) {\n            this.model.data = data;\n        }\n        let pageNum = get(state`pageNum`);\n        if (pageNum !== undefined) {\n            this.model.currentPageNo = pageNum;\n        }\n\n        this.props.reaction('changePage',\n            {\n                pageNum: state`pageNum`,\n            },\n            ({pageNum}) => this.model.currentPageNo = pageNum\n        );\n        this.props.reaction('changeData',\n            {\n                data: state`surveyData`,\n            },\n            ({data}) => this.model.data = data\n        );\n\n        this.updatePages(this.model);\n        this.props.setData({data: this.model.data});\n    }\n\n    updatePages(survey) {\n        this.props.setPages({\n            pages: survey.visiblePages.map((page) => ({\n                error: page.hasErrors(false, false),\n                name: page.name,\n                title: page.title,\n            }))\n        });\n    }\n\n    render() {\n        let {get, ...props} = this.props;\n        return (\n            <Survey.Survey\n                {...props}\n                model={this.model}\n                onCurrentPageChanged={(survey) => {\n                    if (get(state`pageNum`) !== survey.currentPageNo) {\n                        props.setPage({pageNum: survey.currentPageNo});\n                    }\n                }}\n                onPageVisibleChanged={this.updatePages.bind(this)}\n                onPageAdded={this.updatePages.bind(this)}\n                onValueChanged={(survey, {name, value}) => {\n                    props.setData({data: survey.data});\n                    // No idea why, but cerebral freaks out if I call this\n                    // without the setTimeout...\n                    setTimeout(() => this.updatePages(survey));\n                }}\n                completedHtml={\n                    ReactDOMServer.renderToString(props.completedHtml)\n                }\n                onAfterRenderQuestion={\n                    async (survey, {question, htmlElement}) => {\n                        let {autofill} = question;\n                        // Try to autofill if unanswered\n                        if (question.value === undefined && autofill) {\n                            if (typeof autofill === 'function') {\n                                question.value = await autofill(question);\n                            } else {\n                                props.autofill({\n                                    // TODO: How to handle dynamic questions?\n                                    question: question.name,\n                                    autofill,\n                                });\n                            }\n                        }\n                        if (!question.cerebralbutton) {\n                            return;\n                        }\n\n                        let seq = get(sequences`${question.cerebralbutton}`);\n                        ReactDOM.render(\n                            <Button onClick={() => seq()}>\n                                {question.title}\n                            </Button>\n                        , htmlElement);\n                    }\n                }\n            />\n        );\n    }\n}\n\nexport default connect(\n    {\n        questions: state`questions`,\n        init: sequences`initSurvey`,\n        data: state`surveyData`,\n        setData: sequences`setSurveyData`,\n        setPage: sequences`setSurveyPage`,\n        setPages: sequences`setPages`,\n        autofill: sequences`autofill`,\n    },\n    withTheme()(Questions)\n);\n","import React from 'react';\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport WarningIcon from '@material-ui/icons/Warning';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Drawer from '@material-ui/core/Drawer';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nfunction PagesDrawer(props) {\n    const {classes={}} = props;\n\n    const contents = (\n        <div>\n            <Toolbar>\n                <Typography\n                    variant='h6'\n                    color='primary'\n                    align='center'\n                    className={classes.grow}\n                    noWrap\n                >\n                    Pages\n                </Typography>\n            </Toolbar>\n            <Divider />\n            <List>\n                {props.pages.map(({name, title, error}, pageNum) => (\n                    <ListItem\n                        key={name}\n                        button\n                        selected={pageNum === props.pageNum}\n                        className={error ? 'page-err' : 'page-complete'}\n                        onClick={()=>props.setSurveyPage({pageNum})}>\n                        <ListItemIcon>\n                            {error ? <WarningIcon color='error'/> : <DoneIcon />}\n                        </ListItemIcon>\n                        <ListItemText\n                            primary={title}\n                            secondary={error ? 'Incomplete' : 'Complete'}\n                            secondaryTypographyProps={{\n                                color: error ? 'error' : 'textSecondary',\n                            }}\n                        />\n                    </ListItem>\n                ))}\n            </List>\n        </div>\n    );\n\n    return (\n        <nav className={classes.drawer}>\n            <Hidden {...props.permScreens} implementation='js'>\n                <SwipeableDrawer\n                    open={props.navigationOpen}\n                    onOpen={()=>props.showNavigation()}\n                    onClose={()=>props.hideNavigation()}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    {contents}\n                </SwipeableDrawer>\n            </Hidden>\n            <Hidden {...props.tempScreens} implementation='js'>\n                <Drawer\n                    variant='permanent'\n                    open\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    {contents}\n                </Drawer>\n            </Hidden>\n        </nav>\n    );\n}\n\nexport default connect({\n    navigationOpen: state`navigationOpen`,\n    showNavigation: sequences`showNavigation`,\n    hideNavigation: sequences`hideNavigation`,\n    setSurveyPage: sequences`setSurveyPage`,\n    pages: state`pages`,\n    pageNum: state`pageNum`,\n}, PagesDrawer);\n","import React from 'react';\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Link from '@material-ui/core/Link';\n\nfunction ConfirmSubmitDialog(props) {\n    const handleClose = props.confirm;\n    return (\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            aria-labelledby='alert-dialog-title'\n            aria-describedby='alert-dialog-description'\n        >\n            <DialogTitle id='alert-dialog-title'>\n                Successfully submitted metadata\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText id='alert-dialog-description'>\n                    {'Your metadata have been uploaded '}\n                    <Link href={props.resultsUrl}>\n                        here.\n                    </Link>\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color='primary' autoFocus>\n                    OK\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default connect({\n    open: state`confirmSubmitOpen`,\n    resultsUrl: state`resultsUrl`,\n    confirm: sequences`confirmSubmit`,\n}, ConfirmSubmitDialog);\n","import React from 'react';\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nfunction DebugButton(props) {\n    let button = (\n        <Button\n            aria-owns='debug-menu'\n            aria-haspopup='true'\n            onClick={() => props.setState({open: true})}\n            color='inherit'\n        >\n            {process.env.REACT_APP_GIT}\n        </Button>\n    );\n    return (\n        <div>\n            {button}\n            <Menu\n                id='debug-menu'\n                //anchorEl={button}\n                open={props.open || false}\n                onClose={() => props.setState({open: false})}\n            >\n                <MenuItem onClick={() => props.submitResults()}>\n                    Force Submit\n                </MenuItem>\n                <MenuItem onClick={() => props.disconnect()}>\n                    Disconnect Google\n                </MenuItem>\n            </Menu>\n        </div>\n    );\n}\n\nexport default connect({\n    open: state`debugMenuOpen`,\n    setState: sequences`setDebugMenuOpen`,\n    submitResults: sequences`submitResults`,\n    disconnect: sequences`disconnectGoogle`,\n}, DebugButton);\n","import React, {Component} from 'react';\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport {withStyles} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n//import Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport SendIcon from '@material-ui/icons/Send';\n\nimport {createMuiTheme, MuiThemeProvider} from '@material-ui/core/styles';\nimport gold from '@material-ui/core/colors/amber';\n\nimport HttpsRedirect from 'react-https-redirect';\nimport queryString from 'query-string';\n\nimport './App.css';\nimport QRDialog from './QRDialog';\nimport Questions from './Questions';\nimport PagesDrawer from './PagesDrawer';\nimport ConfirmSubmitDialog from './ConfirmSubmitDialog';\nimport DebugButton from './DebugButton';\n\n// Parse query string\nconst params = queryString.parse(window.location.search);\n\n// All the following keys are optional.\n// We try our best to provide a great default value.\nconst theme = createMuiTheme({\n    typography: {\n        useNextVariants: true,\n    },\n    palette: {\n        type: params.theme || 'dark',\n        primary: gold,\n    },\n});\n\nconst drawerWidth = 240;\nconst styles = (theme) => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    content: {\n        textAlign: 'center',\n        flexGrow: 1,\n        alignSelf: 'center',\n        maxWidth: 800,\n    },\n    appBar: {\n        top: 0,\n        bottom: 'auto',\n        marginLeft: drawerWidth,\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n        },\n    },\n    toolbar: theme.mixins.toolbar,\n    bottomBar: {\n        bottom: 0,\n        top: 'auto',\n        marginLeft: drawerWidth,\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n        },\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n        [theme.breakpoints.up('sm')]: {\n          display: 'none',\n        },\n    },\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n});\n\nwindow.addEventListener('beforeinstallprompt', (e) => {\n    // Prevent Chrome 67 and earlier from automatically showing the prompt\n    e.preventDefault();\n    // Stash the event so it can be triggered later.\n    //deferredPrompt = e;\n    if (params.install !== undefined) {\n        e.prompt(); // TODO: Don't show prompt immediately?\n    }\n});\n\nclass App extends Component {\n    componentWillMount() {\n        this.props.init();\n    }\n\n    render() {\n        let {props} = this;\n        const {classes} = props;\n\n        return (\n            <HttpsRedirect>\n            <MuiThemeProvider theme={theme}>\n            <React.Fragment>\n            <CssBaseline />\n            <div className={classes.root}>\n                <PagesDrawer\n                    classes={classes}\n                    // Screens sizes to show permanent drawer\n                    permScreens={{smUp: true}}\n                    // Screens sizes to show temporary drawer\n                    tempScreens={{xsDown: true}}\n                />\n                <AppBar position='fixed' className={classes.appBar}>\n                    <Toolbar>\n                        {params.debug !== undefined &&\n                            // Super secret debug button\n                            <DebugButton />\n                        }\n                        <IconButton\n                            className={classes.menuButton}\n                            color='inherit'\n                            onClick={() => props.showNavigation()}\n                            aria-label='Pages'>\n                            <MenuIcon\n                            />\n                        </IconButton>\n                        <Button\n                            color='inherit'\n                            disabled={props.pages.some(page => page.error)}\n                            onClick={() => props.submit()}>\n                            Submit\n                            <SendIcon />\n                        </Button>\n                        <div className={classes.grow} />\n                        <div className='g-signin2' data-theme='dark' />\n                    </Toolbar>\n                </AppBar>\n                <QRDialog\n                    open={props.droneQRScannerActive}\n                    onClose={props.hideDroneQRScanner}\n                />\n                <QRDialog\n                    open={props.sensorQRScannerActive}\n                    onClose={props.hideSensorQRScanner}\n                />\n                <ConfirmSubmitDialog />\n                <main className={classes.content}>\n                    <div className={classes.toolbar} />\n                    <Questions\n                        isSinglePage={params.singlePage !== undefined}\n                        completedHtml={\n                            (<div> woo done!</div>)\n                        }\n                        onComplete={({data}) => props.submitResults()}\n                    />\n                    <div className={classes.toolbar} />\n                </main>\n                <AppBar position='fixed' className={classes.bottomBar}>\n                    <MobileStepper\n                        steps={props.pages.length}\n                        position='static'\n                        activeStep={props.pageNum}\n                        className={classes.mobileStepper}\n                        nextButton={\n                            <Button\n                                color='primary'\n                                disabled={props.pageNum === props.pages.length - 1}\n                                onClick={() => props.goNextPage()}>\n                                Next\n                                <NavigateNextIcon />\n                            </Button>\n                        }\n                        backButton={\n                            <Button\n                                color='primary'\n                                disabled={props.pageNum === 0}\n                                onClick={() => props.goPreviousPage()}>\n                                <NavigateBeforeIcon />\n                                Previous\n                            </Button>\n                        }\n                    />\n                </AppBar>\n            </div>\n            </React.Fragment>\n            </MuiThemeProvider>\n            </HttpsRedirect>\n        );\n    }\n}\n\nexport default connect({\n    navigationOpen: state`navigationOpen`,\n    showNavigation: sequences`showNavigation`,\n    hideNavigation: sequences`hideNavigation`,\n    setSurveyPage: sequences`setSurveyPage`,\n    pages: state`pages`,\n    pageNum: state`pageNum`,\n    goNextPage: sequences`goNextPage`,\n    goPreviousPage: sequences`goPreviousPage`,\n    submit: sequences`completeSurvey`,\n    questions: state`questions`,\n    droneQRScannerActive: state`droneQRScannerActive`,\n    sensorQRScannerActive: state`sensorQRScannerActive`,\n    showDroneQRScanner: sequences`showDroneQRScanner`,\n    showSensorQRScanner: sequences`showSensorQRScanner`,\n    hideDroneQRScanner: sequences`hideDroneQRScanner`,\n    hideSensorQRScanner: sequences`hideSensorQRScanner`,\n    init: sequences`init`,\n    login: sequences`login`,\n    logout: sequences`logout`,\n    google: state`google`,\n    createSheet: sequences`createSheet`,\n    submitResults: sequences`submitResults`,\n}, withStyles(styles)(App));\n","import {Reaction} from 'cerebral';\nimport {state, moduleState, props, sequences} from 'cerebral/tags'\nimport {set, merge, when, parallel} from 'cerebral/factories';\n\nimport ls from 'local-storage';\n\nexport default (paths) => ({\n    providers: {\n        localstore: {\n            get(key) {\n                return ls.get(key);\n            },\n\n            set(key, val) {\n                return ls.set(key, val);\n            },\n\n            clear() {\n                return ls.clear();\n            },\n        },\n    },\n\n    state: {\n        initialized: false,\n    },\n\n    sequences: {\n        persistState: [\n            when(moduleState`initialized`), // Wait for init?\n            {\n                true: ({localstore, props}) => {\n                    let {key, val} = props;\n                    return {success: localstore.set(key, val)};\n                },\n                false: [],\n            },\n        ],\n        clear: [\n            parallel('clear paths', paths.map(path => [\n                ({localstore}) => ({val: localstore.clear(path)}),\n            ])),\n        ],\n        init: [\n            // Load each path from store and set it in state\n            parallel('get paths', paths.map(path => [\n                ({localstore}) => ({val: localstore.get(path)}),\n                when(props`val`, val => val === null),\n                {\n                    true: [], // Ignore null/unset keys\n                    false: [\n                        when(props`val`, val => typeof val === 'object'),\n                        {\n                            true: [merge(state`${path}`, props`val`)],\n                            false: [set(state`${path}`, props`val`)],\n                        }\n                    ],\n                }\n            ])),\n            set(moduleState`initialized`, true),\n        ],\n    },\n\n    // Generate a reaction for each path in the store\n    reactions: paths.map(path => {\n        let reaction = Reaction(\n            {\n                val: state`${path}`,\n            },\n            // TODO: Why didn't using moduleSequences work??\n            //({val, get}) => get(moduleSequences`persistState`)({key: path, val})\n            ({val, get}) => {\n                const name = reaction.modulePath.join('.');\n                const sequence = get(sequences`${name}.persistState`);\n                return sequence({key: path, val});\n            }\n        );\n        return {[path]: reaction};\n    }).reduce((obj, reaction) => Object.assign(obj, reaction), {}),\n});\n","import Promise from 'bluebird';\n//import {state} from 'cerebral';\nimport googleapi from 'google-client-api';\nimport XLSX from 'xlsx';\n\nimport * as errors from './errors';\nimport model from '../surveyModel';\n\nexport const geolocation = {\n    async getCurrentLoc() {\n        try {\n            return await new Promise((resolve, reject) =>\n                    navigator.geolocation.getCurrentPosition(resolve, reject))\n                .then(pos => pos.coords);\n        } catch (err) {\n            let msg;\n\n            switch (err.code) {\n                case 1: // PERMISSION_DENIED\n                    msg = 'Permission denied';\n                    break;\n                case 2: // POSITION_UNAVAILABLE\n                    msg = 'Position unavailable';\n                    break;\n                case 3: // TIMEOUT\n                    msg = 'Timeout obtaining position';\n                    break;\n                default:\n                    msg = 'Unknown error';\n            }\n\n            throw new errors.GetLocationError(msg);\n        }\n    }\n};\n\nexport const survey = {\n    setAnswer(name, value) {\n        model.model.setValue(name, value);\n    },\n\n    setPage(num) {\n        model.model.currentPageNo = num;\n    },\n\n    nextPage() {\n        return model.model.nextPage();\n    },\n\n    previousPage() {\n        return model.model.prevPage();\n    },\n\n    setData(data) {\n        model.model.data = data;\n    },\n\n    submit() {\n        return model.model.completeLastPage();\n    },\n};\n\nlet client;\nlet gapi;\nexport const gapiClient = {\n    // Do one-time gapi setup not effected by login/logout\n    async init({login, logout}) {\n        gapi = Promise.resolve(googleapi())\n            // Load client library\n            .tap(({load}) => new Promise((resolve, reject) => load('client', {\n                callback: resolve,\n                onerror: reject,\n                timeout: 10000,\n                ontimeout: reject,\n            })))\n            // Initialize client (load sheets and drive APIs)\n            .tap(({client}) => client.init({\n                discoveryDocs: [\n                    'https://www.googleapis.com/discovery/v1/apis/drive/v3/rest',\n                    'https://sheets.googleapis.com/$discovery/rest?version=v4'\n                ],\n            }))\n            // Listen for login/logout\n            .tap(({auth2}) => {\n                let auth = auth2.getAuthInstance();\n                let listener = signedIn => {\n                    if (!signedIn) {\n                        client = undefined;\n                        logout && this.context.get(logout)();\n                    } else {\n                        let user = auth.currentUser.get().getBasicProfile();\n                        login && this.context.get(login)({\n                            name: user.getName(),\n                        });\n                    }\n                };\n\n                auth.isSignedIn.listen(listener);\n                listener(auth.isSignedIn.get());\n            });\n        await gapi;\n    },\n\n    async get() {\n        if (client) {\n            return client;\n        }\n\n        client = await gapi\n            // Request needed scopes from user\n            .tap(({auth2}) => {\n                const grants = {\n                    scope: [\n                        'https://www.googleapis.com/auth/drive.file',\n                        'https://www.googleapis.com/auth/drive.appdata',\n                    ].reduce((a, b) => `${a} ${b}`),\n                };\n                let auth = auth2.getAuthInstance();\n\n                return auth.currentUser.get().grant(grants);\n            })\n            .get('client');\n\n        return client;\n    },\n\n    async disconnect() {\n        (await gapi).auth2.getAuthInstance().currentUser.get().disconnect();\n    },\n}\nexport const googleappdata = {\n    async getData() {\n        let {drive} = await this.context.gapiClient.get();\n\n        let result;\n        try {\n            ({result} = await drive.files.list({\n                spaces: 'appDataFolder',\n                q: \"name='config.json'\",\n                fields: 'files(id, appProperties)',\n            }));\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n\n        return result.files[0] && result.files[0].appProperties;\n    },\n\n    async initData({body = {}}) {\n        let {drive} = await this.context.gapiClient.get();\n\n        try {\n            let {result} = await drive.files.create({\n                resource: {\n                    name: 'config.json',\n                    mimeType: 'application/json',\n                    parents: ['appDataFolder'],\n                    appProperties: body,\n                },\n            });\n            return result;\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n    },\n}\nexport const googlesheets = {\n    async createSheet() {\n        let {sheets} = await this.context.gapiClient.get();\n\n        try {\n            let {result} = await sheets.spreadsheets.create({}, {});\n            return result;\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n    },\n\n    async getSheet(id) {\n        let {sheets} = await this.context.gapiClient.get();\n\n        let result;\n        try {\n            ({result} = await sheets.spreadsheets.values.get({\n                spreadsheetId: id,\n                range: ['Sheet1'],\n            }));\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n\n        if (!result.values) {\n            return [];\n        }\n\n        let sheet = XLSX.utils.aoa_to_sheet(result.values);\n        return XLSX.utils.sheet_to_json(sheet);\n    },\n\n    async writeSheet(id, data) {\n        const sheetsURL = 'https://docs.google.com/spreadsheets';\n        let {sheets} = await this.context.gapiClient.get();\n\n        // Format data with spreadsheet lib\n        let sheet = XLSX.utils.json_to_sheet(data);\n        let values = XLSX.utils.sheet_to_json(sheet, {header: 1});\n\n        try {\n            let {result} = await sheets.spreadsheets.values.update({\n                spreadsheetId: id,\n                range: sheet['!ref'],\n                valueInputOption: 'USER_ENTERED', // 'RAW'\n                includeValuesInResponse: false,\n            }, {\n                majorDimension: 'ROWS',\n                values,\n            });\n            let row = data.length + 1;\n            return {\n                ...result,\n                // TODO: How to better handle URL from ID etc.?\n                resultsUrl: `${sheetsURL}/d/${id}#gid=0&range=${row}:${row}`\n            };\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n    },\n\n    async addRow(id, cols, row) {\n        let {sheets} = await this.context.gapiClient.get();\n\n        return sheets.spreadsheets.values.append({\n            spreadsheetId: id,\n            valueInputOption: 'USER_ENTERED', // 'RAW'\n            insertDataOption: 'INSERT_ROWS', // 'OVERWRITE'\n            includeValuesInResponse: false,\n        }, {\n            majorDimension: 'ROWS',\n            values: [row],\n        });\n    },\n};\n\n// TODO: Better way to handle arrays and such in a spreadsheet?\nexport const serialize = {\n    serialize(data) {\n        return data.map((result, i) => {\n            let serialized = {};\n            Object.keys(result).forEach(key => {\n                try {\n                    if (typeof result[key] === 'object') {\n                        if (result[key]) {\n                            let kkey = '$$' + key;\n                            serialized[kkey] = JSON.stringify(result[key]);\n                        }\n                    } else {\n                        serialized[key] = result[key];\n                    }\n                } catch (err) {\n                    throw new errors.SerializeError(i, key, err);\n                }\n            });\n            return serialized;\n        });\n    },\n\n    deserialize(data) {\n        return data.map((result, i) => {\n            let deserialized = {};\n            Object.keys(result).forEach(key => {\n                try {\n                    if (key.startsWith('$$')) {\n                        if (result[key]) {\n                            let kkey = key.substring(2);\n                            deserialized[kkey] = JSON.parse(result[key]);\n                        }\n                    } else {\n                        deserialized[key] = result[key];\n                    }\n                } catch (err) {\n                    // +2 is for header row and 1 vs 0 indexing\n                    throw new errors.DeserializeError(i + 2, key, err);\n                }\n            });\n            return deserialized;\n        });\n    },\n};\n","import {CerebralError} from 'cerebral';\n\nexport class GetLocationError extends CerebralError {\n    constructor(message) {\n        super(message);\n        this.name = 'GetLocationError';\n    }\n}\n\nexport class GAPIError extends CerebralError {\n    constructor(err) {\n        // gapi doesn't always throw the same sorts of things..\n        let error = err;\n        if (err.result && error.result.error) {\n            error = err.result.error;\n        }\n\n        super(error.message);\n        this.name = 'GAPIError';\n        this.result = error;\n    }\n}\n\nexport class SerializeError extends CerebralError {\n    constructor(r, c, err) {\n        super(`Error serializing column \"${c}\" of row ${r}: ${err.message}`);\n        this.name = 'DeserializeError';\n        this.err = err;\n    }\n}\n\nexport class DeserializeError extends CerebralError {\n    constructor(r, c, err) {\n        super(`Error deserializing column \"${c}\" of row ${r}: ${err.message}`);\n        this.name = 'DeserializeError';\n        this.err = err;\n    }\n}\n","//import {state} from 'cerebral';\n\nexport function getCurrentLocation({geolocation}) {\n    return geolocation.getCurrentLoc()\n        .then(({latitude, longitude}) => ({currentLoc: {latitude, longitude}}));\n}\n\nexport function setAnswer({survey, props}) {\n    return survey.setAnswer(props.question, props.answer);\n}\nexport function setSurveyPage({survey, props}) {\n    return survey.setPage(props.pageNum);\n}\nexport function setSurveyData({survey, props}) {\n    return survey.setData(props.data);\n}\nexport function nextPage({survey}) {\n    return {error: survey.nextPage()};\n}\nexport function previousPage({survey}) {\n    return {error: survey.previousPage()};\n}\nexport function completeSurvey({survey, props}) {\n    return {done: survey.submit()};\n}\n\nexport async function initGapi({gapiClient, props}) {\n    return gapiClient.init(props);\n}\nexport async function disconnectGapi({gapiClient}) {\n    return gapiClient.disconnect();\n}\nexport async function createSheet({googlesheets}) {\n    let sheet = await googlesheets.createSheet();\n    return {sheet};\n}\nexport async function initSheet({googlesheets, props}) {\n    let {result} = await googlesheets.createSheet();\n    await googlesheets.addRow(result.spreadsheetId, props.headerRow);\n}\nexport async function serializeResults({serialize, props}) {\n    let {results} = props;\n\n    return {results: serialize.serialize(results)};\n}\nexport async function deserializeResults({serialize, props}) {\n    let {results} = props;\n\n    return {results: serialize.deserialize(results)};\n}\nexport async function loadPastResults({googlesheets, props}) {\n    let {resultsId} = props;\n\n    let results = (await googlesheets.getSheet(resultsId)) || [];\n\n    return {results};\n}\nexport async function uploadResults({googlesheets, props}) {\n    let {results, resultsId} = props;\n\n    return googlesheets.writeSheet(resultsId, results);\n}\n\nexport async function createAppData({googleappdata, props}) {\n    let result = await googleappdata.initData(props);\n\n    return {result};\n}\nexport async function loadAppData({googleappdata, path}) {\n    let data = await googleappdata.getData();\n\n    if (data) {\n        return path.found({body: data});\n    } else {\n        return path.notfound();\n    }\n}\n","import {set, push, when, equals} from 'cerebral/factories';\nimport {state, sequences, props} from 'cerebral/tags';\nimport * as actions from './actions';\n\nexport const init = [\n    set(props`login`, sequences`login`),\n    set(props`logout`, sequences`logout`),\n    actions.initGapi,\n    ({get}) => get(sequences`store.init`)(),\n];\n\nexport const showDroneQRScanner = [set(state`droneQRScannerActive`, true)];\nexport const hideDroneQRScanner = [set(state`droneQRScannerActive`, false)];\nexport const showSensorQRScanner = [set(state`sensorQRScannerActive`, true)];\nexport const hideSensorQRScanner = [set(state`sensorQRScannerActive`, false)];\nexport const showNavigation = [set(state`navigationOpen`, true)];\nexport const hideNavigation = [set(state`navigationOpen`, false)];\n\nexport const setSurveyData = [set(state`surveyData`, props`data`)];\nexport const setAnswer = [actions.setAnswer];\nexport const setSurveyPage = [\n    set(state`pageNum`, props`pageNum`),\n];\nexport const setPages = [set(state`pages`, props`pages`)];\nexport const goNextPage = [\n    actions.nextPage,\n    /*\n    set(props`pageNum`, state`pageNum`, num => num + 1),\n    set(state`pageNum`, props`pageNum`),\n    */\n];\nexport const goPreviousPage = [\n    actions.previousPage,\n    /*\n    set(props`pageNum`, state`pageNum`, num => num - 1),\n    set(state`pageNum`, props`pageNum`),\n    */\n];\nexport const completeSurvey = [actions.completeSurvey];\nexport const setCurrentLocation = [\n    actions.getCurrentLocation,\n    set(props`locations`, state`surveyData.locations`),\n    // Using the push factory seems to break things...\n    ({props}) => ({locations: props.locations.concat(props.currentLoc)}),\n    set(props`question`, 'locations'),\n    set(props`answer`, props`locations`),\n    actions.setAnswer,\n];\n\nexport const loadappdata = [\n    actions.loadAppData,\n    {\n        found: [],\n        notfound: [\n            actions.createSheet,\n            set(props`body`, {}),\n            set(props`body.resultsId`, props`sheet.spreadsheetId`),\n            actions.createAppData,\n        ],\n    },\n    set(state`resultsId`, props`body.resultsId`),\n];\n\n// Run _after_ login\nexport const login = [\n    loadappdata,\n    set(props`resultsId`, state`resultsId`),\n    actions.loadPastResults,\n    actions.deserializeResults,\n    set(state`pastData`, props`results`),\n    set(state`loggedin`, props`name`, name => ({name})),\n];\n// Runs _after_ logout\nexport const logout = [\n    set(state`loggedin`, false),\n    set(state`pastData`, []),\n];\n\nexport const disconnectGoogle = [actions.disconnectGapi];\n\nexport const createSheet = [actions.createSheet];\nexport const submitResults = [\n    when(state`loggedin`),\n    {\n        true: [],\n        false: login,\n    },\n    push(state`pastData`, state`surveyData`),\n    set(props`results`, state`pastData`),\n    actions.serializeResults,\n    set(props`resultsId`, state`resultsId`),\n    actions.uploadResults,\n    set(state`resultsUrl`, props`resultsUrl`),\n    set(state`confirmSubmitOpen`, true),\n];\n\nexport const confirmSubmit = [\n    set(state`confirmSubmitOpen`, false),\n    ({get}) => get(sequences`store.clear`)(),\n    () => window.location.reload(),\n];\n\nexport const setDebugMenuOpen = [set(state`debugMenuOpen`, props`open`)];\n\nexport const autofill = [\n    equals(props`autofill`),\n    {\n        person: [set(props`answer`, state`loggedin.name`)],\n        otherwise: [],\n    },\n    actions.setAnswer,\n];\n","//import { set } from 'cerebral/operators';\n//import { state } from 'cerebral/tags';\n\nimport {DateTime} from 'luxon';\n\nimport localstore from './modules/localstore';\n\nimport * as providers from './providers';\nimport * as sequences from './sequences';\n\n// TODO: Get these from sheets\nconst sensors = [\n    {\n        make: 'Sony',\n        model: 'A6000',\n        type: 'RGB',\n    },\n    {\n        make: 'Parrot',\n        model: 'Sequoia',\n        type: 'Multispectral',\n    },\n];\nconst drones = [\n    {\n        make: 'Test',\n        model: 'testtest',\n        type: 'Fixed wing',\n    },\n];\n\n// Parts of state to keep in localstorage\nconst store = localstore(['pageNum', 'surveyData']);\n\nexport default {\n    sequences,\n    state: {\n        resultsId: null,\n        navigationOpen: true,\n        confirmSubmitOpen: false,\n        droneQRScannerActive: false,\n        sensorQRScannerActive: false,\n        surveyData: null,\n        pastData: [],\n        pages: [],\n        pageNum: 0,\n        questions: {\n            showNavigationButtons: false,\n            goNextPageAutomatic: true,\n            clearInvisibleValues: 'onHidden',\n            checkErrorsMode: 'onValueChanged',\n            pages: [\n                {\n                    name: 'general',\n                    title: 'General',\n                    elements: [\n                        {\n                            name: 'purpose',\n                            title: 'Purpose',\n                            type: 'dropdown',\n                            choices: [\n                                'UAV',\n                                'Planting',\n                                'Spraying',\n                                'Tilling',\n                                'Harvest'\n                            ],\n                            defaultValue: 'UAV' // TODO: remove default later\n                        },\n                        {\n                            name: 'datetime',\n                            title: 'Date/Time of data',\n                            type: 'text',\n                            inputType: 'datetime-local',\n                            defaultValue: DateTime.local()\n                                .toFormat(\"yyyy-MM-dd'T'HH:mm:ss\"),\n                        },\n                        {\n                            type: 'panel',\n                            elements: [\n                                {\n                                    // TODO: Support selecting region on a map\n                                    name: 'locations',\n                                    title: 'Collection locations',\n                                    type: 'paneldynamic',\n                                    panelCount: 1,\n                                    minPanelCount: 1,\n                                    panelAddText: 'Add Location',\n                                    panelRemoveText: 'Remove Location',\n                                    templateTitle: 'Location #{panelIndex}',\n                                    templateElements: [\n                                        {\n                                            name: 'latitude',\n                                            title: 'Latitude',\n                                            type: 'text',\n                                            isRequired: true,\n                                        },\n                                        {\n                                            name: 'longitude',\n                                            title: 'Longitude',\n                                            type: 'text',\n                                            isRequired: true,\n                                        },\n                                    ],\n                                },\n                                {\n                                    name: 'location-button',\n                                    title: 'Add current location',\n                                    type: 'html',\n                                    cerebralbutton: 'setCurrentLocation',\n                                },\n                            ],\n                        },\n                        {\n                            name: 'notes',\n                            title: 'Notes or comments',\n                            type: 'comment',\n                        },\n                    ]\n                },\n                {\n                    name: 'place',\n                    title: 'Place',\n                    visibleIf: '{purpose} == \"UAV\"',\n                    elements: [\n                        {\n                            name: 'client',\n                            title: 'Grower (or Client)',\n                            type: 'text',\n                            autofill: 'person',\n                            placeHolder: 'Farmer Frank',\n                        },\n                        {\n                            name: 'operation',\n                            title: 'Farm (or Operation)',\n                            type: 'text',\n                            placeHolder: 'Frank Farms',\n                        },\n                        {\n                            name: 'site',\n                            title: 'Field (or Site)',\n                            type: 'text',\n                            placeHolder: 'East Field',\n                        },\n                        {\n                            name: 'crop',\n                            title: 'Crop',\n                            type: 'text',\n                            placeHolder: 'corn',\n                        },\n                        {\n                            name:'prev-crop',\n                            title: 'Previous Crop',\n                            type: 'text',\n                            placeHolder: 'beans',\n                        },\n                        {\n                            name: 'weather',\n                            title: 'Weather',\n                            type: 'panel',\n                            elements: [\n                                {\n                                    name: 'weather-button',\n                                    title: 'Get Current Weather',\n                                    type: 'html',\n                                    // TODO: Implement functionality for button\n                                    cerebralbutton: 'setCurrentWeather',\n                                },\n                                {\n                                    name: 'temperature',\n                                    title: 'Temperature',\n                                    type: 'text',\n                                    //inputType: 'number',\n                                    placeHolder: '60 F'\n                                },\n                                {\n                                    name: 'windspeed',\n                                    title: 'Wind Speed',\n                                    type: 'text',\n                                    //inputType: 'number',\n                                    placeHolder: '10 mph',\n                                },\n                                {\n                                    name: 'winddirection',\n                                    title: 'Wind Direction',\n                                    type: 'text',\n                                    //inputType: 'number',\n                                    placeHolder: '35 deg',\n                                },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    name: 'uav-operator',\n                    title: 'UAV Operator',\n                    visibleIf: '{purpose} == \"UAV\"',\n                    elements: [\n                        {\n                            name: 'remote-pics',\n                            title: 'Remote Pilot in Command (PIC)',\n                            description: 'remote PIC - A person who holds a remote pilot certificate with an sUAS rating and has the final authority and responsibility for the operation and safety of an sUAS operation conducted under part 107.',\n                            type: 'paneldynamic',\n                            panelCount: 1,\n                            minPanelCount: 1,\n                            panelAddText: 'Add Remote PIC',\n                            panelRemoveText: 'Remove Remote PIC',\n                            templateTitle: 'Remote PIC #{panelIndex}',\n                            templateElements: [\n                                {\n                                    name: 'remote-pic-name',\n                                    title: 'Name',\n                                    type: 'text',\n                                    isRequired: true,\n                                    placeHolder: 'Rusty Shackleford'\n                                },\n                                {\n                                    name: 'remote-pic-certificate',\n                                    title: 'Certificate Number or equivalent',\n                                    type: 'text',\n                                    isRequired: true,\n                                    placeHolder: '1234567',\n                                    validators: [\n                                        {\n                                            type: 'regex',\n                                            regex: /^[0-9]{7}$/,\n                                            text: 'Invalid license number'\n                                        }\n                                    ]\n                                },\n\n                            ],\n                        },\n                        {\n                            name: 'observer',\n                            title: 'Visual Observer (VO)',\n                            description: 'VO - A person acting as a flightcrew member who assists the small UA remote PIC and the person manipulating the controls to see and avoid other air traffic or objects aloft or on the ground.',\n                            type: 'paneldynamic',\n                            panelCount: 0,\n                            panelAddText: 'Add VO',\n                            panelRemoveText: 'Remove VO',\n                            templateTitle: 'VO #{panelIndex}',\n                            templateElements: [\n                                {\n                                    name: 'observer-name',\n                                    title: 'Name',\n                                    type: 'text',\n                                    isRequired: true,\n                                    placeHolder: 'John Doe'\n                                },\n                            ],\n                        },\n                    ]\n                },\n                {\n                    name: 'uav-drone',\n                    title: 'Drone Info',\n                    visibleIf: '{purpose} == \"UAV\"',\n                    elements: [\n                        {\n                            // TODO: make required for submission only\n                            name: 'drone-screenshots',\n                            title: 'DroneDeploy Screenshots',\n                            type: 'panel',\n                            elements: [\n                                {\n                                    name: 'drone-flight-planning',\n                                    title: 'Screenshot of Flight Planning',\n                                    type: 'file',\n                                    allowMultiple: false,\n                                },\n                                {\n                                    name: 'drone-advanced-flight-planning',\n                                    title: 'Screenshot of Advanced Flight Planning',\n                                    type: 'file',\n                                    allowMultiple: false,\n                                },\n                            ],\n                        },\n                        {\n                            name: 'drone-qr',\n                            title: 'Scan drone QR code',\n                            type: 'html',\n                            cerebralbutton: 'showDroneQRScanner',\n                        },\n                        {\n                            name: 'uav-drone-type',\n                            title: 'Type',\n                            type: 'dropdown',\n                            isRequired: true,\n                            defaultValue: 'Fixed wing',\n                            hasOther: true,\n                            choices: [\n                                'Fixed wing',\n                                'Multi-rotor',\n                                'Helicopter',\n                            ],\n                        },\n                        {\n                            name: 'uav-drone',\n                            title: 'Drone',\n                            type: 'dropdown',\n                            hideIfChoicesEmpty: true,\n                            choices: drones.map((e, i) => ({\n                                text: e.make + ' ' + e.model,\n                                value: e.make + ' ' + e.model,\n                                //value: i,\n                                visibleIf: `{uav-drone-type} == \"${e.type}\"`,\n                            })),\n                        },\n                        {\n                            name: 'uav-drone-make',\n                            title: 'Make',\n                            type: 'text',\n                            enableIf: '{uav-drone} empty'\n                        },\n                        {\n                            name: 'uav-drone-model',\n                            title: 'Model',\n                            type: 'text',\n                            enableIf: '{uav-drone} empty'\n                        },\n                    ]\n                },\n                {\n                    name: 'uav-sensors',\n                    title: 'Sensors',\n                    visibleIf: '{purpose} == \"UAV\"',\n                    elements: [\n                        {\n                            name: 'sensor-qr',\n                            type: 'html',\n                            cerebralbutton: 'showSensorQRScanner',\n                        },\n                        {\n                            name: 'sensors',\n                            title: 'Sensors',\n                            type: 'paneldynamic',\n                            panelCount: 0,\n                            panelAddText: 'Add Sensor',\n                            panelRemoveText: 'Remove Sensor',\n                            templateTitle: 'Sensor #{panelIndex}',\n                            templateElements: [\n                                {\n                                    name: 'uav-sensor-type',\n                                    valueName: 'type',\n                                    title: 'Type',\n                                    type: 'dropdown',\n                                    isRequired: true,\n                                    hasOther: true,\n                                    choices: [\n                                        'RGB',\n                                        'Multispectral',\n                                        'Hyperspectral',\n                                        'LiDAR',\n                                        'Thermal',\n                                    ],\n                                },\n                                {\n                                    name: 'uav-sensor',\n                                    valueName: 'sensor',\n                                    title: 'Sensor',\n                                    type: 'dropdown',\n                                    hideIfChoicesEmpty: true,\n                                    choices: sensors.map((e, i) => ({\n                                        text: e.make + ' ' + e.model,\n                                        value: e.make + ' ' + e.model,\n                                        //value: i,\n                                        visibleIf: `{panel.type} == \"${e.type}\"`,\n                                    })),\n                                },\n                                {\n                                    name: 'uav-sensor-make',\n                                    valueName: 'sensor.make',\n                                    title: 'Make',\n                                    type: 'text',\n                                    enableIf: '{panel.sensor} empty'\n                                },\n                                {\n                                    name: 'uav-sensor-model',\n                                    valueName: 'model',\n                                    title: 'Model',\n                                    type: 'text',\n                                    enableIf: '{panel.sensor} empty'\n                                },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    name: 'b4ufly',\n                    title: 'B4UFLY Status',\n                    visibleIf: '{purpose} == \"UAV\"',\n                    elements: [\n                        {\n                            name: 'b4ufly-status',\n                            title: 'Status',\n                            type: 'dropdown',\n                            isRequired: true,\n                            choices: [\n                                'proceed with caution',\n                                'flying in controlled airspace (class B/C/D/E)',\n                                'other',\n                            ],\n                        },\n                        {\n                            name: 'b4ufly-extra',\n                            title: '',\n                            type: 'panel',\n                            visibleIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\" or {b4ufly-status} == \"other\"',\n                            elements: [\n                                {\n                                    name: 'b4ufly-airport-operator',\n                                    title: 'Airport Operator Contact',\n                                    type: 'text',\n                                    requiredIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\n                                },\n                                {\n                                    name: 'b4ufly-control-tower',\n                                    title: 'Control Tower Contact',\n                                    type: 'text',\n                                    requiredIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\n                                },\n                                {\n                                    name: 'b4ufly-prior-authorization',\n                                    title: 'Prior Authorization',\n                                    type: 'text',\n                                    requiredIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\n                                },\n                            ],\n                        },\n                        {\n                            // TODO: What the heck even is this?\n                            name: 'b4ufly-options',\n                            title: 'Options',\n                            type: 'checkbox',\n                            isRequired: true,\n                            choices: [\n                                'checked NOTAMS',\n                                'checked flight restrictions',\n                                'checked local restrictions',\n                                'checked upcoming restrictions',\n                                'checked national parks',\n                            ],\n                        },\n                        {\n                            name: 'b4ufly-certificate',\n                            title: 'COW or COA #',\n                            type: 'text',\n                        },\n                    ],\n                },\n                {\n                    name: 'planting',\n                    visibleIf: '!({purpose} == \"UAV\")',\n                    elements: [\n                        {\n                            name: 'nyi',\n                            type: 'html',\n                            html: 'Not yet implemented'\n                        }\n                    ]\n                },\n            ]\n        },\n    },\n    catch: [\n        [Error, ({error}) => console.error(error)],\n    ],\n    providers,\n    modules: {\n        store,\n        //storage,\n    },\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from 'cerebral';\nimport {Container} from '@cerebral/react';\nimport Devtools from 'cerebral/devtools';\n\nimport AppComponent from './App';\nimport main from './main';\n\nconst app = App(main, {\n    devtools: process.env.NODE_ENV === 'production' ?\n        null : Devtools({host: 'localhost:8000', reconnect: true}),\n    throwToConsole: true,\n    noRethrow: false,\n});\n\n// Run init sequence\napp.on('initialized:model', () => console.log('sadsad') && app.getSequence('init')());\n\nReactDOM.render(\n    <Container app={app}>\n        <AppComponent />\n    </Container>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nif (process.env.NODE_ENV === 'production') {\n    serviceWorker.register();\n} else {\n    serviceWorker.unregister();\n}\n"],"sourceRoot":""}