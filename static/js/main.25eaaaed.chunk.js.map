{"version":3,"sources":["serviceWorker.js","QRDialog.js","surveyModel.js","Questions.js","PagesDrawer.js","ConfirmSubmitDialog.js","DebugButton.js","App.js","main/modules/localstore/index.js","main/providers.js","main/errors.js","main/actions.js","main/sequences.js","main/index.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","connect","props","react_default","a","createElement","Dialog","fullScreen","open","AppBar","Toolbar","IconButton","color","onClick","onClose","aria-label","Close_default","Typography","variant","react_qr_reader_lib_default","style","width","onScan","data","onData","surveyModel","model","Survey","metaData","addProperty","name","default","Questions","_this","this","_this$props","get","palette","theme","themeColors","ThemeColors","primary","main","dark","text","secondary","divider","background","paper","light","applyTheme","questions","_templateObject","pageNum","_templateObject2","undefined","currentPageNo","reaction","_templateObject3","_ref","_templateObject4","_ref2","updatePages","setData","survey","setPages","pages","visiblePages","map","page","hasErrors","title","_this2","_this$props2","Object","objectWithoutProperties","survey_react","assign","onCurrentPageChanged","_templateObject5","setPage","onPageVisibleChanged","bind","onPageAdded","onValueChanged","_ref3","value","setTimeout","completedHtml","ReactDOMServer","renderToString","onAfterRenderQuestion","_ref5","asyncToGenerator","regenerator_default","mark","_callee","_ref4","question","htmlElement","autofill","_seq","seq","wrap","_context","prev","next","sent","answer","cerebralbutton","abrupt","sequences","_templateObject6","ReactDOM","render","Button","stop","_x","_x2","apply","arguments","Component","_templateObject7","init","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","withTheme","navigationOpen","PagesDrawer_templateObject","showNavigation","PagesDrawer_templateObject2","hideNavigation","PagesDrawer_templateObject3","setSurveyPage","PagesDrawer_templateObject4","PagesDrawer_templateObject5","PagesDrawer_templateObject6","_props$classes","classes","contents","align","className","grow","noWrap","Divider","List","ListItem","key","button","selected","ListItemIcon","Warning_default","Done_default","ListItemText","secondaryTypographyProps","drawer","Hidden","permScreens","implementation","SwipeableDrawer","onOpen","drawerPaper","tempScreens","Drawer","ConfirmSubmitDialog_templateObject","resultsUrl","ConfirmSubmitDialog_templateObject2","confirm","ConfirmSubmitDialog_templateObject3","handleClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","Link","target","href","DialogActions","autoFocus","DebugButton_templateObject","setState","DebugButton_templateObject2","submitResults","DebugButton_templateObject3","disconnect","DebugButton_templateObject4","aria-owns","aria-haspopup","process","Menu_Menu","MenuItem","params","queryString","parse","search","createMuiTheme","typography","useNextVariants","type","gold","addEventListener","e","preventDefault","install","prompt","App","lib_default","MuiThemeProvider","Fragment","CssBaseline","root","src_PagesDrawer","smUp","xsDown","position","appBar","debug","src_DebugButton","menuButton","Menu_default","disabled","submitting","some","submit","Send_default","data-theme","src_QRDialog","droneQRScannerActive","hideDroneQRScanner","sensorQRScannerActive","hideSensorQRScanner","src_ConfirmSubmitDialog","content","toolbar","src_Questions","isSinglePage","singlePage","Box","p","CircularProgress","size","onComplete","bottomBar","MobileStepper","steps","length","activeStep","mobileStepper","nextButton","goNextPage","NavigateNext_default","backButton","goPreviousPage","NavigateBefore_default","App_templateObject","App_templateObject2","App_templateObject3","App_templateObject4","App_templateObject5","App_templateObject6","App_templateObject7","App_templateObject8","App_templateObject9","App_templateObject10","App_templateObject11","App_templateObject12","showDroneQRScanner","App_templateObject13","showSensorQRScanner","_templateObject14","_templateObject15","_templateObject16","_templateObject17","login","_templateObject18","logout","_templateObject19","google","_templateObject20","createSheet","_templateObject21","_templateObject22","_templateObject23","withStyles","display","alignItems","justifyContent","textAlign","flexGrow","alignSelf","maxWidth","defineProperty","top","bottom","marginLeft","breakpoints","up","concat","mixins","marginRight","flexShrink","gapi","GetLocationError","_CerebralError","message","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","inherits","CerebralError","GAPIError","_CerebralError2","err","result","SerializeError","_CerebralError3","r","c","_this3","DeserializeError","_CerebralError4","_this4","geolocation","getCurrentLoc","_getCurrentLoc","msg","Promise","resolve","reject","getCurrentPosition","pos","coords","t0","t1","code","errors","setAnswer","setValue","num","nextPage","previousPage","prevPage","completeLastPage","gapiClient","_init","_callee2","_context2","googleapi","tap","load","callback","onerror","timeout","ontimeout","client","discoveryDocs","auth","auth2","getAuthInstance","listener","signedIn","user","currentUser","getBasicProfile","context","getName","isSignedIn","listen","_get","_callee3","scope","_context3","hasGrantedScopes","grant","_disconnect","_callee4","_context4","appdataScope","join","googleappdata","getData","_getData","_callee5","_ref6","drive","_ref7","_context5","files","list","spaces","q","fields","appProperties","initData","_initData","_callee6","_ref8","_ref8$body","body","_ref9","_ref10","_context6","create","resource","mimeType","parents","_x3","sheetsScope","googlesheets","_createSheet","_callee7","_ref11","sheets","properties","_ref12","_context7","spreadsheets","getSheet","_getSheet","_callee8","_ref13","_ref14","sheet","_context8","values","spreadsheetId","range","XLSX","utils","aoa_to_sheet","sheet_to_json","_x4","writeSheet","_writeSheet","_callee9","sheetsURL","_ref15","_ref16","row","_context9","json_to_sheet","header","update","valueInputOption","includeValuesInResponse","majorDimension","objectSpread","_x5","_x6","addRow","_addRow","_callee10","cols","_ref17","_context10","append","insertDataOption","_x7","_x8","_x9","serialize","i","serialized","keys","forEach","JSON","stringify","deserialize","deserialized","startsWith","kkey","substring","getCurrentLocation","currentLoc","latitude","longitude","main_actions_createSheet","results","resultsId","_ref18","path","found","notfound","paths","set","sequences_templateObject","sequences_templateObject2","sequences_templateObject3","sequences_templateObject4","_initGapi","sequences_templateObject5","sequences_templateObject6","sequences_templateObject7","sequences_templateObject8","sequences_templateObject9","sequences_templateObject10","sequences_templateObject11","setSurveyData","sequences_templateObject12","sequences_templateObject13","actions","sequences_templateObject14","sequences_templateObject15","sequences_templateObject16","sequences_templateObject17","completeSurvey","done","setCurrentLocation","sequences_templateObject18","sequences_templateObject19","locations","sequences_templateObject20","sequences_templateObject21","sequences_templateObject22","loadappdata","_x10","_loadAppData","sequences_templateObject23","_templateObject24","_templateObject25","_createAppData","_templateObject26","_templateObject27","_templateObject28","_templateObject29","_loadPastResults","_deserializeResults","_templateObject30","_templateObject31","_templateObject32","_templateObject33","_templateObject34","_templateObject35","disconnectGoogle","_disconnectGapi","_templateObject36","when","_templateObject37","true","false","push","_templateObject38","_templateObject39","_templateObject40","_templateObject41","_serializeResults","_templateObject42","_templateObject43","_uploadResults","_templateObject44","_templateObject45","_templateObject46","_templateObject47","confirmSubmit","_templateObject48","reload","setDebugMenuOpen","_templateObject49","_templateObject50","equals","_templateObject51","person","_templateObject52","_templateObject53","_templateObject54","_templateObject55","_templateObject56","_templateObject57","otherwise","store","providers","localstore","ls","val","clear","initialized","persistState","moduleState","localstore_templateObject","success","parallel","localstore_templateObject2","localstore_templateObject3","merge","localstore_templateObject4","localstore_templateObject5","localstore_templateObject6","localstore_templateObject7","localstore_templateObject8","reactions","Reaction","localstore_templateObject9","modulePath","localstore_templateObject10","sequence","reduce","obj","loggedin","confirmSubmitOpen","surveyData","pastData","showNavigationButtons","goNextPageAutomatic","clearInvisibleValues","checkErrorsMode","elements","choices","defaultValue","inputType","DateTime","local","toFormat","panelCount","minPanelCount","panelAddText","panelRemoveText","templateTitle","templateElements","isRequired","visibleIf","placeHolder","description","validators","regex","allowMultiple","hasOther","hideIfChoicesEmpty","make","enableIf","valueName","requiredIf","html","Error","modules","app","devtools","throwToConsole","noRethrow","returnSequencePromise","on","getSequence","_cerebral_react","src_App_0","document","getElementById","URL","origin","fetch","response","contentType","headers","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.25eaaaed.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport {connect} from '@cerebral/react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport QrReader from 'react-qr-reader';\n\nfunction QRDialog(props) {\n    return (\n        <Dialog\n            fullScreen\n            open={props.open}\n        >\n          <AppBar>\n            <Toolbar>\n              <IconButton color='inherit' onClick={props.onClose} aria-label='Close'>\n                <CloseIcon />\n              </IconButton>\n              <Typography variant='h6' color='inherit'>\n                Scan QR code\n              </Typography>\n            </Toolbar>\n          </AppBar>\n            <QrReader\n                style={{width: '100%'}}\n                onScan={data => {\n                    if (!data) {\n                        return;\n                    }\n\n\t\t\t\t\tprops.onData(data);\n                    props.onClose();\n                }}\n            />\n        </Dialog>\n    );\n}\n\nexport default connect({\n}, QRDialog);\n","// TODO: This is probably the wrong way to do stuff, but I don't know cerebral\n// Want a singleton of survey model\nexport default {\n    model: null\n};\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactDOMServer from 'react-dom/server';\n\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport Button from '@material-ui/core/Button';\nimport {withTheme} from '@material-ui/core/styles';\n\nimport * as Survey from 'survey-react';\nimport 'survey-react/survey.css';\n\nimport surveyModel from './surveyModel';\n\nSurvey.JsonObject.metaData.addProperty('question', {\n    name: 'cerebralbutton',\n});\n\nSurvey.JsonObject.metaData.addProperty('question', {\n    name: 'autofill',\n    default: false,\n});\n\nclass Questions extends Component {\n    componentWillMount() {\n        const {get, theme} = this.props;\n\n        // Apply MUI theme to survey\n        const {palette} = theme;\n        let themeColors = Survey.StylesManager.ThemeColors['default'];\n        themeColors['$main-color'] = palette.primary.main;\n        themeColors['$main-hover-color'] = palette.primary.dark;\n        themeColors['$text-color'] = palette.text.primary;\n        themeColors['$header-color'] = palette.secondary.main;\n        themeColors['$border-color'] = palette.divider;\n        themeColors['$header-background-color'] = palette.secondary.main;\n        themeColors['$body-background-color'] = palette.background.paper;\n        themeColors['$body-container-background-color'] = palette.background.paper;\n        themeColors['$inputs-background-color'] = palette.background.default;\n        themeColors['$error-color'] = palette.error.main;\n        themeColors['$error-background-color'] = palette.error.light;\n        Survey.StylesManager.applyTheme('default');\n\n        this.model = new Survey.Model(this.props.questions);\n        surveyModel.model = this.model;\n\n        // TODO: I'm sure this is isn't right with cerebral..\n        let data = get(state`surveyData`);\n        if (data) {\n            this.model.data = data;\n        }\n        let pageNum = get(state`pageNum`);\n        if (pageNum !== undefined) {\n            this.model.currentPageNo = pageNum;\n        }\n\n        this.props.reaction('changePage',\n            {\n                pageNum: state`pageNum`,\n            },\n            ({pageNum}) => this.model.currentPageNo = pageNum\n        );\n        this.props.reaction('changeData',\n            {\n                data: state`surveyData`,\n            },\n            ({data}) => this.model.data = data\n        );\n\n        this.updatePages(this.model);\n        this.props.setData({data: this.model.data});\n    }\n\n    updatePages(survey) {\n        this.props.setPages({\n            pages: survey.visiblePages.map((page) => ({\n                error: page.hasErrors(false, false),\n                name: page.name,\n                title: page.title,\n            }))\n        });\n    }\n\n    render() {\n        let {get, ...props} = this.props;\n        return (\n            <Survey.Survey\n                {...props}\n                model={this.model}\n                onCurrentPageChanged={(survey) => {\n                    if (get(state`pageNum`) !== survey.currentPageNo) {\n                        props.setPage({pageNum: survey.currentPageNo});\n                    }\n                }}\n                onPageVisibleChanged={this.updatePages.bind(this)}\n                onPageAdded={this.updatePages.bind(this)}\n                onValueChanged={(survey, {name, value}) => {\n                    props.setData({data: survey.data});\n                    // No idea why, but cerebral freaks out if I call this\n                    // without the setTimeout...\n                    setTimeout(() => this.updatePages(survey));\n                }}\n                completedHtml={\n                    ReactDOMServer.renderToString(props.completedHtml)\n                }\n                onAfterRenderQuestion={\n                    async (survey, {question, htmlElement}) => {\n                        let {autofill} = question;\n                        // Try to autofill if unanswered\n                        if (question.value === undefined && autofill) {\n                            if (typeof autofill === 'function') {\n                                question.value = await autofill(question);\n                            } else {\n                                let seq = await props.autofill({\n                                    // TODO: How to handle dynamic questions?\n                                    question: question.name,\n                                    autofill,\n                                });\n                                question.value = seq && seq.answer;\n                            }\n                        }\n                        if (!question.cerebralbutton) {\n                            return;\n                        }\n\n                        let seq = get(sequences`${question.cerebralbutton}`);\n                        ReactDOM.render(\n                            <Button onClick={() => seq()}>\n                                {question.title}\n                            </Button>\n                        , htmlElement);\n                    }\n                }\n            />\n        );\n    }\n}\n\nexport default connect(\n    {\n        questions: state`questions`,\n        init: sequences`initSurvey`,\n        data: state`surveyData`,\n        setData: sequences`setSurveyData`,\n        setPage: sequences`setSurveyPage`,\n        setPages: sequences`setPages`,\n        autofill: sequences`autofill`,\n    },\n    withTheme(Questions)\n);\n","import React from 'react';\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport WarningIcon from '@material-ui/icons/Warning';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Drawer from '@material-ui/core/Drawer';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nfunction PagesDrawer(props) {\n    const {classes={}} = props;\n\n    const contents = (\n        <div>\n            <Toolbar>\n                <Typography\n                    variant='h6'\n                    color='primary'\n                    align='center'\n                    className={classes.grow}\n                    noWrap\n                >\n                    Pages\n                </Typography>\n            </Toolbar>\n            <Divider />\n            <List>\n                {props.pages.map(({name, title, error}, pageNum) => (\n                    <ListItem\n                        key={name}\n                        button\n                        selected={pageNum === props.pageNum}\n                        className={error ? 'page-err' : 'page-complete'}\n                        onClick={()=>props.setSurveyPage({pageNum})}>\n                        <ListItemIcon>\n                            {error ? <WarningIcon color='error'/> : <DoneIcon />}\n                        </ListItemIcon>\n                        <ListItemText\n                            primary={title}\n                            secondary={error ? 'Incomplete' : 'Complete'}\n                            secondaryTypographyProps={{\n                                color: error ? 'error' : 'textSecondary',\n                            }}\n                        />\n                    </ListItem>\n                ))}\n            </List>\n        </div>\n    );\n\n    return (\n        <nav className={classes.drawer}>\n            <Hidden {...props.permScreens} implementation='js'>\n                <SwipeableDrawer\n                    open={props.navigationOpen}\n                    onOpen={()=>props.showNavigation()}\n                    onClose={()=>props.hideNavigation()}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    {contents}\n                </SwipeableDrawer>\n            </Hidden>\n            <Hidden {...props.tempScreens} implementation='js'>\n                <Drawer\n                    variant='permanent'\n                    open\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    {contents}\n                </Drawer>\n            </Hidden>\n        </nav>\n    );\n}\n\nexport default connect({\n    navigationOpen: state`navigationOpen`,\n    showNavigation: sequences`showNavigation`,\n    hideNavigation: sequences`hideNavigation`,\n    setSurveyPage: sequences`setSurveyPage`,\n    pages: state`pages`,\n    pageNum: state`pageNum`,\n}, PagesDrawer);\n","import React from 'react';\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Link from '@material-ui/core/Link';\n\nfunction ConfirmSubmitDialog(props) {\n    const handleClose = props.confirm;\n    return (\n        <Dialog\n            open={props.open}\n            onClose={handleClose}\n            aria-labelledby='alert-dialog-title'\n            aria-describedby='alert-dialog-description'\n        >\n            <DialogTitle id='alert-dialog-title'>\n                Successfully submitted metadata\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText id='alert-dialog-description'>\n                    {'Your metadata have been uploaded '}\n                    <Link target='_blank' href={props.resultsUrl}>\n                        here.\n                    </Link>\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color='primary' autoFocus>\n                    OK\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default connect({\n    open: state`confirmSubmitOpen`,\n    resultsUrl: state`resultsUrl`,\n    confirm: sequences`confirmSubmit`,\n}, ConfirmSubmitDialog);\n","import React from 'react';\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nfunction DebugButton(props) {\n    let button = (\n        <Button\n            aria-owns='debug-menu'\n            aria-haspopup='true'\n            onClick={() => props.setState({open: true})}\n            color='inherit'\n        >\n            {process.env.REACT_APP_GIT}\n        </Button>\n    );\n    return (\n        <div>\n            {button}\n            <Menu\n                id='debug-menu'\n                //anchorEl={button}\n                open={props.open || false}\n                onClose={() => props.setState({open: false})}\n            >\n                <MenuItem onClick={() => props.submitResults()}>\n                    Force Submit\n                </MenuItem>\n                <MenuItem onClick={() => props.disconnect()}>\n                    Disconnect Google\n                </MenuItem>\n            </Menu>\n        </div>\n    );\n}\n\nexport default connect({\n    open: state`debugMenuOpen`,\n    setState: sequences`setDebugMenuOpen`,\n    submitResults: sequences`submitResults`,\n    disconnect: sequences`disconnectGoogle`,\n}, DebugButton);\n","import React, {Component} from 'react';\nimport {connect} from '@cerebral/react';\nimport {state, sequences} from 'cerebral/tags';\n\nimport {withStyles} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport SendIcon from '@material-ui/icons/Send';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {createMuiTheme, MuiThemeProvider} from '@material-ui/core/styles';\nimport gold from '@material-ui/core/colors/amber';\n\n// Has to be last mui import\nimport {unstable_Box as Box} from '@material-ui/core/Box';\n\nimport HttpsRedirect from 'react-https-redirect';\nimport queryString from 'query-string';\n\nimport './App.css';\nimport QRDialog from './QRDialog';\nimport Questions from './Questions';\nimport PagesDrawer from './PagesDrawer';\nimport ConfirmSubmitDialog from './ConfirmSubmitDialog';\nimport DebugButton from './DebugButton';\n\n// Parse query string\nconst params = queryString.parse(window.location.search);\n\n// All the following keys are optional.\n// We try our best to provide a great default value.\nconst theme = createMuiTheme({\n    typography: {\n        useNextVariants: true,\n    },\n    palette: {\n        type: params.theme || 'dark',\n        primary: gold,\n    },\n});\n\nconst drawerWidth = 240;\nconst styles = (theme) => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    content: {\n        textAlign: 'center',\n        flexGrow: 1,\n        alignSelf: 'center',\n        maxWidth: 800,\n    },\n    appBar: {\n        top: 0,\n        bottom: 'auto',\n        marginLeft: drawerWidth,\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n        },\n    },\n    toolbar: theme.mixins.toolbar,\n    bottomBar: {\n        bottom: 0,\n        top: 'auto',\n        marginLeft: drawerWidth,\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n        },\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n        [theme.breakpoints.up('sm')]: {\n          display: 'none',\n        },\n    },\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n});\n\nwindow.addEventListener('beforeinstallprompt', (e) => {\n    // Prevent Chrome 67 and earlier from automatically showing the prompt\n    e.preventDefault();\n    // Stash the event so it can be triggered later.\n    //deferredPrompt = e;\n    if (params.install !== undefined) {\n        e.prompt(); // TODO: Don't show prompt immediately?\n    }\n});\n\nclass App extends Component {\n    componentWillMount() {\n        this.props.init();\n    }\n\n    render() {\n        let {props} = this;\n        const {classes} = props;\n\n        return (\n            <HttpsRedirect>\n            <MuiThemeProvider theme={theme}>\n            <React.Fragment>\n            <CssBaseline />\n            <div className={classes.root}>\n                <PagesDrawer\n                    classes={classes}\n                    // Screens sizes to show permanent drawer\n                    permScreens={{smUp: true}}\n                    // Screens sizes to show temporary drawer\n                    tempScreens={{xsDown: true}}\n                />\n                <AppBar position='fixed' className={classes.appBar}>\n                    <Toolbar>\n                        {params.debug !== undefined &&\n                            // Super secret debug button\n                            <DebugButton />\n                        }\n                        <IconButton\n                            className={classes.menuButton}\n                            color='inherit'\n                            onClick={() => props.showNavigation()}\n                            aria-label='Pages'>\n                            <MenuIcon\n                            />\n                        </IconButton>\n                        <Button\n                            color='inherit'\n                            disabled={\n                                props.submitting ||\n                                    props.pages.some(page => page.error)\n                            }\n                            onClick={() => props.submit()}>\n                            Submit\n                            <SendIcon />\n                        </Button>\n                        <div className={classes.grow} />\n                        <div className='g-signin2' data-theme='dark' />\n                    </Toolbar>\n                </AppBar>\n                <QRDialog\n                    open={props.droneQRScannerActive}\n                    onClose={props.hideDroneQRScanner}\n                />\n                <QRDialog\n                    open={props.sensorQRScannerActive}\n                    onClose={props.hideSensorQRScanner}\n                />\n                <ConfirmSubmitDialog />\n                <main className={classes.content}>\n                    <div className={classes.toolbar} />\n                    <Questions\n                        isSinglePage={params.singlePage !== undefined}\n                        completedHtml={(\n                            <div>\n                                <Typography color='inherit' >\n                                    Submitting Metadata\n                                </Typography>\n                                <Box p={4} >\n                                    <CircularProgress size={100} />\n                                </Box>\n                            </div>\n                        )}\n                        onComplete={({data}) => props.submitResults()}\n                    />\n                    <div className={classes.toolbar} />\n                </main>\n                <AppBar position='fixed' className={classes.bottomBar}>\n                    <MobileStepper\n                        steps={props.pages.length}\n                        position='static'\n                        activeStep={props.pageNum}\n                        className={classes.mobileStepper}\n                        nextButton={\n                            <Button\n                                color='primary'\n                                disabled={props.pageNum === props.pages.length - 1}\n                                onClick={() => props.goNextPage()}>\n                                Next\n                                <NavigateNextIcon />\n                            </Button>\n                        }\n                        backButton={\n                            <Button\n                                color='primary'\n                                disabled={props.pageNum === 0}\n                                onClick={() => props.goPreviousPage()}>\n                                <NavigateBeforeIcon />\n                                Previous\n                            </Button>\n                        }\n                    />\n                </AppBar>\n            </div>\n            </React.Fragment>\n            </MuiThemeProvider>\n            </HttpsRedirect>\n        );\n    }\n}\n\nexport default connect({\n    navigationOpen: state`navigationOpen`,\n    showNavigation: sequences`showNavigation`,\n    hideNavigation: sequences`hideNavigation`,\n    setSurveyPage: sequences`setSurveyPage`,\n    pages: state`pages`,\n    pageNum: state`pageNum`,\n    goNextPage: sequences`goNextPage`,\n    goPreviousPage: sequences`goPreviousPage`,\n    submit: sequences`completeSurvey`,\n    questions: state`questions`,\n    droneQRScannerActive: state`droneQRScannerActive`,\n    sensorQRScannerActive: state`sensorQRScannerActive`,\n    showDroneQRScanner: sequences`showDroneQRScanner`,\n    showSensorQRScanner: sequences`showSensorQRScanner`,\n    hideDroneQRScanner: sequences`hideDroneQRScanner`,\n    hideSensorQRScanner: sequences`hideSensorQRScanner`,\n    init: sequences`init`,\n    login: sequences`login`,\n    logout: sequences`logout`,\n    google: state`google`,\n    createSheet: sequences`createSheet`,\n    submitResults: sequences`submitResults`,\n    submitting: state`submitting`,\n}, withStyles(styles)(App));\n","import {Reaction} from 'cerebral';\nimport {state, moduleState, props, sequences} from 'cerebral/tags'\nimport {set, merge, when, parallel} from 'cerebral/factories';\n\nimport ls from 'local-storage';\n\nexport default (paths) => ({\n    providers: {\n        localstore: {\n            get(key) {\n                return ls.get(key);\n            },\n\n            set(key, val) {\n                return ls.set(key, val);\n            },\n\n            clear() {\n                return ls.clear();\n            },\n        },\n    },\n\n    state: {\n        initialized: false,\n    },\n\n    sequences: {\n        persistState: [\n            when(moduleState`initialized`), // Wait for init?\n            {\n                true: ({localstore, props}) => {\n                    let {key, val} = props;\n                    return {success: localstore.set(key, val)};\n                },\n                false: [],\n            },\n        ],\n        clear: [\n            parallel('clear paths', paths.map(path => [\n                ({localstore}) => ({val: localstore.clear(path)}),\n            ])),\n        ],\n        init: [\n            // Load each path from store and set it in state\n            parallel('get paths', paths.map(path => [\n                ({localstore}) => ({val: localstore.get(path)}),\n                when(props`val`, val => val === null),\n                {\n                    true: [], // Ignore null/unset keys\n                    false: [\n                        when(props`val`, val => typeof val === 'object'),\n                        {\n                            true: [merge(state`${path}`, props`val`)],\n                            false: [set(state`${path}`, props`val`)],\n                        }\n                    ],\n                }\n            ])),\n            set(moduleState`initialized`, true),\n        ],\n    },\n\n    // Generate a reaction for each path in the store\n    reactions: paths.map(path => {\n        let reaction = Reaction(\n            {\n                val: state`${path}`,\n            },\n            // TODO: Why didn't using moduleSequences work??\n            //({val, get}) => get(moduleSequences`persistState`)({key: path, val})\n            ({val, get}) => {\n                const name = reaction.modulePath.join('.');\n                const sequence = get(sequences`${name}.persistState`);\n                return sequence({key: path, val});\n            }\n        );\n        return {[path]: reaction};\n    }).reduce((obj, reaction) => Object.assign(obj, reaction), {}),\n});\n","import Promise from 'bluebird';\n//import {state} from 'cerebral';\nimport googleapi from 'google-client-api';\nimport XLSX from 'xlsx';\n\nimport * as errors from './errors';\nimport model from '../surveyModel';\n\nexport const geolocation = {\n    async getCurrentLoc() {\n        try {\n            return await new Promise((resolve, reject) =>\n                    navigator.geolocation.getCurrentPosition(resolve, reject))\n                .then(pos => pos.coords);\n        } catch (err) {\n            let msg;\n\n            switch (err.code) {\n                case 1: // PERMISSION_DENIED\n                    msg = 'Permission denied';\n                    break;\n                case 2: // POSITION_UNAVAILABLE\n                    msg = 'Position unavailable';\n                    break;\n                case 3: // TIMEOUT\n                    msg = 'Timeout obtaining position';\n                    break;\n                default:\n                    msg = 'Unknown error';\n            }\n\n            throw new errors.GetLocationError(msg);\n        }\n    }\n};\n\nexport const survey = {\n    setAnswer(name, value) {\n        model.model.setValue(name, value);\n    },\n\n    setPage(num) {\n        model.model.currentPageNo = num;\n    },\n\n    nextPage() {\n        return model.model.nextPage();\n    },\n\n    previousPage() {\n        return model.model.prevPage();\n    },\n\n    setData(data) {\n        model.model.data = data;\n    },\n\n    submit() {\n        return model.model.completeLastPage();\n    },\n};\n\nlet gapi;\nexport const gapiClient = {\n    // Do one-time gapi setup not effected by login/logout\n    async init({login, logout}) {\n        gapi = Promise.resolve(googleapi())\n            // Load client library\n            .tap(({load}) => new Promise((resolve, reject) => load('client', {\n                callback: resolve,\n                onerror: reject,\n                timeout: 10000,\n                ontimeout: reject,\n            })))\n            // Initialize client (load sheets and drive APIs)\n            .tap(({client}) => client.init({\n                discoveryDocs: [\n                    'https://www.googleapis.com/discovery/v1/apis/drive/v3/rest',\n                    'https://sheets.googleapis.com/$discovery/rest?version=v4'\n                ],\n            }))\n            // Listen for login/logout\n            .tap(({auth2}) => {\n                let auth = auth2.getAuthInstance();\n                let listener = signedIn => {\n                    if (!signedIn) {\n                        logout && this.context.get(logout)();\n                    } else {\n                        let user = auth.currentUser.get().getBasicProfile();\n                        login && this.context.get(login)({\n                            name: user.getName(),\n                        });\n                    }\n                };\n\n                auth.isSignedIn.listen(listener);\n                listener(auth.isSignedIn.get());\n            });\n        await gapi;\n    },\n\n    async get(scope) {\n        return gapi\n            .tap(({auth2}) => {\n                let user = auth2.getAuthInstance().currentUser.get();\n\n                // Request needed scopes from user\n                if (!user.hasGrantedScopes(scope)) {\n                    return user.grant({scope});\n                }\n            })\n            .get('client');\n    },\n\n    async disconnect() {\n        (await gapi).auth2.getAuthInstance().currentUser.get().disconnect();\n    },\n};\nconst appdataScope = [\n    'https://www.googleapis.com/auth/drive.appdata',\n    //'https://www.googleapis.com/auth/drive.file',\n].join(' ');\nexport const googleappdata = {\n    async getData() {\n        let {drive} = await this.context.gapiClient.get(appdataScope);\n\n        let result;\n        try {\n            ({result} = await drive.files.list({\n                spaces: 'appDataFolder',\n                q: \"name='config.json'\",\n                fields: 'files(id, appProperties)',\n            }));\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n\n        return result.files[0] && result.files[0].appProperties;\n    },\n\n    async initData({body = {}}) {\n        let {drive} = await this.context.gapiClient.get(appdataScope);\n\n        try {\n            let {result} = await drive.files.create({\n                resource: {\n                    name: 'config.json',\n                    mimeType: 'application/json',\n                    parents: ['appDataFolder'],\n                    appProperties: body,\n                },\n            });\n            return result;\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n    },\n};\nconst sheetsScope = 'https://www.googleapis.com/auth/drive.file';\nexport const googlesheets = {\n    async createSheet() {\n        let {sheets} = await this.context.gapiClient.get(sheetsScope);\n\n        const properties = {title: 'CONTxT metadata uploads'};\n        try {\n            let {result} = await sheets.spreadsheets.create({properties});\n            return result;\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n    },\n\n    async getSheet(id) {\n        let {sheets} = await this.context.gapiClient.get(sheetsScope);\n\n        let result;\n        try {\n            ({result} = await sheets.spreadsheets.values.get({\n                spreadsheetId: id,\n                range: ['Sheet1'],\n            }));\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n\n        if (!result.values) {\n            return [];\n        }\n\n        let sheet = XLSX.utils.aoa_to_sheet(result.values);\n        return XLSX.utils.sheet_to_json(sheet);\n    },\n\n    async writeSheet(id, data) {\n        const sheetsURL = 'https://docs.google.com/spreadsheets';\n        let {sheets} = await this.context.gapiClient.get(sheetsScope);\n\n        // Format data with spreadsheet lib\n        let sheet = XLSX.utils.json_to_sheet(data);\n        let values = XLSX.utils.sheet_to_json(sheet, {header: 1});\n\n        try {\n            let {result} = await sheets.spreadsheets.values.update({\n                spreadsheetId: id,\n                range: sheet['!ref'],\n                valueInputOption: 'USER_ENTERED', // 'RAW'\n                includeValuesInResponse: false,\n            }, {\n                majorDimension: 'ROWS',\n                values,\n            });\n            let row = data.length + 1;\n            return {\n                ...result,\n                // TODO: How to better handle URL from ID etc.?\n                resultsUrl: `${sheetsURL}/d/${id}#gid=0&range=${row}:${row}`\n            };\n        } catch (err) {\n            throw new errors.GAPIError(err);\n        }\n    },\n\n    async addRow(id, cols, row) {\n        let {sheets} = await this.context.gapiClient.get(sheetsScope);\n\n        return sheets.spreadsheets.values.append({\n            spreadsheetId: id,\n            valueInputOption: 'USER_ENTERED', // 'RAW'\n            insertDataOption: 'INSERT_ROWS', // 'OVERWRITE'\n            includeValuesInResponse: false,\n        }, {\n            majorDimension: 'ROWS',\n            values: [row],\n        });\n    },\n};\n\n// TODO: Better way to handle arrays and such in a spreadsheet?\nexport const serialize = {\n    serialize(data) {\n        return data.map((result, i) => {\n            let serialized = {};\n            Object.keys(result).forEach(key => {\n                try {\n                    if (typeof result[key] === 'object') {\n                        if (result[key]) {\n                            let kkey = '$$' + key;\n                            serialized[kkey] = JSON.stringify(result[key]);\n                        }\n                    } else {\n                        serialized[key] = result[key];\n                    }\n                } catch (err) {\n                    throw new errors.SerializeError(i, key, err);\n                }\n            });\n            return serialized;\n        });\n    },\n\n    deserialize(data) {\n        return data.map((result, i) => {\n            let deserialized = {};\n            Object.keys(result).forEach(key => {\n                try {\n                    if (key.startsWith('$$')) {\n                        if (result[key]) {\n                            let kkey = key.substring(2);\n                            deserialized[kkey] = JSON.parse(result[key]);\n                        }\n                    } else {\n                        deserialized[key] = result[key];\n                    }\n                } catch (err) {\n                    // +2 is for header row and 1 vs 0 indexing\n                    throw new errors.DeserializeError(i + 2, key, err);\n                }\n            });\n            return deserialized;\n        });\n    },\n};\n","import {CerebralError} from 'cerebral';\n\nexport class GetLocationError extends CerebralError {\n    constructor(message) {\n        super(message);\n        this.name = 'GetLocationError';\n    }\n}\n\nexport class GAPIError extends CerebralError {\n    constructor(err) {\n        // gapi doesn't always throw the same sorts of things..\n        let error = err;\n        if (err.result && error.result.error) {\n            error = err.result.error;\n        }\n\n        super(error.message);\n        this.name = 'GAPIError';\n        this.result = error;\n    }\n}\n\nexport class SerializeError extends CerebralError {\n    constructor(r, c, err) {\n        super(`Error serializing column \"${c}\" of row ${r}: ${err.message}`);\n        this.name = 'DeserializeError';\n        this.err = err;\n    }\n}\n\nexport class DeserializeError extends CerebralError {\n    constructor(r, c, err) {\n        super(`Error deserializing column \"${c}\" of row ${r}: ${err.message}`);\n        this.name = 'DeserializeError';\n        this.err = err;\n    }\n}\n","//import {state} from 'cerebral';\n\nexport function getCurrentLocation({geolocation}) {\n    return geolocation.getCurrentLoc()\n        .then(({latitude, longitude}) => ({currentLoc: {latitude, longitude}}));\n}\n\nexport function setAnswer({survey, props}) {\n    return survey.setAnswer(props.question, props.answer);\n}\nexport function setSurveyPage({survey, props}) {\n    return survey.setPage(props.pageNum);\n}\nexport function setSurveyData({survey, props}) {\n    return survey.setData(props.data);\n}\nexport function nextPage({survey}) {\n    return {error: survey.nextPage()};\n}\nexport function previousPage({survey}) {\n    return {error: survey.previousPage()};\n}\nexport function completeSurvey({survey, props}) {\n    return {done: survey.submit()};\n}\n\nexport async function initGapi({gapiClient, props}) {\n    return gapiClient.init(props);\n}\nexport async function disconnectGapi({gapiClient}) {\n    return gapiClient.disconnect();\n}\nexport async function createSheet({googlesheets}) {\n    let sheet = await googlesheets.createSheet();\n    return {sheet};\n}\nexport async function initSheet({googlesheets, props}) {\n    let {result} = await googlesheets.createSheet();\n    await googlesheets.addRow(result.spreadsheetId, props.headerRow);\n}\nexport async function serializeResults({serialize, props}) {\n    let {results} = props;\n\n    return {results: serialize.serialize(results)};\n}\nexport async function deserializeResults({serialize, props}) {\n    let {results} = props;\n\n    return {results: serialize.deserialize(results)};\n}\nexport async function loadPastResults({googlesheets, props}) {\n    let {resultsId} = props;\n\n    let results = (await googlesheets.getSheet(resultsId)) || [];\n\n    return {results};\n}\nexport async function uploadResults({googlesheets, props}) {\n    let {results, resultsId} = props;\n\n    return googlesheets.writeSheet(resultsId, results);\n}\n\nexport async function createAppData({googleappdata, props}) {\n    let result = await googleappdata.initData(props);\n\n    return {result};\n}\nexport async function loadAppData({googleappdata, path}) {\n    let data = await googleappdata.getData();\n\n    if (data) {\n        return path.found({body: data});\n    } else {\n        return path.notfound();\n    }\n}\n","import {set, push, when, equals} from 'cerebral/factories';\nimport {state, sequences, props} from 'cerebral/tags';\nimport * as actions from './actions';\n\nexport const init = [\n    set(props`login`, sequences`login`),\n    set(props`logout`, sequences`logout`),\n    actions.initGapi,\n    ({get}) => get(sequences`store.init`)(),\n];\n\nexport const showDroneQRScanner = [set(state`droneQRScannerActive`, true)];\nexport const hideDroneQRScanner = [set(state`droneQRScannerActive`, false)];\nexport const showSensorQRScanner = [set(state`sensorQRScannerActive`, true)];\nexport const hideSensorQRScanner = [set(state`sensorQRScannerActive`, false)];\nexport const showNavigation = [set(state`navigationOpen`, true)];\nexport const hideNavigation = [set(state`navigationOpen`, false)];\n\nexport const setSurveyData = [set(state`surveyData`, props`data`)];\nexport const setAnswer = [actions.setAnswer];\nexport const setSurveyPage = [\n    set(state`pageNum`, props`pageNum`),\n];\nexport const setPages = [set(state`pages`, props`pages`)];\nexport const goNextPage = [\n    actions.nextPage,\n    /*\n    set(props`pageNum`, state`pageNum`, num => num + 1),\n    set(state`pageNum`, props`pageNum`),\n    */\n];\nexport const goPreviousPage = [\n    actions.previousPage,\n    /*\n    set(props`pageNum`, state`pageNum`, num => num - 1),\n    set(state`pageNum`, props`pageNum`),\n    */\n];\nexport const completeSurvey = [actions.completeSurvey];\nexport const setCurrentLocation = [\n    actions.getCurrentLocation,\n    set(props`locations`, state`surveyData.locations`),\n    // Using the push factory seems to break things...\n    ({props}) => ({locations: props.locations.concat(props.currentLoc)}),\n    set(props`question`, 'locations'),\n    set(props`answer`, props`locations`),\n    actions.setAnswer,\n];\n\nexport const loadappdata = [\n    actions.loadAppData,\n    {\n        found: [],\n        notfound: [\n            actions.createSheet,\n            set(props`body`, {}),\n            set(props`body.resultsId`, props`sheet.spreadsheetId`),\n            actions.createAppData,\n        ],\n    },\n    set(state`resultsId`, props`body.resultsId`),\n];\n\n// Run _after_ login\nexport const login = [\n    loadappdata,\n    set(props`resultsId`, state`resultsId`),\n    actions.loadPastResults,\n    actions.deserializeResults,\n    set(state`pastData`, props`results`),\n    set(state`loggedin`, props`name`, name => ({name})),\n];\n// Runs _after_ logout\nexport const logout = [\n    set(state`loggedin`, false),\n    set(state`pastData`, []),\n];\n\nexport const disconnectGoogle = [actions.disconnectGapi];\n\nexport const createSheet = [actions.createSheet];\nexport const submitResults = [\n    set(state`submitting`, true),\n    when(state`loggedin`),\n    {\n        true: [],\n        false: login,\n    },\n    push(state`pastData`, state`surveyData`),\n    set(props`results`, state`pastData`),\n    actions.serializeResults,\n    set(props`resultsId`, state`resultsId`),\n    actions.uploadResults,\n    set(state`resultsUrl`, props`resultsUrl`),\n    set(state`confirmSubmitOpen`, true),\n    ({get}) => get(sequences`store.clear`)(),\n];\n\nexport const confirmSubmit = [\n    set(state`confirmSubmitOpen`, false),\n    () => window.location.reload(),\n];\n\nexport const setDebugMenuOpen = [set(state`debugMenuOpen`, props`open`)];\n\nexport const autofill = [\n    equals(props`autofill`),\n    {\n        person: [set(props`answer`, state`loggedin.name`)],\n        // TODO: Combine lat/lon into one autofill?\n        latitude: [\n            actions.getCurrentLocation,\n            set(props`answer`, props`currentLoc.latitude`),\n        ],\n        longitude: [\n            actions.getCurrentLocation,\n            set(props`answer`, props`currentLoc.longitude`),\n        ],\n        otherwise: [],\n    },\n    actions.setAnswer,\n];\n","//import { set } from 'cerebral/operators';\n//import { state } from 'cerebral/tags';\n\nimport {DateTime} from 'luxon';\n\nimport localstore from './modules/localstore';\n\nimport * as providers from './providers';\nimport * as sequences from './sequences';\nimport * as errors from './errors';\n\n// TODO: Get these from sheets\nconst sensors = [\n    {\n        make: 'Sony',\n        model: 'A6000',\n        type: 'RGB',\n    },\n    {\n        make: 'Parrot',\n        model: 'Sequoia',\n        type: 'Multispectral',\n    },\n];\nconst drones = [\n    {\n        make: 'Test',\n        model: 'testtest',\n        type: 'Fixed wing',\n    },\n];\n\n// Parts of state to keep in localstorage\nconst store = localstore(['pageNum', 'surveyData']);\n\nexport default {\n    sequences,\n    state: {\n        loggedin: null,\n        resultsId: null,\n        submitting: false,\n        navigationOpen: true,\n        confirmSubmitOpen: false,\n        droneQRScannerActive: false,\n        sensorQRScannerActive: false,\n        surveyData: null,\n        pastData: [],\n        pages: [],\n        pageNum: 0,\n        questions: {\n            showNavigationButtons: false,\n            goNextPageAutomatic: true,\n            clearInvisibleValues: 'onHidden',\n            checkErrorsMode: 'onValueChanged',\n            pages: [\n                {\n                    name: 'general',\n                    title: 'General',\n                    elements: [\n                        {\n                            name: 'purpose',\n                            title: 'Purpose',\n                            type: 'dropdown',\n                            choices: [\n                                'UAV',\n                                'Planting',\n                                'Spraying',\n                                'Tilling',\n                                'Harvest'\n                            ],\n                            defaultValue: 'UAV' // TODO: remove default later\n                        },\n                        {\n                            name: 'datetime',\n                            title: 'Date/Time of data',\n                            type: 'text',\n                            inputType: 'datetime-local',\n                            defaultValue: DateTime.local()\n                                .toFormat(\"yyyy-MM-dd'T'HH:mm:ss\"),\n                        },\n                        {\n                            type: 'panel',\n                            elements: [\n                                {\n                                    // TODO: Support selecting region on a map\n                                    name: 'locations',\n                                    title: 'Collection locations',\n                                    type: 'paneldynamic',\n                                    panelCount: 1,\n                                    minPanelCount: 1,\n                                    panelAddText: 'Add Location',\n                                    panelRemoveText: 'Remove Location',\n                                    templateTitle: 'Location #{panelIndex}',\n                                    templateElements: [\n                                        {\n                                            name: 'latitude',\n                                            title: 'Latitude',\n                                            type: 'text',\n                                            inputType: 'number',\n                                            autofill: 'latitude',\n                                            isRequired: true,\n                                        },\n                                        {\n                                            name: 'longitude',\n                                            title: 'Longitude',\n                                            type: 'text',\n                                            inputType: 'number',\n                                            autofill: 'longitude',\n                                            isRequired: true,\n                                        },\n                                    ],\n                                },\n                                /*\n                                {\n                                    name: 'location-button',\n                                    title: 'Add current location',\n                                    type: 'html',\n                                    cerebralbutton: 'setCurrentLocation',\n                                },\n                                */\n                            ],\n                        },\n                        {\n                            name: 'notes',\n                            title: 'Notes or comments',\n                            type: 'comment',\n                        },\n                    ]\n                },\n                {\n                    name: 'place',\n                    title: 'Place',\n                    visibleIf: '{purpose} == \"UAV\"',\n                    elements: [\n                        {\n                            name: 'client',\n                            title: 'Grower (or Client)',\n                            type: 'text',\n                            placeHolder: 'Farmer Frank',\n                        },\n                        {\n                            name: 'operation',\n                            title: 'Farm (or Operation)',\n                            type: 'text',\n                            placeHolder: 'Frank Farms',\n                        },\n                        {\n                            name: 'site',\n                            title: 'Field (or Site)',\n                            type: 'text',\n                            placeHolder: 'East Field',\n                        },\n                        {\n                            name: 'crop',\n                            title: 'Crop',\n                            type: 'text',\n                            placeHolder: 'corn',\n                        },\n                        {\n                            name: 'prev-crop',\n                            title: 'Previous Crop',\n                            type: 'text',\n                            placeHolder: 'beans',\n                        },\n                        {\n                            name: 'weather',\n                            title: 'Weather',\n                            type: 'panel',\n                            elements: [\n                                {\n                                    name: 'weather-button',\n                                    title: 'Get Current Weather',\n                                    type: 'html',\n                                    // TODO: Implement functionality for button\n                                    cerebralbutton: 'setCurrentWeather',\n                                },\n                                {\n                                    name: 'temperature',\n                                    title: 'Temperature',\n                                    type: 'text',\n                                    //inputType: 'number',\n                                    placeHolder: '60 F'\n                                },\n                                {\n                                    name: 'windspeed',\n                                    title: 'Wind Speed',\n                                    type: 'text',\n                                    //inputType: 'number',\n                                    placeHolder: '10 mph',\n                                },\n                                {\n                                    name: 'winddirection',\n                                    title: 'Wind Direction',\n                                    type: 'text',\n                                    //inputType: 'number',\n                                    placeHolder: '35 deg',\n                                },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    name: 'uav-operator',\n                    title: 'UAV Operator',\n                    visibleIf: '{purpose} == \"UAV\"',\n                    elements: [\n                        {\n                            name: 'remote-pics',\n                            title: 'Remote Pilot in Command (PIC)',\n                            description: 'remote PIC - A person who holds a remote pilot certificate with an sUAS rating and has the final authority and responsibility for the operation and safety of an sUAS operation conducted under part 107.',\n                            type: 'paneldynamic',\n                            panelCount: 1,\n                            minPanelCount: 1,\n                            panelAddText: 'Add Remote PIC',\n                            panelRemoveText: 'Remove Remote PIC',\n                            templateTitle: 'Remote PIC #{panelIndex}',\n                            templateElements: [\n                                {\n                                    name: 'remote-pic-name',\n                                    title: 'Name',\n                                    type: 'text',\n                                    autofill: 'person',\n                                    isRequired: true,\n                                    placeHolder: 'Rusty Shackleford'\n                                },\n                                {\n                                    name: 'remote-pic-certificate',\n                                    title: 'Certificate Number or equivalent',\n                                    type: 'text',\n                                    inputType: 'number',\n                                    isRequired: true,\n                                    placeHolder: '1234567',\n                                    validators: [\n                                        {\n                                            type: 'regex',\n                                            regex: /^[0-9]{7}$/,\n                                            text: 'Invalid license number'\n                                        }\n                                    ]\n                                },\n\n                            ],\n                        },\n                        {\n                            name: 'observer',\n                            title: 'Visual Observer (VO)',\n                            description: 'VO - A person acting as a flightcrew member who assists the small UA remote PIC and the person manipulating the controls to see and avoid other air traffic or objects aloft or on the ground.',\n                            type: 'paneldynamic',\n                            panelCount: 0,\n                            panelAddText: 'Add VO',\n                            panelRemoveText: 'Remove VO',\n                            templateTitle: 'VO #{panelIndex}',\n                            templateElements: [\n                                {\n                                    name: 'observer-name',\n                                    title: 'Name',\n                                    type: 'text',\n                                    isRequired: true,\n                                    placeHolder: 'John Doe'\n                                },\n                            ],\n                        },\n                    ]\n                },\n                {\n                    name: 'uav-drone',\n                    title: 'Drone Info',\n                    visibleIf: '{purpose} == \"UAV\"',\n                    elements: [\n                        {\n                            // TODO: make required for submission only\n                            name: 'drone-screenshots',\n                            title: 'DroneDeploy Screenshots',\n                            type: 'panel',\n                            elements: [\n                                {\n                                    name: 'drone-flight-planning',\n                                    title: 'Screenshot of Flight Planning',\n                                    type: 'file',\n                                    allowMultiple: false,\n                                },\n                                {\n                                    name: 'drone-advanced-flight-planning',\n                                    title: 'Screenshot of Advanced Flight Planning',\n                                    type: 'file',\n                                    allowMultiple: false,\n                                },\n                            ],\n                        },\n                        {\n                            name: 'drone-qr',\n                            title: 'Scan drone QR code',\n                            type: 'html',\n                            cerebralbutton: 'showDroneQRScanner',\n                        },\n                        {\n                            name: 'uav-drone-type',\n                            title: 'Type',\n                            type: 'dropdown',\n                            isRequired: true,\n                            defaultValue: 'Fixed wing',\n                            hasOther: true,\n                            choices: [\n                                'Fixed wing',\n                                'Multi-rotor',\n                                'Helicopter',\n                            ],\n                        },\n                        {\n                            name: 'uav-drone',\n                            title: 'Drone',\n                            type: 'dropdown',\n                            hideIfChoicesEmpty: true,\n                            choices: drones.map((e, i) => ({\n                                text: e.make + ' ' + e.model,\n                                value: e.make + ' ' + e.model,\n                                //value: i,\n                                visibleIf: `{uav-drone-type} == \"${e.type}\"`,\n                            })),\n                        },\n                        {\n                            name: 'uav-drone-make',\n                            title: 'Make',\n                            type: 'text',\n                            enableIf: '{uav-drone} empty'\n                        },\n                        {\n                            name: 'uav-drone-model',\n                            title: 'Model',\n                            type: 'text',\n                            enableIf: '{uav-drone} empty'\n                        },\n                    ]\n                },\n                {\n                    name: 'uav-sensors',\n                    title: 'Sensors',\n                    visibleIf: '{purpose} == \"UAV\"',\n                    elements: [\n                        {\n                            name: 'sensor-qr',\n                            type: 'html',\n                            cerebralbutton: 'showSensorQRScanner',\n                        },\n                        {\n                            name: 'sensors',\n                            title: 'Sensors',\n                            type: 'paneldynamic',\n                            panelCount: 0,\n                            panelAddText: 'Add Sensor',\n                            panelRemoveText: 'Remove Sensor',\n                            templateTitle: 'Sensor #{panelIndex}',\n                            templateElements: [\n                                {\n                                    name: 'uav-sensor-type',\n                                    valueName: 'type',\n                                    title: 'Type',\n                                    type: 'dropdown',\n                                    isRequired: true,\n                                    hasOther: true,\n                                    choices: [\n                                        'RGB',\n                                        'Multispectral',\n                                        'Hyperspectral',\n                                        'LiDAR',\n                                        'Thermal',\n                                    ],\n                                },\n                                {\n                                    name: 'uav-sensor',\n                                    valueName: 'sensor',\n                                    title: 'Sensor',\n                                    type: 'dropdown',\n                                    hideIfChoicesEmpty: true,\n                                    choices: sensors.map((e, i) => ({\n                                        text: e.make + ' ' + e.model,\n                                        value: e.make + ' ' + e.model,\n                                        //value: i,\n                                        visibleIf: `{panel.type} == \"${e.type}\"`,\n                                    })),\n                                },\n                                {\n                                    name: 'uav-sensor-make',\n                                    valueName: 'sensor.make',\n                                    title: 'Make',\n                                    type: 'text',\n                                    enableIf: '{panel.sensor} empty'\n                                },\n                                {\n                                    name: 'uav-sensor-model',\n                                    valueName: 'model',\n                                    title: 'Model',\n                                    type: 'text',\n                                    enableIf: '{panel.sensor} empty'\n                                },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    name: 'b4ufly',\n                    title: 'B4UFLY Status',\n                    visibleIf: '{purpose} == \"UAV\"',\n                    elements: [\n                        {\n                            name: 'b4ufly-status',\n                            title: 'Status',\n                            type: 'dropdown',\n                            isRequired: true,\n                            choices: [\n                                'proceed with caution',\n                                'flying in controlled airspace (class B/C/D/E)',\n                                'other',\n                            ],\n                        },\n                        {\n                            name: 'b4ufly-extra',\n                            title: '',\n                            type: 'panel',\n                            visibleIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\" or {b4ufly-status} == \"other\"',\n                            elements: [\n                                {\n                                    name: 'b4ufly-airport-operator',\n                                    title: 'Airport Operator Contact',\n                                    type: 'text',\n                                    requiredIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\n                                },\n                                {\n                                    name: 'b4ufly-control-tower',\n                                    title: 'Control Tower Contact',\n                                    type: 'text',\n                                    requiredIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\n                                },\n                                {\n                                    name: 'b4ufly-prior-authorization',\n                                    title: 'Prior Authorization',\n                                    type: 'text',\n                                    requiredIf: '{b4ufly-status} == \"flying in controlled airspace (class B/C/D/E)\"',\n                                },\n                            ],\n                        },\n                        {\n                            // TODO: What the heck even is this?\n                            name: 'b4ufly-options',\n                            title: 'Options',\n                            type: 'checkbox',\n                            isRequired: true,\n                            choices: [\n                                'checked NOTAMS',\n                                'checked flight restrictions',\n                                'checked local restrictions',\n                                'checked upcoming restrictions',\n                                'checked national parks',\n                            ],\n                        },\n                        {\n                            name: 'b4ufly-certificate',\n                            title: 'COW or COA #',\n                            type: 'text',\n                        },\n                    ],\n                },\n                {\n                    name: 'planting',\n                    visibleIf: '!({purpose} == \"UAV\")',\n                    elements: [\n                        {\n                            name: 'nyi',\n                            type: 'html',\n                            html: 'Not yet implemented'\n                        }\n                    ]\n                },\n            ]\n        },\n    },\n    catch: [\n        // TODO: Pop up toast or something about giving permission?\n        [errors.GetLocationError, ({error}) => console.error(error)],\n        [Error, ({error}) => console.error(error)],\n    ],\n    providers,\n    modules: {\n        store,\n        //storage,\n    },\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from 'cerebral';\nimport {Container} from '@cerebral/react';\nimport Devtools from 'cerebral/devtools';\n\nimport AppComponent from './App';\nimport main from './main';\n\nconst app = App(main, {\n    devtools: process.env.NODE_ENV === 'production' ?\n        null : Devtools({host: 'localhost:8000', reconnect: true}),\n    throwToConsole: true,\n    noRethrow: false,\n    returnSequencePromise: true,\n});\n\n// Run init sequence\napp.on('initialized:model', () => console.log('sadsad') && app.getSequence('init')());\n\nReactDOM.render(\n    <Container app={app}>\n        <AppComponent />\n    </Container>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nif (process.env.NODE_ENV === 'production') {\n    serviceWorker.register();\n} else {\n    serviceWorker.unregister();\n}\n"],"sourceRoot":""}